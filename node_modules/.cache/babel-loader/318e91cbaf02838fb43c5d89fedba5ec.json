{"ast":null,"code":"import { createFactory as t, Component as r } from \"react\";\nimport { polyfill as n } from \"react-lifecycles-compat\";\n\nvar e = function (t) {\n  return \"string\" == typeof t ? t : t ? t.displayName || t.name || \"Component\" : void 0;\n},\n    o = function (t, r) {\n  return function (n) {\n    return n[t] = r, n;\n  };\n},\n    u = function (t) {\n  return o(\"displayName\", t);\n},\n    p = Object.prototype.hasOwnProperty;\n\nfunction c(t, r) {\n  return t === r ? 0 !== t || 0 !== r || 1 / t == 1 / r : t != t && r != r;\n}\n\nfunction i(t, r) {\n  if (c(t, r)) return !0;\n  if (\"object\" != typeof t || null === t || \"object\" != typeof r || null === r) return !1;\n  var n = Object.keys(t),\n      e = Object.keys(r);\n  if (n.length !== e.length) return !1;\n\n  for (var o = 0; o < n.length; o++) if (!p.call(r, n[o]) || !c(t[n[o]], r[n[o]])) return !1;\n\n  return !0;\n}\n\nfunction a() {\n  return a = Object.assign || function (t) {\n    for (var r = 1; r < arguments.length; r++) {\n      var n = arguments[r];\n\n      for (var e in n) Object.prototype.hasOwnProperty.call(n, e) && (t[e] = n[e]);\n    }\n\n    return t;\n  }, a.apply(this, arguments);\n}\n\nfunction f(t, r) {\n  t.prototype = Object.create(r.prototype), t.prototype.constructor = t, s(t, r);\n}\n\nfunction s(t, r) {\n  return s = Object.setPrototypeOf || function (t, r) {\n    return t.__proto__ = r, t;\n  }, s(t, r);\n}\n\nvar l = function (t, r) {\n  return r + \"(\" + e(t) + \")\";\n},\n    v = function (n) {\n  return function (e) {\n    var o = t(e),\n        p = function (t) {\n      function r() {\n        return t.apply(this, arguments) || this;\n      }\n\n      f(r, t);\n      var e = r.prototype;\n      return e.shouldComponentUpdate = function (t) {\n        return n(this.props, t);\n      }, e.render = function () {\n        return o(this.props);\n      }, r;\n    }(r);\n\n    return \"production\" !== process.env.NODE_ENV ? u(l(e, \"shouldUpdate\"))(p) : p;\n  };\n},\n    y = function (t) {\n  var r = v(function (t, r) {\n    return !i(t, r);\n  });\n  return \"production\" !== process.env.NODE_ENV ? u(l(t, \"pure\"))(r(t)) : r(t);\n},\n    h = function () {\n  for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];\n\n  return r.reduce(function (t, r) {\n    return function () {\n      return t(r.apply(void 0, arguments));\n    };\n  }, function (t) {\n    return t;\n  });\n},\n    d = function (t, r) {\n  for (var n = {}, e = 0; e < r.length; e++) {\n    var o = r[e];\n    t.hasOwnProperty(o) && (n[o] = t[o]);\n  }\n\n  return n;\n},\n    O = function (e, o) {\n  return function (p) {\n    var c = t(p),\n        s = \"function\" == typeof e ? e : function (t, r) {\n      return !i(d(t, e), d(r, e));\n    },\n        v = function (t) {\n      function r() {\n        for (var r, n = arguments.length, e = new Array(n), u = 0; u < n; u++) e[u] = arguments[u];\n\n        return (r = t.call.apply(t, [this].concat(e)) || this).state = {\n          computedProps: o(r.props),\n          prevProps: r.props\n        }, r;\n      }\n\n      return f(r, t), r.getDerivedStateFromProps = function (t, r) {\n        return s(r.prevProps, t) ? {\n          computedProps: o(t),\n          prevProps: t\n        } : {\n          prevProps: t\n        };\n      }, r.prototype.render = function () {\n        return c(a({}, this.props, this.state.computedProps));\n      }, r;\n    }(r);\n\n    return n(v), \"production\" !== process.env.NODE_ENV ? u(l(p, \"withPropsOnChange\"))(v) : v;\n  };\n},\n    P = function (r) {\n  return function (n) {\n    var e = t(n),\n        o = function (t) {\n      return e(t);\n    };\n\n    return o.defaultProps = r, \"production\" !== process.env.NODE_ENV ? u(l(n, \"defaultProps\"))(o) : o;\n  };\n},\n    N = function (r) {\n  var n,\n      e = (n = function (t) {\n    return a({}, t, \"function\" == typeof r ? r(t) : r);\n  }, function (r) {\n    var e = t(r),\n        o = function (t) {\n      return e(n(t));\n    };\n\n    return \"production\" !== process.env.NODE_ENV ? u(l(r, \"mapProps\"))(o) : o;\n  });\n  return \"production\" !== process.env.NODE_ENV ? function (t) {\n    return u(l(t, \"withProps\"))(e(t));\n  } : e;\n},\n    m = function (t) {\n  return o(\"propTypes\", t);\n},\n    E = function (n, e, o) {\n  return function (p) {\n    var c = t(p),\n        i = function (t) {\n      function r() {\n        for (var r, n = arguments.length, e = new Array(n), u = 0; u < n; u++) e[u] = arguments[u];\n\n        return (r = t.call.apply(t, [this].concat(e)) || this).state = {\n          stateValue: \"function\" == typeof o ? o(r.props) : o\n        }, r.updateStateValue = function (t, n) {\n          return r.setState(function (r) {\n            var n = r.stateValue;\n            return {\n              stateValue: \"function\" == typeof t ? t(n) : t\n            };\n          }, n);\n        }, r;\n      }\n\n      return f(r, t), r.prototype.render = function () {\n        var t;\n        return c(a({}, this.props, ((t = {})[n] = this.state.stateValue, t[e] = this.updateStateValue, t)));\n      }, r;\n    }(r);\n\n    return \"production\" !== process.env.NODE_ENV ? u(l(p, \"withState\"))(i) : i;\n  };\n};\n\nexport { h as compose, P as defaultProps, e as getDisplayName, y as pure, u as setDisplayName, m as setPropTypes, o as setStatic, i as shallowEqual, v as shouldUpdate, N as withProps, O as withPropsOnChange, E as withState, l as wrapDisplayName };","map":{"version":3,"sources":["../src/getDisplayName.ts","../src/setStatic.ts","../src/setDisplayName.ts","../src/shallowEqual.ts","../src/wrapDisplayName.ts","../src/shouldUpdate.ts","../src/pure.ts","../src/compose.ts","../src/utils/pick.ts","../src/withPropsOnChange.ts","../src/defaultProps.ts","../src/withProps.ts","../src/mapProps.ts","../src/setPropTypes.ts","../src/withState.ts"],"names":["getDisplayName","component","displayName","name","setStatic","key","value","BaseComponent","setDisplayName","hasOwnProperty","Object","prototype","is","x","y","shallowEqual","objA","objB","keysA","keys","keysB","length","i","call","wrapDisplayName","hocName","shouldUpdate","test","factory","createFactory","ShouldUpdate","Component","shouldComponentUpdate","nextProps","this","props","render","process","env","NODE_ENV","pure","hoc","compose","funcs","reduce","a","b","arg","pick","obj","result","withPropsOnChange","shouldMapOrKeys","propsMapper","shouldMap","WithPropsOnChange","state","computedProps","_this","prevProps","getDerivedStateFromProps","prevState","polyfill","defaultProps","DefaultProps","ownerProps","withProps","createProps","MapProps","setPropTypes","propTypes","withState","stateName","stateUpdaterName","initialState","WithState","stateValue","updateStateValue","updateFn","callback","setState"],"mappings":"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","sourcesContent":["import { ComponentType } from 'react'\n\nexport const getDisplayName = (component: ComponentType<any> | string): string | undefined => {\n    if (typeof component === 'string') {\n        return component\n    }\n\n    if (!component) {\n        return undefined\n    }\n\n    return component.displayName || component.name || 'Component'\n}\n","import { ComponentType } from 'react'\n\nexport const setStatic =\n    (key: string, value: any): (<T extends ComponentType<any>>(component: T) => T) =>\n    BaseComponent => {\n        /* eslint-disable no-param-reassign */\n        // @ts-expect-error there's no way to type this\n        BaseComponent[key] = value\n        /* eslint-enable no-param-reassign */\n        return BaseComponent\n    }\n","import { ComponentType } from 'react'\nimport { setStatic } from './setStatic'\n\nexport const setDisplayName = (\n    displayName: string\n): (<T extends ComponentType<any>>(component: T) => T) => setStatic('displayName', displayName)\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule shallowEqual\n * @typechecks\n */\n\n/* eslint-disable no-self-compare */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: unknown, y: unknown): boolean {\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        // Added the nonzero y check to make Flow happy, but it is redundant\n        return x !== 0 || y !== 0 || 1 / x === 1 / y\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nexport function shallowEqual(\n    objA: Record<string, unknown>,\n    objB: Record<string, unknown>\n): boolean {\n    if (is(objA, objB)) {\n        return true\n    }\n\n    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n        return false\n    }\n\n    const keysA = Object.keys(objA)\n    const keysB = Object.keys(objB)\n\n    if (keysA.length !== keysB.length) {\n        return false\n    }\n\n    // Test for A's keys different from B.\n    for (let i = 0; i < keysA.length; i++) {\n        if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false\n        }\n    }\n\n    return true\n}\n","import { ComponentType } from 'react'\nimport { getDisplayName } from './getDisplayName'\n\nexport const wrapDisplayName = (BaseComponent: ComponentType<any>, hocName: string): string =>\n    `${hocName}(${getDisplayName(BaseComponent)})`\n","import { Component, createFactory } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { InferableComponentEnhancer, PredicateDiff } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const shouldUpdate =\n    <TProps extends Record<string, unknown>>(\n        test: PredicateDiff<TProps>\n        // eslint-disable-next-line @typescript-eslint/ban-types\n    ): InferableComponentEnhancer<{}> =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        class ShouldUpdate extends Component {\n            shouldComponentUpdate(nextProps: any) {\n                // @ts-expect-error not type-able\n                return test(this.props, nextProps)\n            }\n\n            render() {\n                // @ts-expect-error not type-able\n                return factory(this.props)\n            }\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'shouldUpdate'))(ShouldUpdate)\n        }\n        return ShouldUpdate\n    }\n","import { ComponentType } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { shallowEqual } from './shallowEqual'\nimport { shouldUpdate } from './shouldUpdate'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const pure = <TProps>(component: ComponentType<TProps>): ComponentType<TProps> => {\n    const hoc = shouldUpdate((props, nextProps) => !shallowEqual(props, nextProps))\n\n    if (process.env.NODE_ENV !== 'production') {\n        return setDisplayName(wrapDisplayName(component, 'pure'))(hoc(component))\n    }\n\n    return hoc(component)\n}\n","import { ComponentClass, ComponentType } from 'react'\n\ninterface ComponentEnhancer<TInner, TOuter> {\n    (component: ComponentType<TInner>): ComponentClass<TOuter>\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const compose = <TInner, TOuter>(...funcs: Function[]): ComponentEnhancer<TInner, TOuter> =>\n    funcs.reduce<ComponentEnhancer<TInner, TOuter>>(\n        (a, b) =>\n            (...args) =>\n                a(b(...args)),\n        arg => arg as any\n    ) as ComponentEnhancer<TInner, TOuter>\n","export const pick = (obj: Record<string, unknown>, keys: string[]) => {\n    const result: Record<string, unknown> = {}\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        // eslint-disable-next-line no-prototype-builtins\n        if (obj.hasOwnProperty(key)) {\n            result[key] = obj[key]\n        }\n    }\n    return result\n}\n","import { Component, createFactory } from 'react'\nimport { polyfill } from 'react-lifecycles-compat'\nimport { setDisplayName } from './setDisplayName'\nimport { shallowEqual } from './shallowEqual'\nimport { InferableComponentEnhancerWithProps, Mapper, PredicateDiff } from './types'\nimport { pick } from './utils'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const withPropsOnChange =\n    <TInner, TOuter extends Record<string, unknown>>(\n        shouldMapOrKeys: string[] | PredicateDiff<TOuter>,\n        propsMapper: Mapper<TOuter, TInner>\n    ): InferableComponentEnhancerWithProps<TInner & TOuter, TOuter> =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        const shouldMap =\n            typeof shouldMapOrKeys === 'function'\n                ? shouldMapOrKeys\n                : (props: TOuter, nextProps: TOuter) =>\n                      !shallowEqual(pick(props, shouldMapOrKeys), pick(nextProps, shouldMapOrKeys))\n\n        class WithPropsOnChange extends Component<TOuter> {\n            state = {\n                computedProps: propsMapper(this.props),\n                prevProps: this.props,\n            }\n\n            static getDerivedStateFromProps(\n                nextProps: TOuter,\n                prevState: WithPropsOnChange['state']\n            ) {\n                if (shouldMap(prevState.prevProps, nextProps)) {\n                    return {\n                        computedProps: propsMapper(nextProps),\n                        prevProps: nextProps,\n                    }\n                }\n\n                return {\n                    prevProps: nextProps,\n                }\n            }\n\n            render() {\n                // @ts-expect-error due to how factory is typed\n                return factory({\n                    ...this.props,\n                    ...this.state.computedProps,\n                })\n            }\n        }\n\n        polyfill(WithPropsOnChange)\n\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'withPropsOnChange'))(\n                WithPropsOnChange\n            )\n        }\n\n        return WithPropsOnChange\n    }\n","import { createFactory } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { DefaultingInferableComponentEnhancer } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const defaultProps =\n    <T = {}>(props: T): DefaultingInferableComponentEnhancer<T> =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        const DefaultProps = (ownerProps: any) => factory(ownerProps)\n        DefaultProps.defaultProps = props\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'defaultProps'))(DefaultProps)\n        }\n        return DefaultProps\n    }\n","import { mapProps } from './mapProps'\nimport { setDisplayName } from './setDisplayName'\nimport { InferableComponentEnhancerWithProps, Mapper } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const withProps = <TInner, TOuter>(\n    createProps: TInner | Mapper<TOuter, TInner>\n): InferableComponentEnhancerWithProps<TInner & TOuter, TOuter> => {\n    const hoc = mapProps(props => ({\n        ...(props as any),\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        ...(typeof createProps === 'function' ? (createProps as Function)(props) : createProps),\n    }))\n    if (process.env.NODE_ENV !== 'production') {\n        return ((BaseComponent: any) =>\n            setDisplayName(wrapDisplayName(BaseComponent, 'withProps'))(hoc(BaseComponent))) as any\n    }\n    return hoc as InferableComponentEnhancerWithProps<TInner & TOuter, TOuter>\n}\n","import { createFactory } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { InferableComponentEnhancerWithProps, Mapper } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const mapProps =\n    <TInner, TOuter>(\n        propsMapper: Mapper<TOuter, TInner>\n    ): InferableComponentEnhancerWithProps<TInner, TOuter> =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        const MapProps = (props: any) => factory(propsMapper(props))\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'mapProps'))(MapProps)\n        }\n        return MapProps\n    }\n","import { ComponentType, ValidationMap } from 'react'\nimport { setStatic } from './setStatic'\n\nexport const setPropTypes = <P>(\n    propTypes: ValidationMap<P>\n): (<T extends ComponentType<P>>(component: T) => T) => setStatic('propTypes', propTypes)\n","import { createFactory, Component } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { InferableComponentEnhancerWithProps, Mapper } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\ntype StateProps<TState, TStateName extends string, TStateUpdaterName extends string> = {\n    [stateName in TStateName]: TState\n} & { [stateUpdateName in TStateUpdaterName]: (state: TState) => TState }\n\nexport const withState =\n    <TOuter, TState, TStateName extends string, TStateUpdaterName extends string>(\n        stateName: TStateName,\n        stateUpdaterName: TStateUpdaterName,\n        initialState: TState | Mapper<TOuter, TState>\n    ): InferableComponentEnhancerWithProps<\n        StateProps<TState, TStateName, TStateUpdaterName>,\n        TOuter\n    > =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        class WithState extends Component {\n            state = {\n                stateValue:\n                    typeof initialState === 'function'\n                        ? // eslint-disable-next-line @typescript-eslint/ban-types\n                          (initialState as Function)(this.props)\n                        : initialState,\n            }\n\n            updateStateValue = (updateFn: any, callback: any) =>\n                this.setState(\n                    ({ stateValue }: any) => ({\n                        stateValue:\n                            typeof updateFn === 'function' ? updateFn(stateValue) : updateFn,\n                    }),\n                    callback\n                )\n\n            render() {\n                // @ts-expect-error due to how factory is typed\n                return factory({\n                    ...this.props,\n                    [stateName]: this.state.stateValue,\n                    [stateUpdaterName]: this.updateStateValue,\n                })\n            }\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'withState'))(WithState)\n        }\n        return WithState\n    }\n"]},"metadata":{},"sourceType":"module"}