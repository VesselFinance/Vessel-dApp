{"ast":null,"code":"import { jsx as t, jsxs as e } from \"react/jsx-runtime\";\nimport { scaleLinear as i } from \"d3-scale\";\nimport { getValueFormatter as n, useTheme as o, degreesToRadians as r } from \"@nivo/core\";\nimport { computeContinuousColorScaleColorStops as l } from \"@nivo/colors\";\nimport * as a from \"react\";\nimport { Fragment as c, useState as s, useCallback as d, useMemo as h } from \"react\";\nimport g from \"prop-types\";\n\nvar m = function (e) {\n  var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n  return t(\"circle\", {\n    r: o / 2,\n    cx: i + o / 2,\n    cy: n + o / 2,\n    fill: r,\n    opacity: a,\n    strokeWidth: s,\n    stroke: void 0 === d ? \"transparent\" : d,\n    style: {\n      pointerEvents: \"none\"\n    }\n  });\n},\n    f = function (e) {\n  var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n  return t(\"g\", {\n    transform: \"translate(\" + i + \",\" + n + \")\",\n    children: t(\"path\", {\n      d: \"\\n                    M\" + o / 2 + \" 0\\n                    L\" + .8 * o + \" \" + o / 2 + \"\\n                    L\" + o / 2 + \" \" + o + \"\\n                    L\" + .2 * o + \" \" + o / 2 + \"\\n                    L\" + o / 2 + \" 0\\n                \",\n      fill: r,\n      opacity: a,\n      strokeWidth: s,\n      stroke: void 0 === d ? \"transparent\" : d,\n      style: {\n        pointerEvents: \"none\"\n      }\n    })\n  });\n},\n    u = function (e) {\n  var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n  return t(\"rect\", {\n    x: i,\n    y: n,\n    fill: r,\n    opacity: a,\n    strokeWidth: s,\n    stroke: void 0 === d ? \"transparent\" : d,\n    width: o,\n    height: o,\n    style: {\n      pointerEvents: \"none\"\n    }\n  });\n},\n    v = function (e) {\n  var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n  return t(\"g\", {\n    transform: \"translate(\" + i + \",\" + n + \")\",\n    children: t(\"path\", {\n      d: \"\\n                M\" + o / 2 + \" 0\\n                L\" + o + \" \" + o + \"\\n                L0 \" + o + \"\\n                L\" + o / 2 + \" 0\\n            \",\n      fill: r,\n      opacity: a,\n      strokeWidth: s,\n      stroke: void 0 === d ? \"transparent\" : d,\n      style: {\n        pointerEvents: \"none\"\n      }\n    })\n  });\n};\n\nfunction p() {\n  return p = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n\n    return t;\n  }, p.apply(this, arguments);\n}\n\nvar y = {\n  length: 200,\n  thickness: 16,\n  direction: \"row\",\n  tickPosition: \"after\",\n  tickSize: 4,\n  tickSpacing: 3,\n  tickOverlap: !1,\n  tickFormat: function (t) {\n    return \"\" + t;\n  },\n  titleAlign: \"start\",\n  titleOffset: 4\n},\n    b = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n},\n    k = function (t) {\n  var e,\n      i = t.direction,\n      n = t.itemsSpacing,\n      o = t.padding,\n      r = t.itemCount,\n      l = t.itemWidth,\n      a = t.itemHeight;\n  if (\"number\" != typeof o && (\"object\" != typeof (e = o) || Array.isArray(e) || null === e)) throw new Error(\"Invalid property padding, must be one of: number, object\");\n  var c = \"number\" == typeof o ? {\n    top: o,\n    right: o,\n    bottom: o,\n    left: o\n  } : p({}, b, o),\n      s = c.left + c.right,\n      d = c.top + c.bottom,\n      h = l + s,\n      g = a + d,\n      m = (r - 1) * n;\n  return \"row\" === i ? h = l * r + m + s : \"column\" === i && (g = a * r + m + d), {\n    width: h,\n    height: g,\n    padding: c\n  };\n},\n    x = function (t) {\n  var e = t.anchor,\n      i = t.translateX,\n      n = t.translateY,\n      o = t.containerWidth,\n      r = t.containerHeight,\n      l = t.width,\n      a = t.height,\n      c = i,\n      s = n;\n\n  switch (e) {\n    case \"top\":\n      c += (o - l) / 2;\n      break;\n\n    case \"top-right\":\n      c += o - l;\n      break;\n\n    case \"right\":\n      c += o - l, s += (r - a) / 2;\n      break;\n\n    case \"bottom-right\":\n      c += o - l, s += r - a;\n      break;\n\n    case \"bottom\":\n      c += (o - l) / 2, s += r - a;\n      break;\n\n    case \"bottom-left\":\n      s += r - a;\n      break;\n\n    case \"left\":\n      s += (r - a) / 2;\n      break;\n\n    case \"center\":\n      c += (o - l) / 2, s += (r - a) / 2;\n  }\n\n  return {\n    x: c,\n    y: s\n  };\n},\n    S = function (t) {\n  var e,\n      i,\n      n,\n      o,\n      r,\n      l,\n      a = t.direction,\n      c = t.justify,\n      s = t.symbolSize,\n      d = t.symbolSpacing,\n      h = t.width,\n      g = t.height;\n\n  switch (a) {\n    case \"left-to-right\":\n      e = 0, i = (g - s) / 2, o = g / 2, l = \"central\", c ? (n = h, r = \"end\") : (n = s + d, r = \"start\");\n      break;\n\n    case \"right-to-left\":\n      e = h - s, i = (g - s) / 2, o = g / 2, l = \"central\", c ? (n = 0, r = \"start\") : (n = h - s - d, r = \"end\");\n      break;\n\n    case \"top-to-bottom\":\n      e = (h - s) / 2, i = 0, n = h / 2, r = \"middle\", c ? (o = g, l = \"alphabetic\") : (o = s + d, l = \"text-before-edge\");\n      break;\n\n    case \"bottom-to-top\":\n      e = (h - s) / 2, i = g - s, n = h / 2, r = \"middle\", c ? (o = 0, l = \"text-before-edge\") : (o = g - s - d, l = \"alphabetic\");\n  }\n\n  return {\n    symbolX: e,\n    symbolY: i,\n    labelX: n,\n    labelY: o,\n    labelAnchor: r,\n    labelAlignment: l\n  };\n},\n    A = function (t) {\n  var e,\n      o = t.scale,\n      r = t.ticks,\n      a = t.length,\n      c = void 0 === a ? y.length : a,\n      s = t.thickness,\n      d = void 0 === s ? y.thickness : s,\n      h = t.direction,\n      g = void 0 === h ? y.direction : h,\n      m = t.tickPosition,\n      f = void 0 === m ? y.tickPosition : m,\n      u = t.tickSize,\n      v = void 0 === u ? y.tickSize : u,\n      p = t.tickSpacing,\n      b = void 0 === p ? y.tickSpacing : p,\n      k = t.tickOverlap,\n      x = void 0 === k ? y.tickOverlap : k,\n      S = t.tickFormat,\n      A = void 0 === S ? y.tickFormat : S,\n      W = t.title,\n      z = t.titleAlign,\n      C = void 0 === z ? y.titleAlign : z,\n      O = t.titleOffset,\n      B = void 0 === O ? y.titleOffset : O,\n      w = \"column\" === g ? [].concat(o.domain()).reverse() : o.domain(),\n      X = i().domain(w);\n  2 === w.length ? X.range([0, c]) : 3 === w.length && X.range([0, c / 2, c]), e = \"thresholds\" in o ? [w[0]].concat(o.thresholds(), [w[1]]) : Array.isArray(r) ? r : o.ticks(r);\n  var Y,\n      H,\n      E,\n      j,\n      T,\n      L,\n      M = l(o, 32),\n      F = n(A),\n      P = [],\n      R = 0,\n      q = 0;\n\n  if (\"row\" === g) {\n    var V, D, G;\n    Y = c, H = d, q = 1;\n    var I;\n    T = 0, E = \"start\" === C ? 0 : \"middle\" === C ? c / 2 : c, \"before\" === f ? (V = -v, D = x ? d : 0, G = -v - b, I = \"alphabetic\", j = d + B, L = \"hanging\") : (V = x ? 0 : d, G = (D = d + v) + b, I = \"hanging\", j = -B, L = \"alphabetic\"), e.forEach(function (t) {\n      var e = X(t);\n      P.push({\n        x1: e,\n        y1: V,\n        x2: e,\n        y2: D,\n        text: F(t),\n        textX: e,\n        textY: G,\n        textHorizontalAlign: \"middle\",\n        textVerticalAlign: I\n      });\n    });\n  } else {\n    var N, _, J, K;\n\n    Y = d, H = c, R = 1;\n    T = -90, j = \"start\" === C ? c : \"middle\" === C ? c / 2 : 0, \"before\" === f ? (_ = x ? d : 0, J = (N = -v) - b, K = \"end\", E = d + B, L = \"hanging\") : (N = x ? 0 : d, J = (_ = d + v) + b, K = \"start\", E = -B, L = \"alphabetic\"), e.forEach(function (t) {\n      var e = X(t);\n      P.push({\n        x1: N,\n        y1: e,\n        x2: _,\n        y2: e,\n        text: F(t),\n        textX: J,\n        textY: e,\n        textHorizontalAlign: K,\n        textVerticalAlign: \"central\"\n      });\n    });\n  }\n\n  return {\n    width: Y,\n    height: H,\n    gradientX1: 0,\n    gradientY1: R,\n    gradientX2: q,\n    gradientY2: 0,\n    colorStops: M,\n    ticks: P,\n    titleText: W,\n    titleX: E,\n    titleY: j,\n    titleRotation: T,\n    titleHorizontalAlign: C,\n    titleVerticalAlign: L\n  };\n},\n    W = function (i) {\n  var n = i.scale,\n      r = i.ticks,\n      l = i.length,\n      a = void 0 === l ? y.length : l,\n      s = i.thickness,\n      d = void 0 === s ? y.thickness : s,\n      h = i.direction,\n      g = void 0 === h ? y.direction : h,\n      m = i.tickPosition,\n      f = void 0 === m ? y.tickPosition : m,\n      u = i.tickSize,\n      v = void 0 === u ? y.tickSize : u,\n      b = i.tickSpacing,\n      k = void 0 === b ? y.tickSpacing : b,\n      x = i.tickOverlap,\n      S = void 0 === x ? y.tickOverlap : x,\n      W = i.tickFormat,\n      z = void 0 === W ? y.tickFormat : W,\n      C = i.title,\n      O = i.titleAlign,\n      B = void 0 === O ? y.titleAlign : O,\n      w = i.titleOffset,\n      X = A({\n    scale: n,\n    ticks: r,\n    length: a,\n    thickness: d,\n    direction: g,\n    tickPosition: f,\n    tickSize: v,\n    tickSpacing: k,\n    tickOverlap: S,\n    tickFormat: z,\n    title: C,\n    titleAlign: B,\n    titleOffset: void 0 === w ? y.titleOffset : w\n  }),\n      Y = X.width,\n      H = X.height,\n      E = X.gradientX1,\n      j = X.gradientY1,\n      T = X.gradientX2,\n      L = X.gradientY2,\n      M = X.ticks,\n      F = X.colorStops,\n      P = X.titleText,\n      R = X.titleX,\n      q = X.titleY,\n      V = X.titleRotation,\n      D = X.titleVerticalAlign,\n      G = X.titleHorizontalAlign,\n      I = o(),\n      N = \"ContinuousColorsLegendSvgGradient.\" + g + \".\" + F.map(function (t) {\n    return t.offset;\n  }).join(\"_\");\n  return e(\"g\", {\n    children: [t(\"defs\", {\n      children: t(\"linearGradient\", {\n        id: N,\n        x1: E,\n        y1: j,\n        x2: T,\n        y2: L,\n        children: F.map(function (e) {\n          return t(\"stop\", p({}, e));\n        })\n      })\n    }), P && t(\"text\", {\n      transform: \"translate(\" + R + \", \" + q + \") rotate(\" + V + \")\",\n      textAnchor: G,\n      dominantBaseline: D,\n      style: I.legends.title.text,\n      children: P\n    }), t(\"rect\", {\n      width: Y,\n      height: H,\n      fill: \"url(#\" + N\n    }), M.map(function (i, n) {\n      return e(c, {\n        children: [t(\"line\", {\n          x1: i.x1,\n          y1: i.y1,\n          x2: i.x2,\n          y2: i.y2,\n          style: I.legends.ticks.line\n        }), t(\"text\", {\n          x: i.textX,\n          y: i.textY,\n          textAnchor: i.textHorizontalAlign,\n          dominantBaseline: i.textVerticalAlign,\n          style: I.legends.ticks.text,\n          children: i.text\n        })]\n      }, n);\n    })]\n  });\n},\n    z = [\"containerWidth\", \"containerHeight\", \"anchor\", \"translateX\", \"translateY\", \"length\", \"thickness\", \"direction\"],\n    C = function (e) {\n  var i,\n      n,\n      o = e.containerWidth,\n      r = e.containerHeight,\n      l = e.anchor,\n      a = e.translateX,\n      c = void 0 === a ? 0 : a,\n      s = e.translateY,\n      d = void 0 === s ? 0 : s,\n      h = e.length,\n      g = void 0 === h ? y.length : h,\n      m = e.thickness,\n      f = void 0 === m ? y.thickness : m,\n      u = e.direction,\n      v = void 0 === u ? y.direction : u,\n      b = function (t, e) {\n    if (null == t) return {};\n    var i,\n        n,\n        o = {},\n        r = Object.keys(t);\n\n    for (n = 0; n < r.length; n++) i = r[n], e.indexOf(i) >= 0 || (o[i] = t[i]);\n\n    return o;\n  }(e, z);\n\n  \"row\" === v ? (i = g, n = f) : (i = f, n = g);\n  var k = x({\n    anchor: l,\n    translateX: c,\n    translateY: d,\n    containerWidth: o,\n    containerHeight: r,\n    width: i,\n    height: n\n  }),\n      S = k.x,\n      A = k.y;\n  return t(\"g\", {\n    transform: \"translate(\" + S + \", \" + A + \")\",\n    children: t(W, p({\n      length: g,\n      thickness: f,\n      direction: v\n    }, b))\n  });\n},\n    O = {\n  circle: m,\n  diamond: f,\n  square: u,\n  triangle: v\n},\n    B = function (i) {\n  var n,\n      r,\n      l,\n      c,\n      h,\n      g,\n      m,\n      f,\n      u,\n      v,\n      y,\n      b = i.x,\n      k = i.y,\n      x = i.width,\n      A = i.height,\n      W = i.data,\n      z = i.direction,\n      C = void 0 === z ? \"left-to-right\" : z,\n      B = i.justify,\n      w = void 0 !== B && B,\n      X = i.textColor,\n      Y = i.background,\n      H = void 0 === Y ? \"transparent\" : Y,\n      E = i.opacity,\n      j = void 0 === E ? 1 : E,\n      T = i.symbolShape,\n      L = void 0 === T ? \"square\" : T,\n      M = i.symbolSize,\n      F = void 0 === M ? 16 : M,\n      P = i.symbolSpacing,\n      R = void 0 === P ? 8 : P,\n      q = i.symbolBorderWidth,\n      V = void 0 === q ? 0 : q,\n      D = i.symbolBorderColor,\n      G = void 0 === D ? \"transparent\" : D,\n      I = i.onClick,\n      N = i.onMouseEnter,\n      _ = i.onMouseLeave,\n      J = i.toggleSerie,\n      K = i.effects,\n      Q = s({}),\n      U = Q[0],\n      Z = Q[1],\n      $ = o(),\n      tt = d(function (t) {\n    if (K) {\n      var e = K.filter(function (t) {\n        return \"hover\" === t.on;\n      }).reduce(function (t, e) {\n        return p({}, t, e.style);\n      }, {});\n      Z(e);\n    }\n\n    null == N || N(W, t);\n  }, [N, W, K]),\n      et = d(function (t) {\n    if (K) {\n      var e = K.filter(function (t) {\n        return \"hover\" !== t.on;\n      }).reduce(function (t, e) {\n        return p({}, t, e.style);\n      }, {});\n      Z(e);\n    }\n\n    null == _ || _(W, t);\n  }, [_, W, K]),\n      it = S({\n    direction: C,\n    justify: w,\n    symbolSize: null != (n = U.symbolSize) ? n : F,\n    symbolSpacing: R,\n    width: x,\n    height: A\n  }),\n      nt = it.symbolX,\n      ot = it.symbolY,\n      rt = it.labelX,\n      lt = it.labelY,\n      at = it.labelAnchor,\n      ct = it.labelAlignment,\n      st = [I, N, _, J].some(function (t) {\n    return void 0 !== t;\n  }),\n      dt = \"function\" == typeof L ? L : O[L];\n  return e(\"g\", {\n    transform: \"translate(\" + b + \",\" + k + \")\",\n    style: {\n      opacity: null != (r = U.itemOpacity) ? r : j\n    },\n    children: [t(\"rect\", {\n      width: x,\n      height: A,\n      fill: null != (l = U.itemBackground) ? l : H,\n      style: {\n        cursor: st ? \"pointer\" : \"auto\"\n      },\n      onClick: function (t) {\n        null == I || I(W, t), null == J || J(W.id);\n      },\n      onMouseEnter: tt,\n      onMouseLeave: et\n    }), a.createElement(dt, p({\n      id: W.id,\n      x: nt,\n      y: ot,\n      size: null != (c = U.symbolSize) ? c : F,\n      fill: null != (h = null != (g = W.fill) ? g : W.color) ? h : \"black\",\n      borderWidth: null != (m = U.symbolBorderWidth) ? m : V,\n      borderColor: null != (f = U.symbolBorderColor) ? f : G\n    }, W.hidden ? $.legends.hidden.symbol : void 0)), t(\"text\", {\n      textAnchor: at,\n      style: p({}, $.legends.text, {\n        fill: null != (u = null != (v = null != (y = U.itemTextColor) ? y : X) ? v : $.legends.text.fill) ? u : \"black\",\n        dominantBaseline: ct,\n        pointerEvents: \"none\",\n        userSelect: \"none\"\n      }, W.hidden ? $.legends.hidden.text : void 0),\n      x: rt,\n      y: lt,\n      children: W.label\n    })]\n  });\n},\n    w = function (e) {\n  var i = e.data,\n      n = e.x,\n      o = e.y,\n      r = e.direction,\n      l = e.padding,\n      a = void 0 === l ? 0 : l,\n      c = e.justify,\n      s = e.effects,\n      d = e.itemWidth,\n      h = e.itemHeight,\n      g = e.itemDirection,\n      m = void 0 === g ? \"left-to-right\" : g,\n      f = e.itemsSpacing,\n      u = void 0 === f ? 0 : f,\n      v = e.itemTextColor,\n      p = e.itemBackground,\n      y = void 0 === p ? \"transparent\" : p,\n      b = e.itemOpacity,\n      x = void 0 === b ? 1 : b,\n      S = e.symbolShape,\n      A = e.symbolSize,\n      W = e.symbolSpacing,\n      z = e.symbolBorderWidth,\n      C = e.symbolBorderColor,\n      O = e.onClick,\n      w = e.onMouseEnter,\n      X = e.onMouseLeave,\n      Y = e.toggleSerie,\n      H = k({\n    itemCount: i.length,\n    itemWidth: d,\n    itemHeight: h,\n    itemsSpacing: u,\n    direction: r,\n    padding: a\n  }).padding,\n      E = \"row\" === r ? d + u : 0,\n      j = \"column\" === r ? h + u : 0;\n  return t(\"g\", {\n    transform: \"translate(\" + n + \",\" + o + \")\",\n    children: i.map(function (e, i) {\n      return t(B, {\n        data: e,\n        x: i * E + H.left,\n        y: i * j + H.top,\n        width: d,\n        height: h,\n        direction: m,\n        justify: c,\n        effects: s,\n        textColor: v,\n        background: y,\n        opacity: x,\n        symbolShape: S,\n        symbolSize: A,\n        symbolSpacing: W,\n        symbolBorderWidth: z,\n        symbolBorderColor: C,\n        onClick: O,\n        onMouseEnter: w,\n        onMouseLeave: X,\n        toggleSerie: Y\n      }, i);\n    })\n  });\n},\n    X = function (e) {\n  var i = e.data,\n      n = e.containerWidth,\n      o = e.containerHeight,\n      r = e.translateX,\n      l = void 0 === r ? 0 : r,\n      a = e.translateY,\n      c = void 0 === a ? 0 : a,\n      s = e.anchor,\n      d = e.direction,\n      h = e.padding,\n      g = void 0 === h ? 0 : h,\n      m = e.justify,\n      f = e.itemsSpacing,\n      u = void 0 === f ? 0 : f,\n      v = e.itemWidth,\n      p = e.itemHeight,\n      y = e.itemDirection,\n      b = e.itemTextColor,\n      S = e.itemBackground,\n      A = e.itemOpacity,\n      W = e.symbolShape,\n      z = e.symbolSize,\n      C = e.symbolSpacing,\n      O = e.symbolBorderWidth,\n      B = e.symbolBorderColor,\n      X = e.onClick,\n      Y = e.onMouseEnter,\n      H = e.onMouseLeave,\n      E = e.toggleSerie,\n      j = e.effects,\n      T = k({\n    itemCount: i.length,\n    itemsSpacing: u,\n    itemWidth: v,\n    itemHeight: p,\n    direction: d,\n    padding: g\n  }),\n      L = T.width,\n      M = T.height,\n      F = x({\n    anchor: s,\n    translateX: l,\n    translateY: c,\n    containerWidth: n,\n    containerHeight: o,\n    width: L,\n    height: M\n  }),\n      P = F.x,\n      R = F.y;\n  return t(w, {\n    data: i,\n    x: P,\n    y: R,\n    direction: d,\n    padding: g,\n    justify: m,\n    effects: j,\n    itemsSpacing: u,\n    itemWidth: v,\n    itemHeight: p,\n    itemDirection: y,\n    itemTextColor: b,\n    itemBackground: S,\n    itemOpacity: A,\n    symbolShape: W,\n    symbolSize: z,\n    symbolSpacing: C,\n    symbolBorderWidth: O,\n    symbolBorderColor: B,\n    onClick: X,\n    onMouseEnter: Y,\n    onMouseLeave: H,\n    toggleSerie: \"boolean\" == typeof E ? void 0 : E\n  });\n},\n    Y = {\n  start: \"left\",\n  middle: \"center\",\n  end: \"right\"\n},\n    H = function (t, e) {\n  var i = e.data,\n      n = e.containerWidth,\n      o = e.containerHeight,\n      r = e.translateX,\n      l = void 0 === r ? 0 : r,\n      a = e.translateY,\n      c = void 0 === a ? 0 : a,\n      s = e.anchor,\n      d = e.direction,\n      h = e.padding,\n      g = void 0 === h ? 0 : h,\n      m = e.justify,\n      f = void 0 !== m && m,\n      u = e.itemsSpacing,\n      v = void 0 === u ? 0 : u,\n      p = e.itemWidth,\n      y = e.itemHeight,\n      b = e.itemDirection,\n      A = void 0 === b ? \"left-to-right\" : b,\n      W = e.itemTextColor,\n      z = e.symbolSize,\n      C = void 0 === z ? 16 : z,\n      O = e.symbolSpacing,\n      B = void 0 === O ? 8 : O,\n      w = e.theme,\n      X = k({\n    itemCount: i.length,\n    itemWidth: p,\n    itemHeight: y,\n    itemsSpacing: v,\n    direction: d,\n    padding: g\n  }),\n      H = X.width,\n      E = X.height,\n      j = X.padding,\n      T = x({\n    anchor: s,\n    translateX: l,\n    translateY: c,\n    containerWidth: n,\n    containerHeight: o,\n    width: H,\n    height: E\n  }),\n      L = T.x,\n      M = T.y,\n      F = \"row\" === d ? p + v : 0,\n      P = \"column\" === d ? y + v : 0;\n  t.save(), t.translate(L, M), t.font = w.legends.text.fontSize + \"px \" + (w.legends.text.fontFamily || \"sans-serif\"), i.forEach(function (e, i) {\n    var n,\n        o,\n        r = i * F + j.left,\n        l = i * P + j.top,\n        a = S({\n      direction: A,\n      justify: f,\n      symbolSize: C,\n      symbolSpacing: B,\n      width: p,\n      height: y\n    }),\n        c = a.symbolX,\n        s = a.symbolY,\n        d = a.labelX,\n        h = a.labelY,\n        g = a.labelAnchor,\n        m = a.labelAlignment;\n    t.fillStyle = null != (n = e.color) ? n : \"black\", t.fillRect(r + c, l + s, C, C), t.textAlign = Y[g], \"central\" === m && (t.textBaseline = \"middle\"), t.fillStyle = null != (o = null != W ? W : w.legends.text.fill) ? o : \"black\", t.fillText(String(e.label), r + d, l + h);\n  }), t.restore();\n},\n    E = function (t, e) {\n  var i = e.containerWidth,\n      n = e.containerHeight,\n      o = e.anchor,\n      l = e.translateX,\n      a = void 0 === l ? 0 : l,\n      c = e.translateY,\n      s = void 0 === c ? 0 : c,\n      d = e.scale,\n      h = e.length,\n      g = void 0 === h ? y.length : h,\n      m = e.thickness,\n      f = void 0 === m ? y.thickness : m,\n      u = e.direction,\n      v = void 0 === u ? y.direction : u,\n      p = e.ticks,\n      b = e.tickPosition,\n      k = void 0 === b ? y.tickPosition : b,\n      S = e.tickSize,\n      W = void 0 === S ? y.tickSize : S,\n      z = e.tickSpacing,\n      C = void 0 === z ? y.tickSpacing : z,\n      O = e.tickOverlap,\n      B = void 0 === O ? y.tickOverlap : O,\n      w = e.tickFormat,\n      X = void 0 === w ? y.tickFormat : w,\n      Y = e.title,\n      H = e.titleAlign,\n      E = void 0 === H ? y.titleAlign : H,\n      j = e.titleOffset,\n      T = void 0 === j ? y.titleOffset : j,\n      L = e.theme,\n      M = A({\n    scale: d,\n    ticks: p,\n    length: g,\n    thickness: f,\n    direction: v,\n    tickPosition: k,\n    tickSize: W,\n    tickSpacing: C,\n    tickOverlap: B,\n    tickFormat: X,\n    title: Y,\n    titleAlign: E,\n    titleOffset: T\n  }),\n      F = M.width,\n      P = M.height,\n      R = M.gradientX1,\n      q = M.gradientY1,\n      V = M.gradientX2,\n      D = M.gradientY2,\n      G = M.colorStops,\n      I = M.ticks,\n      N = M.titleText,\n      _ = M.titleX,\n      J = M.titleY,\n      K = M.titleRotation,\n      Q = M.titleVerticalAlign,\n      U = M.titleHorizontalAlign,\n      Z = x({\n    anchor: o,\n    translateX: a,\n    translateY: s,\n    containerWidth: i,\n    containerHeight: n,\n    width: F,\n    height: P\n  }),\n      $ = Z.x,\n      tt = Z.y,\n      et = {\n    font: t.font,\n    textAlign: t.textAlign,\n    textBaseline: t.textBaseline\n  };\n  t.save(), t.translate($, tt);\n  var it = t.createLinearGradient(R * F, q * P, V * F, D * P);\n  G.forEach(function (t) {\n    it.addColorStop(t.offset, t.stopColor);\n  }), t.fillStyle = it, t.fillRect(0, 0, F, P), t.font = (L.legends.ticks.text.fontWeight ? L.legends.ticks.text.fontWeight + \" \" : \"\") + L.legends.ticks.text.fontSize + \"px \" + L.legends.ticks.text.fontFamily, I.forEach(function (e) {\n    var i;\n    (null != (i = L.legends.ticks.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(L.axis.ticks.line.strokeWidth), L.axis.ticks.line.stroke && (t.strokeStyle = L.axis.ticks.line.stroke), t.lineCap = \"square\", t.beginPath(), t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.stroke()), L.legends.ticks.text.fill && (t.fillStyle = L.legends.ticks.text.fill), t.textAlign = \"middle\" === e.textHorizontalAlign ? \"center\" : e.textHorizontalAlign, t.textBaseline = \"central\" === e.textVerticalAlign ? \"middle\" : e.textVerticalAlign, t.fillText(e.text, e.textX, e.textY);\n  }), N && (t.save(), t.translate(_, J), t.rotate(r(K)), t.font = (L.legends.title.text.fontWeight ? L.legends.title.text.fontWeight + \" \" : \"\") + L.legends.title.text.fontSize + \"px \" + L.legends.title.text.fontFamily, L.legends.title.text.fill && (t.fillStyle = L.legends.title.text.fill), t.textAlign = \"middle\" === U ? \"center\" : U, t.textBaseline = Q, t.fillText(N, 0, 0), t.restore()), t.restore(), t.font = et.font, t.textAlign = et.textAlign, t.textBaseline = et.textBaseline;\n},\n    j = function (t) {\n  var e = t.scale,\n      i = t.domain,\n      n = t.reverse,\n      o = void 0 !== n && n,\n      r = t.valueFormat,\n      l = void 0 === r ? function (t) {\n    return t;\n  } : r,\n      a = t.separator,\n      c = void 0 === a ? \" - \" : a;\n  return h(function () {\n    var t = (null != i ? i : e.range()).map(function (t, i) {\n      var n = e.invertExtent(t),\n          o = n[0],\n          r = n[1];\n      return {\n        id: t,\n        index: i,\n        extent: [o, r],\n        label: \"\" + l(o) + c + l(r),\n        value: e(o),\n        color: t\n      };\n    });\n    return o && t.reverse(), t;\n  }, [i, e, o, c, l]);\n},\n    T = {\n  data: g.arrayOf(g.object),\n  anchor: g.oneOf([\"top\", \"top-right\", \"right\", \"bottom-right\", \"bottom\", \"bottom-left\", \"left\", \"top-left\", \"center\"]).isRequired,\n  translateX: g.number,\n  translateY: g.number,\n  direction: g.oneOf([\"row\", \"column\"]).isRequired,\n  itemsSpacing: g.number,\n  itemWidth: g.number.isRequired,\n  itemHeight: g.number.isRequired,\n  itemDirection: g.oneOf([\"left-to-right\", \"right-to-left\", \"top-to-bottom\", \"bottom-to-top\"]),\n  itemTextColor: g.string,\n  itemBackground: g.string,\n  itemOpacity: g.number,\n  symbolShape: g.oneOfType([g.oneOf([\"circle\", \"diamond\", \"square\", \"triangle\"]), g.func]),\n  symbolSize: g.number,\n  symbolSpacing: g.number,\n  symbolBorderWidth: g.number,\n  symbolBorderColor: g.string,\n  onClick: g.func,\n  onMouseEnter: g.func,\n  onMouseLeave: g.func,\n  effects: g.arrayOf(g.shape({\n    on: g.oneOfType([g.oneOf([\"hover\"])]).isRequired,\n    style: g.shape({\n      itemTextColor: g.string,\n      itemBackground: g.string,\n      itemOpacity: g.number,\n      symbolSize: g.number,\n      symbolBorderWidth: g.number,\n      symbolBorderColor: g.string\n    }).isRequired\n  }))\n};\n\nexport { C as AnchoredContinuousColorsLegendSvg, X as BoxLegendSvg, W as ContinuousColorsLegendSvg, T as LegendPropShape, w as LegendSvg, B as LegendSvgItem, m as SymbolCircle, f as SymbolDiamond, u as SymbolSquare, v as SymbolTriangle, A as computeContinuousColorsLegend, k as computeDimensions, S as computeItemLayout, x as computePositionFromAnchor, y as continuousColorsLegendDefaults, E as renderContinuousColorLegendToCanvas, H as renderLegendToCanvas, j as useQuantizeColorScaleLegendData };","map":{"version":3,"sources":["../src/svg/symbols/SymbolCircle.tsx","../src/svg/symbols/SymbolDiamond.tsx","../src/svg/symbols/SymbolSquare.tsx","../src/svg/symbols/SymbolTriangle.tsx","../src/defaults.ts","../src/compute.ts","../src/svg/ContinuousColorsLegendSvg.tsx","../src/svg/AnchoredContinuousColorsLegendSvg.tsx","../src/svg/LegendSvgItem.tsx","../src/svg/LegendSvg.tsx","../src/svg/BoxLegendSvg.tsx","../src/canvas.ts","../src/hooks.ts","../src/props.ts"],"names":["SymbolCircle","x","y","size","fill","opacity","borderWidth","borderColor","_jsx","r","cx","cy","strokeWidth","stroke","style","pointerEvents","SymbolDiamond","transform","d","SymbolSquare","width","height","SymbolTriangle","continuousColorsLegendDefaults","length","thickness","direction","tickPosition","tickSize","tickSpacing","tickOverlap","tickFormat","value","titleAlign","titleOffset","item","Array","isArray","zeroPadding","top","right","bottom","left","computeDimensions","itemsSpacing","padding","_padding","itemCount","itemWidth","itemHeight","Error","horizontalPadding","verticalPadding","spacing","computePositionFromAnchor","anchor","translateX","translateY","containerWidth","containerHeight","computeItemLayout","justify","symbolSize","symbolSpacing","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","computeContinuousColorsLegend","scale","ticks","title","domain","reverse","positionScale","scaleLinear","range","values","thresholds","colorStops","computeContinuousColorScaleColorStops","formatValue","getValueFormatter","computedTicks","gradientY1","gradientX2","titleX","titleY","titleRotation","titleVerticalAlign","y1","y2","textY","textVerticalAlign","forEach","push","x1","x2","text","textX","textHorizontalAlign","gradientX1","gradientY2","titleText","titleHorizontalAlign","ContinuousColorsLegendSvg","theme","useTheme","id","map","stop","offset","join","_jsxs","colorStop","textAnchor","dominantBaseline","legends","tick","index","Fragment","line","AnchoredContinuousColorsLegendSvg","legendProps","symbolByShape","circle","diamond","square","triangle","LegendSvgItem","data","textColor","background","symbolShape","symbolBorderWidth","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","setStyle","useState","handleMouseEnter","useCallback","event","filter","on","reduce","acc","effect","handleMouseLeave","isInteractive","some","handler","undefined","SymbolShape","itemOpacity","itemBackground","cursor","React","createElement","color","hidden","symbol","itemTextColor","userSelect","label","LegendSvg","itemDirection","xStep","yStep","i","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","ctx","save","translate","font","fontSize","fontFamily","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","renderContinuousColorLegendToCanvas","_ticks","initialStyles","gradient","createLinearGradient","addColorStop","stopColor","fontWeight","lineWidth","Number","axis","strokeStyle","lineCap","beginPath","moveTo","lineTo","rotate","degreesToRadians","useQuantizeColorScaleLegendData","overriddenDomain","valueFormat","v","separator","useMemo","items","domainValue","invertExtent","extent","LegendPropShape","PropTypes","arrayOf","object","oneOf","isRequired","number","string","oneOfType","func","shape"],"mappings":"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","sourcesContent":["import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n","import { scaleLinear } from 'd3-scale'\nimport { getValueFormatter } from '@nivo/core'\nimport { computeContinuousColorScaleColorStops } from '@nivo/colors'\nimport {\n    BoxLegendSvgProps,\n    ContinuousColorsLegendProps,\n    LegendAnchor,\n    LegendItemDirection,\n} from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n\nexport const computeContinuousColorsLegend = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    // left to right for `row`, bottom to top for `column`\n    const domain = direction === 'column' ? [...scale.domain()].reverse() : scale.domain()\n\n    const positionScale = scaleLinear().domain(domain)\n    if (domain.length === 2) {\n        // sequential, quantize\n        positionScale.range([0, length])\n    } else if (domain.length === 3) {\n        // diverging\n        positionScale.range([0, length / 2, length])\n    }\n\n    let values: number[]\n    if ('thresholds' in scale) {\n        // quantize\n        values = [domain[0], ...scale.thresholds(), domain[1]]\n    } else {\n        // sequential, diverging\n        values = Array.isArray(ticks) ? ticks : (scale as any).ticks(ticks)\n    }\n\n    const colorStops = computeContinuousColorScaleColorStops(scale, 32)\n\n    const formatValue = getValueFormatter(tickFormat)\n\n    const computedTicks: {\n        x1: number\n        y1: number\n        x2: number\n        y2: number\n        text: string\n        textX: number\n        textY: number\n        textHorizontalAlign: 'start' | 'middle' | 'end'\n        textVerticalAlign: 'alphabetic' | 'central' | 'hanging'\n    }[] = []\n\n    let width: number\n    let height: number\n\n    const gradientX1 = 0\n    let gradientY1 = 0\n    let gradientX2 = 0\n    const gradientY2 = 0\n\n    let titleX: number\n    let titleY: number\n    let titleRotation: number\n    let titleVerticalAlign: 'alphabetic' | 'hanging'\n\n    if (direction === 'row') {\n        width = length\n        height = thickness\n\n        gradientX2 = 1\n\n        let y1: number\n        let y2: number\n\n        let textY: number\n        const textHorizontalAlign = 'middle'\n        let textVerticalAlign: 'alphabetic' | 'hanging'\n\n        titleRotation = 0\n        if (titleAlign === 'start') {\n            titleX = 0\n        } else if (titleAlign === 'middle') {\n            titleX = length / 2\n        } else {\n            titleX = length\n        }\n\n        if (tickPosition === 'before') {\n            y1 = -tickSize\n            y2 = tickOverlap ? thickness : 0\n\n            textY = -tickSize - tickSpacing\n            textVerticalAlign = 'alphabetic'\n\n            titleY = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            y1 = tickOverlap ? 0 : thickness\n            y2 = thickness + tickSize\n\n            textY = y2 + tickSpacing\n            textVerticalAlign = 'hanging'\n\n            titleY = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const x = positionScale(value)\n\n            computedTicks.push({\n                x1: x,\n                y1,\n                x2: x,\n                y2,\n                text: formatValue(value),\n                textX: x,\n                textY,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    } else {\n        width = thickness\n        height = length\n\n        gradientY1 = 1\n\n        let x1: number\n        let x2: number\n\n        let textX: number\n        let textHorizontalAlign: 'start' | 'end'\n        const textVerticalAlign = 'central'\n\n        titleRotation = -90\n        if (titleAlign === 'start') {\n            titleY = length\n        } else if (titleAlign === 'middle') {\n            titleY = length / 2\n        } else {\n            titleY = 0\n        }\n\n        if (tickPosition === 'before') {\n            x1 = -tickSize\n            x2 = tickOverlap ? thickness : 0\n\n            textX = x1 - tickSpacing\n            textHorizontalAlign = 'end'\n\n            titleX = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            x1 = tickOverlap ? 0 : thickness\n            x2 = thickness + tickSize\n\n            textX = x2 + tickSpacing\n            textHorizontalAlign = 'start'\n\n            titleX = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const y = positionScale(value)\n\n            computedTicks.push({\n                x1,\n                y1: y,\n                x2,\n                y2: y,\n                text: formatValue(value),\n                textX,\n                textY: y,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    }\n\n    return {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks: computedTicks,\n        titleText: title,\n        titleX,\n        titleY,\n        titleRotation,\n        titleHorizontalAlign: titleAlign,\n        titleVerticalAlign,\n    }\n}\n","import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n","import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { CompleteTheme, degreesToRadians } from '@nivo/core'\nimport {\n    computeDimensions,\n    computePositionFromAnchor,\n    computeItemLayout,\n    computeContinuousColorsLegend,\n} from './compute'\nimport { AnchoredContinuousColorsLegendProps, LegendCanvasProps } from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n\nexport const renderContinuousColorLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        containerWidth,\n        containerHeight,\n        anchor,\n        translateX = 0,\n        translateY = 0,\n        scale,\n        length = continuousColorsLegendDefaults.length,\n        thickness = continuousColorsLegendDefaults.thickness,\n        direction = continuousColorsLegendDefaults.direction,\n        ticks: _ticks,\n        tickPosition = continuousColorsLegendDefaults.tickPosition,\n        tickSize = continuousColorsLegendDefaults.tickSize,\n        tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n        tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n        tickFormat = continuousColorsLegendDefaults.tickFormat,\n        title,\n        titleAlign = continuousColorsLegendDefaults.titleAlign,\n        titleOffset = continuousColorsLegendDefaults.titleOffset,\n        theme,\n    }: AnchoredContinuousColorsLegendProps & {\n        theme: CompleteTheme\n    }\n) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks: _ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const initialStyles = {\n        font: ctx.font,\n        textAlign: ctx.textAlign,\n        textBaseline: ctx.textBaseline,\n    }\n    ctx.save()\n\n    ctx.translate(x, y)\n\n    const gradient = ctx.createLinearGradient(\n        gradientX1 * width,\n        gradientY1 * height,\n        gradientX2 * width,\n        gradientY2 * height\n    )\n    colorStops.forEach(colorStop => {\n        gradient.addColorStop(colorStop.offset, colorStop.stopColor)\n    })\n\n    ctx.fillStyle = gradient\n    ctx.fillRect(0, 0, width, height)\n\n    ctx.font = `${\n        theme.legends.ticks.text.fontWeight ? `${theme.legends.ticks.text.fontWeight} ` : ''\n    }${theme.legends.ticks.text.fontSize}px ${theme.legends.ticks.text.fontFamily}`\n\n    ticks.forEach(tick => {\n        if ((theme.legends.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n            ctx.lineCap = 'square'\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x1, tick.y1)\n            ctx.lineTo(tick.x2, tick.y2)\n            ctx.stroke()\n        }\n\n        if (theme.legends.ticks.text.fill) {\n            ctx.fillStyle = theme.legends.ticks.text.fill\n        }\n        ctx.textAlign = tick.textHorizontalAlign === 'middle' ? 'center' : tick.textHorizontalAlign\n        ctx.textBaseline = tick.textVerticalAlign === 'central' ? 'middle' : tick.textVerticalAlign\n\n        ctx.fillText(tick.text, tick.textX, tick.textY)\n    })\n\n    if (titleText) {\n        ctx.save()\n        ctx.translate(titleX, titleY)\n        ctx.rotate(degreesToRadians(titleRotation))\n\n        ctx.font = `${\n            theme.legends.title.text.fontWeight ? `${theme.legends.title.text.fontWeight} ` : ''\n        }${theme.legends.title.text.fontSize}px ${theme.legends.title.text.fontFamily}`\n        if (theme.legends.title.text.fill) {\n            ctx.fillStyle = theme.legends.title.text.fill\n        }\n        ctx.textAlign = titleHorizontalAlign === 'middle' ? 'center' : titleHorizontalAlign\n        ctx.textBaseline = titleVerticalAlign\n\n        ctx.fillText(titleText, 0, 0)\n\n        ctx.restore()\n    }\n\n    ctx.restore()\n\n    ctx.font = initialStyles.font\n    ctx.textAlign = initialStyles.textAlign\n    ctx.textBaseline = initialStyles.textBaseline\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n\n        if (reverse) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse, separator, valueFormat])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n"]},"metadata":{},"sourceType":"module"}