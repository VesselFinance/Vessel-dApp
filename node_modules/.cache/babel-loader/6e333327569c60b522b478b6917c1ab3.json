{"ast":null,"code":"import { useMemo as e, useState as i, useCallback as t, createElement as n, Fragment as r, useRef as a, useEffect as o } from \"react\";\nimport { usePropertyAccessor as d, useValueFormatter as l, degreesToRadians as s, radiansToDegrees as c, Container as u, useDimensions as v, bindDefs as f, SvgWrapper as g, ResponsiveWrapper as L, useTheme as h, getRelativeCursor as b } from \"@nivo/core\";\nimport { useArcGenerator as p, computeArcBoundingBox as k, ArcsLayer as A, ArcLinkLabelsLayer as R, ArcLabelsLayer as m, useArcLabels as O, useArcLinkLabels as C, drawCanvasArcLinkLabels as I, drawCanvasArcLabels as x, findArcUnderCursor as M } from \"@nivo/arcs\";\nimport { BoxLegendSvg as y, renderLegendToCanvas as w } from \"@nivo/legends\";\nimport { jsx as W, Fragment as S } from \"react/jsx-runtime\";\nimport { pie as T } from \"d3-shape\";\nimport { useOrdinalColorScale as V, useInheritedColor as B } from \"@nivo/colors\";\nimport { BasicTooltip as G, useTooltip as E } from \"@nivo/tooltip\";\n\nfunction D() {\n  return D = Object.assign || function (e) {\n    for (var i = 1; i < arguments.length; i++) {\n      var t = arguments[i];\n\n      for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);\n    }\n\n    return e;\n  }, D.apply(this, arguments);\n}\n\nfunction F(e, i) {\n  if (null == e) return {};\n  var t,\n      n,\n      r = {},\n      a = Object.keys(e);\n\n  for (n = 0; n < a.length; n++) t = a[n], i.indexOf(t) >= 0 || (r[t] = e[t]);\n\n  return r;\n}\n\nvar H,\n    X = function (e) {\n  var i = e.width,\n      t = e.height,\n      n = e.legends,\n      r = e.data,\n      a = e.toggleSerie;\n  return W(S, {\n    children: n.map(function (e, n) {\n      var o;\n      return W(y, D({}, e, {\n        containerWidth: i,\n        containerHeight: t,\n        data: null != (o = e.data) ? o : r,\n        toggleSerie: e.toggleSerie ? a : void 0\n      }), n);\n    })\n  });\n},\n    Y = {\n  id: \"id\",\n  value: \"value\",\n  sortByValue: !1,\n  innerRadius: 0,\n  padAngle: 0,\n  cornerRadius: 0,\n  layers: [\"arcLinkLabels\", \"arcs\", \"arcLabels\", \"legends\"],\n  startAngle: 0,\n  endAngle: 360,\n  fit: !0,\n  activeInnerRadiusOffset: 0,\n  activeOuterRadiusOffset: 0,\n  borderWidth: 0,\n  borderColor: {\n    from: \"color\",\n    modifiers: [[\"darker\", 1]]\n  },\n  enableArcLabels: !0,\n  arcLabel: \"formattedValue\",\n  arcLabelsSkipAngle: 0,\n  arcLabelsRadiusOffset: .5,\n  arcLabelsTextColor: {\n    theme: \"labels.text.fill\"\n  },\n  enableArcLinkLabels: !0,\n  arcLinkLabel: \"id\",\n  arcLinkLabelsSkipAngle: 0,\n  arcLinkLabelsOffset: 0,\n  arcLinkLabelsDiagonalLength: 16,\n  arcLinkLabelsStraightLength: 24,\n  arcLinkLabelsThickness: 1,\n  arcLinkLabelsTextOffset: 6,\n  arcLinkLabelsTextColor: {\n    theme: \"labels.text.fill\"\n  },\n  arcLinkLabelsColor: {\n    theme: \"axis.ticks.line.stroke\"\n  },\n  colors: {\n    scheme: \"nivo\"\n  },\n  defs: [],\n  fill: [],\n  isInteractive: !0,\n  animate: !0,\n  motionConfig: \"gentle\",\n  transitionMode: \"innerRadius\",\n  tooltip: function (e) {\n    var i = e.datum;\n    return W(G, {\n      id: i.id,\n      value: i.formattedValue,\n      enableChip: !0,\n      color: i.color\n    });\n  },\n  legends: [],\n  role: \"img\",\n  pixelRatio: \"undefined\" != typeof window && null != (H = window.devicePixelRatio) ? H : 1\n},\n    j = [\"points\"],\n    P = function (i) {\n  var t = i.data,\n      n = i.id,\n      r = void 0 === n ? Y.id : n,\n      a = i.value,\n      o = void 0 === a ? Y.value : a,\n      s = i.valueFormat,\n      c = i.colors,\n      u = void 0 === c ? Y.colors : c,\n      v = d(r),\n      f = d(o),\n      g = l(s),\n      L = V(u, \"id\");\n  return e(function () {\n    return t.map(function (e) {\n      var i,\n          t = v(e),\n          n = f(e),\n          r = {\n        id: t,\n        label: null != (i = e.label) ? i : t,\n        hidden: !1,\n        value: n,\n        formattedValue: g(n),\n        data: e\n      };\n      return D({}, r, {\n        color: L(r)\n      });\n    });\n  }, [t, v, f, g, L]);\n},\n    q = function (i) {\n  var t = i.data,\n      n = i.startAngle,\n      r = i.endAngle,\n      a = i.innerRadius,\n      o = i.outerRadius,\n      d = i.padAngle,\n      l = i.sortByValue,\n      u = i.activeId,\n      v = i.activeInnerRadiusOffset,\n      f = i.activeOuterRadiusOffset,\n      g = i.hiddenIds,\n      L = e(function () {\n    var e = T().value(function (e) {\n      return e.value;\n    }).startAngle(s(n)).endAngle(s(r)).padAngle(s(d));\n    return l || e.sortValues(null), e;\n  }, [n, r, d, l]);\n  return e(function () {\n    var e = t.filter(function (e) {\n      return !g.includes(e.id);\n    });\n    return {\n      dataWithArc: L(e).map(function (e) {\n        var i = Math.abs(e.endAngle - e.startAngle);\n        return D({}, e.data, {\n          arc: {\n            index: e.index,\n            startAngle: e.startAngle,\n            endAngle: e.endAngle,\n            innerRadius: u === e.data.id ? a - v : a,\n            outerRadius: u === e.data.id ? o + f : o,\n            thickness: o - a,\n            padAngle: e.padAngle,\n            angle: i,\n            angleDeg: c(i)\n          }\n        });\n      }),\n      legendData: t.map(function (e) {\n        return D({}, e, {\n          hidden: g.includes(e.id)\n        });\n      })\n    };\n  }, [L, t, g, u, a, v, o, f]);\n},\n    z = function (e) {\n  var n = e.data,\n      r = e.radius,\n      a = e.innerRadius,\n      o = e.startAngle,\n      d = void 0 === o ? Y.startAngle : o,\n      l = e.endAngle,\n      c = void 0 === l ? Y.endAngle : l,\n      u = e.padAngle,\n      v = void 0 === u ? Y.padAngle : u,\n      f = e.sortByValue,\n      g = void 0 === f ? Y.sortByValue : f,\n      L = e.cornerRadius,\n      h = void 0 === L ? Y.cornerRadius : L,\n      b = e.activeInnerRadiusOffset,\n      k = void 0 === b ? Y.activeInnerRadiusOffset : b,\n      A = e.activeOuterRadiusOffset,\n      R = void 0 === A ? Y.activeOuterRadiusOffset : A,\n      m = i(null),\n      O = m[0],\n      C = m[1],\n      I = i([]),\n      x = I[0],\n      M = I[1],\n      y = q({\n    data: n,\n    startAngle: d,\n    endAngle: c,\n    innerRadius: a,\n    outerRadius: r,\n    padAngle: v,\n    sortByValue: g,\n    activeId: O,\n    activeInnerRadiusOffset: k,\n    activeOuterRadiusOffset: R,\n    hiddenIds: x\n  }),\n      w = t(function (e) {\n    M(function (i) {\n      return i.indexOf(e) > -1 ? i.filter(function (i) {\n        return i !== e;\n      }) : [].concat(i, [e]);\n    });\n  }, []);\n  return D({}, y, {\n    arcGenerator: p({\n      cornerRadius: h,\n      padAngle: s(v)\n    }),\n    setActiveId: C,\n    toggleSerie: w\n  });\n},\n    J = function (n) {\n  var r = n.data,\n      a = n.width,\n      o = n.height,\n      d = n.innerRadius,\n      l = void 0 === d ? Y.innerRadius : d,\n      c = n.startAngle,\n      u = void 0 === c ? Y.startAngle : c,\n      v = n.endAngle,\n      f = void 0 === v ? Y.endAngle : v,\n      g = n.padAngle,\n      L = void 0 === g ? Y.padAngle : g,\n      h = n.sortByValue,\n      b = void 0 === h ? Y.sortByValue : h,\n      A = n.cornerRadius,\n      R = void 0 === A ? Y.cornerRadius : A,\n      m = n.fit,\n      O = void 0 === m ? Y.fit : m,\n      C = n.activeInnerRadiusOffset,\n      I = void 0 === C ? Y.activeInnerRadiusOffset : C,\n      x = n.activeOuterRadiusOffset,\n      M = void 0 === x ? Y.activeOuterRadiusOffset : x,\n      y = i(null),\n      w = y[0],\n      W = y[1],\n      S = i([]),\n      T = S[0],\n      V = S[1],\n      B = e(function () {\n    var e,\n        i = Math.min(a, o) / 2,\n        t = i * Math.min(l, 1),\n        n = a / 2,\n        r = o / 2;\n\n    if (O) {\n      var d = k(n, r, i, u - 90, f - 90),\n          s = d.points,\n          c = F(d, j),\n          v = Math.min(a / c.width, o / c.height),\n          g = {\n        width: c.width * v,\n        height: c.height * v\n      };\n      g.x = (a - g.width) / 2, g.y = (o - g.height) / 2, n = (n - c.x) / c.width * c.width * v + g.x, r = (r - c.y) / c.height * c.height * v + g.y, e = {\n        box: c,\n        ratio: v,\n        points: s\n      }, i *= v, t *= v;\n    }\n\n    return {\n      centerX: n,\n      centerY: r,\n      radius: i,\n      innerRadius: t,\n      debug: e\n    };\n  }, [a, o, l, u, f, O, R]),\n      G = q({\n    data: r,\n    startAngle: u,\n    endAngle: f,\n    innerRadius: B.innerRadius,\n    outerRadius: B.radius,\n    padAngle: L,\n    sortByValue: b,\n    activeId: w,\n    activeInnerRadiusOffset: I,\n    activeOuterRadiusOffset: M,\n    hiddenIds: T\n  }),\n      E = t(function (e) {\n    V(function (i) {\n      return i.indexOf(e) > -1 ? i.filter(function (i) {\n        return i !== e;\n      }) : [].concat(i, [e]);\n    });\n  }, []);\n  return D({\n    arcGenerator: p({\n      cornerRadius: R,\n      padAngle: s(L)\n    }),\n    setActiveId: W,\n    toggleSerie: E\n  }, G, B);\n},\n    K = function (i) {\n  var t = i.dataWithArc,\n      n = i.arcGenerator,\n      r = i.centerX,\n      a = i.centerY,\n      o = i.radius,\n      d = i.innerRadius;\n  return e(function () {\n    return {\n      dataWithArc: t,\n      arcGenerator: n,\n      centerX: r,\n      centerY: a,\n      radius: o,\n      innerRadius: d\n    };\n  }, [t, n, r, a, o, d]);\n},\n    N = function (i) {\n  var t = i.center,\n      r = i.data,\n      a = i.arcGenerator,\n      o = i.borderWidth,\n      d = i.borderColor,\n      l = i.isInteractive,\n      s = i.onClick,\n      c = i.onMouseEnter,\n      u = i.onMouseMove,\n      v = i.onMouseLeave,\n      f = i.setActiveId,\n      g = i.tooltip,\n      L = i.transitionMode,\n      h = E(),\n      b = h.showTooltipFromEvent,\n      p = h.hideTooltip,\n      k = e(function () {\n    if (l) return function (e, i) {\n      null == s || s(e, i);\n    };\n  }, [l, s]),\n      R = e(function () {\n    if (l) return function (e, i) {\n      b(n(g, {\n        datum: e\n      }), i), f(e.id), null == c || c(e, i);\n    };\n  }, [l, b, f, c]),\n      m = e(function () {\n    if (l) return function (e, i) {\n      b(n(g, {\n        datum: e\n      }), i), null == u || u(e, i);\n    };\n  }, [l, b, u]),\n      O = e(function () {\n    if (l) return function (e, i) {\n      p(), f(null), null == v || v(e, i);\n    };\n  }, [l, p, f, v]);\n  return W(A, {\n    center: t,\n    data: r,\n    arcGenerator: a,\n    borderWidth: o,\n    borderColor: d,\n    transitionMode: L,\n    onClick: k,\n    onMouseEnter: R,\n    onMouseMove: m,\n    onMouseLeave: O\n  });\n},\n    Q = [\"isInteractive\", \"animate\", \"motionConfig\", \"theme\", \"renderWrapper\"],\n    U = function (e) {\n  var i = e.data,\n      t = e.id,\n      a = void 0 === t ? Y.id : t,\n      o = e.value,\n      d = void 0 === o ? Y.value : o,\n      l = e.valueFormat,\n      s = e.sortByValue,\n      c = void 0 === s ? Y.sortByValue : s,\n      u = e.layers,\n      L = void 0 === u ? Y.layers : u,\n      h = e.startAngle,\n      b = void 0 === h ? Y.startAngle : h,\n      p = e.endAngle,\n      k = void 0 === p ? Y.endAngle : p,\n      A = e.padAngle,\n      O = void 0 === A ? Y.padAngle : A,\n      C = e.fit,\n      I = void 0 === C ? Y.fit : C,\n      x = e.innerRadius,\n      M = void 0 === x ? Y.innerRadius : x,\n      y = e.cornerRadius,\n      w = void 0 === y ? Y.cornerRadius : y,\n      S = e.activeInnerRadiusOffset,\n      T = void 0 === S ? Y.activeInnerRadiusOffset : S,\n      V = e.activeOuterRadiusOffset,\n      B = void 0 === V ? Y.activeOuterRadiusOffset : V,\n      G = e.width,\n      E = e.height,\n      D = e.margin,\n      F = e.colors,\n      H = void 0 === F ? Y.colors : F,\n      j = e.borderWidth,\n      q = void 0 === j ? Y.borderWidth : j,\n      z = e.borderColor,\n      Q = void 0 === z ? Y.borderColor : z,\n      U = e.enableArcLabels,\n      Z = void 0 === U ? Y.enableArcLabels : U,\n      $ = e.arcLabel,\n      _ = void 0 === $ ? Y.arcLabel : $,\n      ee = e.arcLabelsSkipAngle,\n      ie = void 0 === ee ? Y.arcLabelsSkipAngle : ee,\n      te = e.arcLabelsTextColor,\n      ne = void 0 === te ? Y.arcLabelsTextColor : te,\n      re = e.arcLabelsRadiusOffset,\n      ae = void 0 === re ? Y.arcLabelsRadiusOffset : re,\n      oe = e.arcLabelsComponent,\n      de = e.enableArcLinkLabels,\n      le = void 0 === de ? Y.enableArcLinkLabels : de,\n      se = e.arcLinkLabel,\n      ce = void 0 === se ? Y.arcLinkLabel : se,\n      ue = e.arcLinkLabelsSkipAngle,\n      ve = void 0 === ue ? Y.arcLinkLabelsSkipAngle : ue,\n      fe = e.arcLinkLabelsOffset,\n      ge = void 0 === fe ? Y.arcLinkLabelsOffset : fe,\n      Le = e.arcLinkLabelsDiagonalLength,\n      he = void 0 === Le ? Y.arcLinkLabelsDiagonalLength : Le,\n      be = e.arcLinkLabelsStraightLength,\n      pe = void 0 === be ? Y.arcLinkLabelsStraightLength : be,\n      ke = e.arcLinkLabelsThickness,\n      Ae = void 0 === ke ? Y.arcLinkLabelsThickness : ke,\n      Re = e.arcLinkLabelsTextOffset,\n      me = void 0 === Re ? Y.arcLinkLabelsTextOffset : Re,\n      Oe = e.arcLinkLabelsTextColor,\n      Ce = void 0 === Oe ? Y.arcLinkLabelsTextColor : Oe,\n      Ie = e.arcLinkLabelsColor,\n      xe = void 0 === Ie ? Y.arcLinkLabelsColor : Ie,\n      Me = e.arcLinkLabelComponent,\n      ye = e.defs,\n      we = void 0 === ye ? Y.defs : ye,\n      We = e.fill,\n      Se = void 0 === We ? Y.fill : We,\n      Te = e.isInteractive,\n      Ve = void 0 === Te ? Y.isInteractive : Te,\n      Be = e.onClick,\n      Ge = e.onMouseEnter,\n      Ee = e.onMouseMove,\n      De = e.onMouseLeave,\n      Fe = e.tooltip,\n      He = void 0 === Fe ? Y.tooltip : Fe,\n      Xe = e.transitionMode,\n      Ye = void 0 === Xe ? Y.transitionMode : Xe,\n      je = e.legends,\n      Pe = void 0 === je ? Y.legends : je,\n      qe = e.role,\n      ze = void 0 === qe ? Y.role : qe,\n      Je = v(G, E, D),\n      Ke = Je.outerWidth,\n      Ne = Je.outerHeight,\n      Qe = Je.margin,\n      Ue = Je.innerWidth,\n      Ze = Je.innerHeight,\n      $e = P({\n    data: i,\n    id: a,\n    value: d,\n    valueFormat: l,\n    colors: H\n  }),\n      _e = J({\n    data: $e,\n    width: Ue,\n    height: Ze,\n    fit: I,\n    innerRadius: M,\n    startAngle: b,\n    endAngle: k,\n    padAngle: O,\n    sortByValue: c,\n    cornerRadius: w,\n    activeInnerRadiusOffset: T,\n    activeOuterRadiusOffset: B\n  }),\n      ei = _e.dataWithArc,\n      ii = _e.legendData,\n      ti = _e.arcGenerator,\n      ni = _e.centerX,\n      ri = _e.centerY,\n      ai = _e.radius,\n      oi = _e.innerRadius,\n      di = _e.setActiveId,\n      li = _e.toggleSerie,\n      si = f(we, ei, Se),\n      ci = {\n    arcLinkLabels: null,\n    arcs: null,\n    arcLabels: null,\n    legends: null\n  };\n\n  le && L.includes(\"arcLinkLabels\") && (ci.arcLinkLabels = W(R, {\n    center: [ni, ri],\n    data: ei,\n    label: ce,\n    skipAngle: ve,\n    offset: ge,\n    diagonalLength: he,\n    straightLength: pe,\n    strokeWidth: Ae,\n    textOffset: me,\n    textColor: Ce,\n    linkColor: xe,\n    component: Me\n  }, \"arcLinkLabels\")), L.includes(\"arcs\") && (ci.arcs = W(N, {\n    center: [ni, ri],\n    data: ei,\n    arcGenerator: ti,\n    borderWidth: q,\n    borderColor: Q,\n    isInteractive: Ve,\n    onClick: Be,\n    onMouseEnter: Ge,\n    onMouseMove: Ee,\n    onMouseLeave: De,\n    setActiveId: di,\n    tooltip: He,\n    transitionMode: Ye\n  }, \"arcs\")), Z && L.includes(\"arcLabels\") && (ci.arcLabels = W(m, {\n    center: [ni, ri],\n    data: ei,\n    label: _,\n    radiusOffset: ae,\n    skipAngle: ie,\n    textColor: ne,\n    transitionMode: Ye,\n    component: oe\n  }, \"arcLabels\")), Pe.length > 0 && L.includes(\"legends\") && (ci.legends = W(X, {\n    width: Ue,\n    height: Ze,\n    data: ii,\n    legends: Pe,\n    toggleSerie: li\n  }, \"legends\"));\n  var ui = K({\n    dataWithArc: ei,\n    arcGenerator: ti,\n    centerX: ni,\n    centerY: ri,\n    radius: ai,\n    innerRadius: oi\n  });\n  return W(g, {\n    width: Ke,\n    height: Ne,\n    margin: Qe,\n    defs: si,\n    role: ze,\n    children: L.map(function (e, i) {\n      return void 0 !== ci[e] ? ci[e] : \"function\" == typeof e ? W(r, {\n        children: n(e, ui)\n      }, i) : null;\n    })\n  });\n},\n    Z = function (e) {\n  var i = e.isInteractive,\n      t = void 0 === i ? Y.isInteractive : i,\n      n = e.animate,\n      r = void 0 === n ? Y.animate : n,\n      a = e.motionConfig,\n      o = void 0 === a ? Y.motionConfig : a,\n      d = e.theme,\n      l = e.renderWrapper,\n      s = F(e, Q);\n  return W(u, {\n    animate: r,\n    isInteractive: t,\n    motionConfig: o,\n    renderWrapper: l,\n    theme: d,\n    children: W(U, D({\n      isInteractive: t\n    }, s))\n  });\n},\n    $ = function (e) {\n  return W(L, {\n    children: function (i) {\n      var t = i.width,\n          n = i.height;\n      return W(Z, D({\n        width: t,\n        height: n\n      }, e));\n    }\n  });\n},\n    _ = [\"isInteractive\", \"theme\", \"renderWrapper\"],\n    ee = function (i) {\n  var t = i.data,\n      r = i.id,\n      d = void 0 === r ? Y.id : r,\n      l = i.value,\n      s = void 0 === l ? Y.value : l,\n      c = i.valueFormat,\n      u = i.sortByValue,\n      f = void 0 === u ? Y.sortByValue : u,\n      g = i.startAngle,\n      L = void 0 === g ? Y.startAngle : g,\n      p = i.endAngle,\n      k = void 0 === p ? Y.endAngle : p,\n      A = i.padAngle,\n      R = void 0 === A ? Y.padAngle : A,\n      m = i.fit,\n      y = void 0 === m ? Y.fit : m,\n      S = i.innerRadius,\n      T = void 0 === S ? Y.innerRadius : S,\n      V = i.cornerRadius,\n      G = void 0 === V ? Y.cornerRadius : V,\n      F = i.activeInnerRadiusOffset,\n      H = void 0 === F ? Y.activeInnerRadiusOffset : F,\n      X = i.activeOuterRadiusOffset,\n      j = void 0 === X ? Y.activeOuterRadiusOffset : X,\n      q = i.width,\n      z = i.height,\n      K = i.margin,\n      N = i.pixelRatio,\n      Q = void 0 === N ? 1 : N,\n      U = i.colors,\n      Z = void 0 === U ? Y.colors : U,\n      $ = i.borderWidth,\n      _ = void 0 === $ ? Y.borderWidth : $,\n      ee = i.borderColor,\n      ie = void 0 === ee ? Y.borderColor : ee,\n      te = i.enableArcLabels,\n      ne = void 0 === te ? Y.enableArcLabels : te,\n      re = i.arcLabel,\n      ae = void 0 === re ? Y.arcLabel : re,\n      oe = i.arcLabelsSkipAngle,\n      de = void 0 === oe ? Y.arcLabelsSkipAngle : oe,\n      le = i.arcLabelsTextColor,\n      se = void 0 === le ? Y.arcLabelsTextColor : le,\n      ce = i.arcLabelsRadiusOffset,\n      ue = void 0 === ce ? Y.arcLabelsRadiusOffset : ce,\n      ve = i.enableArcLinkLabels,\n      fe = void 0 === ve ? Y.enableArcLinkLabels : ve,\n      ge = i.arcLinkLabel,\n      Le = void 0 === ge ? Y.arcLinkLabel : ge,\n      he = i.arcLinkLabelsSkipAngle,\n      be = void 0 === he ? Y.arcLinkLabelsSkipAngle : he,\n      pe = i.arcLinkLabelsOffset,\n      ke = void 0 === pe ? Y.arcLinkLabelsOffset : pe,\n      Ae = i.arcLinkLabelsDiagonalLength,\n      Re = void 0 === Ae ? Y.arcLinkLabelsDiagonalLength : Ae,\n      me = i.arcLinkLabelsStraightLength,\n      Oe = void 0 === me ? Y.arcLinkLabelsStraightLength : me,\n      Ce = i.arcLinkLabelsThickness,\n      Ie = void 0 === Ce ? Y.arcLinkLabelsThickness : Ce,\n      xe = i.arcLinkLabelsTextOffset,\n      Me = void 0 === xe ? Y.arcLinkLabelsTextOffset : xe,\n      ye = i.arcLinkLabelsTextColor,\n      we = void 0 === ye ? Y.arcLinkLabelsTextColor : ye,\n      We = i.arcLinkLabelsColor,\n      Se = void 0 === We ? Y.arcLinkLabelsColor : We,\n      Te = i.isInteractive,\n      Ve = void 0 === Te ? Y.isInteractive : Te,\n      Be = i.onClick,\n      Ge = i.onMouseMove,\n      Ee = i.tooltip,\n      De = void 0 === Ee ? Y.tooltip : Ee,\n      Fe = i.legends,\n      He = void 0 === Fe ? Y.legends : Fe,\n      Xe = a(null),\n      Ye = h(),\n      je = v(q, z, K),\n      Pe = je.margin,\n      qe = je.innerWidth,\n      ze = je.innerHeight,\n      Je = je.outerWidth,\n      Ke = je.outerHeight,\n      Ne = P({\n    data: t,\n    id: d,\n    value: s,\n    valueFormat: c,\n    colors: Z\n  }),\n      Qe = J({\n    data: Ne,\n    width: qe,\n    height: ze,\n    fit: y,\n    innerRadius: T,\n    startAngle: L,\n    endAngle: k,\n    padAngle: R,\n    sortByValue: f,\n    cornerRadius: G,\n    activeInnerRadiusOffset: H,\n    activeOuterRadiusOffset: j\n  }),\n      Ue = Qe.dataWithArc,\n      Ze = Qe.arcGenerator,\n      $e = Qe.centerX,\n      _e = Qe.centerY,\n      ei = Qe.radius,\n      ii = Qe.innerRadius,\n      ti = Qe.setActiveId,\n      ni = B(ie, Ye),\n      ri = O({\n    data: Ue,\n    label: ae,\n    skipAngle: de,\n    offset: ue,\n    textColor: se\n  }),\n      ai = C({\n    data: Ue,\n    skipAngle: be,\n    offset: ke,\n    diagonalLength: Re,\n    straightLength: Oe,\n    label: Le,\n    linkColor: Se,\n    textOffset: Me,\n    textColor: we\n  });\n\n  o(function () {\n    if (Xe.current) {\n      Xe.current.width = Je * Q, Xe.current.height = Ke * Q;\n      var e = Xe.current.getContext(\"2d\");\n      e.scale(Q, Q), e.fillStyle = Ye.background, e.fillRect(0, 0, Je, Ke), e.save(), e.translate(Pe.left, Pe.top), Ze.context(e), e.save(), e.translate($e, _e), Ue.forEach(function (i) {\n        e.beginPath(), e.fillStyle = i.color, e.strokeStyle = ni(i), e.lineWidth = _, Ze(i.arc), e.fill(), _ > 0 && e.stroke();\n      }), !0 === fe && I(e, ai, Ye, Ie), !0 === ne && x(e, ri, Ye), e.restore(), He.forEach(function (i) {\n        w(e, D({}, i, {\n          data: Ue,\n          containerWidth: qe,\n          containerHeight: ze,\n          theme: Ye\n        }));\n      });\n    }\n  }, [Xe, qe, ze, Je, Ke, Pe.top, Pe.left, Q, $e, _e, Ze, Ue, ni, ne, ri, fe, ai, Ie, He, Ye]);\n\n  var oi = e(function () {\n    return Ue.map(function (e) {\n      return D({\n        id: e.id\n      }, e.arc);\n    });\n  }, [Ue]),\n      di = function (e) {\n    if (!Xe.current) return null;\n    var i = b(Xe.current, e),\n        t = i[0],\n        n = i[1],\n        r = M(Pe.left + $e, Pe.top + _e, ei, ii, oi, t, n);\n    return r ? Ue.find(function (e) {\n      return e.id === r.id;\n    }) : null;\n  },\n      li = E(),\n      si = li.showTooltipFromEvent,\n      ci = li.hideTooltip,\n      ui = function (e) {\n    var i = di(e);\n    i ? (null == Ge || Ge(i, e), ti(i.id), si(n(De, {\n      datum: i\n    }), e)) : (ti(null), ci());\n  };\n\n  return W(\"canvas\", {\n    ref: Xe,\n    width: Je * Q,\n    height: Ke * Q,\n    style: {\n      width: Je,\n      height: Ke,\n      cursor: Ve ? \"auto\" : \"normal\"\n    },\n    onMouseEnter: Ve ? ui : void 0,\n    onMouseMove: Ve ? ui : void 0,\n    onMouseLeave: Ve ? function () {\n      ci();\n    } : void 0,\n    onClick: Ve ? function (e) {\n      if (Be) {\n        var i = di(e);\n        i && Be(i, e);\n      }\n    } : void 0\n  });\n},\n    ie = function (e) {\n  var i = e.isInteractive,\n      t = void 0 === i ? Y.isInteractive : i,\n      n = e.theme,\n      r = e.renderWrapper,\n      a = F(e, _);\n  return W(u, {\n    isInteractive: t,\n    renderWrapper: r,\n    theme: n,\n    children: W(ee, D({\n      isInteractive: t\n    }, a))\n  });\n},\n    te = function (e) {\n  return W(L, {\n    children: function (i) {\n      var t = i.width,\n          n = i.height;\n      return W(ie, D({\n        width: t,\n        height: n\n      }, e));\n    }\n  });\n};\n\nexport { Z as Pie, ie as PieCanvas, $ as ResponsivePie, te as ResponsivePieCanvas, Y as defaultProps, P as useNormalizedData, z as usePie, q as usePieArcs, J as usePieFromBox, K as usePieLayerContext };","map":{"version":3,"sources":["../src/PieLegends.tsx","../src/props.ts","../src/PieTooltip.tsx","../src/hooks.ts","../src/Arcs.tsx","../src/Pie.tsx","../src/ResponsivePie.tsx","../src/PieCanvas.tsx","../src/ResponsivePieCanvas.tsx"],"names":["PieLegends","width","height","legends","data","toggleSerie","_jsx","map","legend","i","BoxLegendSvg","containerWidth","containerHeight","undefined","defaultProps","id","value","sortByValue","innerRadius","padAngle","cornerRadius","layers","startAngle","endAngle","fit","activeInnerRadiusOffset","activeOuterRadiusOffset","borderWidth","borderColor","from","modifiers","enableArcLabels","arcLabel","arcLabelsSkipAngle","arcLabelsRadiusOffset","arcLabelsTextColor","theme","enableArcLinkLabels","arcLinkLabel","arcLinkLabelsSkipAngle","arcLinkLabelsOffset","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLinkLabelsThickness","arcLinkLabelsTextOffset","arcLinkLabelsTextColor","arcLinkLabelsColor","colors","scheme","defs","fill","isInteractive","animate","motionConfig","transitionMode","tooltip","role","pixelRatio","window","devicePixelRatio","datum","BasicTooltip","formattedValue","enableChip","color","useNormalizedData","valueFormat","getId","usePropertyAccessor","getValue","formatValue","useValueFormatter","getColor","useOrdinalColorScale","useMemo","datumId","datumValue","normalizedDatum","label","hidden","usePieArcs","outerRadius","activeId","hiddenIds","pie","innerPie","d3Pie","d","degreesToRadians","sortValues","hiddenData","filter","includes","item","arc","angle","Math","abs","index","thickness","angleDeg","radiansToDegrees","dataWithArc","legendData","usePie","radius","setActiveId","useState","setHiddenIds","pieArcs","useCallback","state","indexOf","useArcGenerator","arcGenerator","usePieFromBox","innerRadiusRatio","computedProps","min","centerX","centerY","boundingBox","points","box","computeArcBoundingBox","ratio","adjustedBox","x","y","debug","usePieLayerContext","Arcs","center","onClick","onMouseEnter","onMouseMove","onMouseLeave","showTooltipFromEvent","hideTooltip","useTooltip","handleClick","event","handleMouseEnter","createElement","handleMouseMove","handleMouseLeave","ArcsLayer","InnerPie","margin","partialMargin","arcLabelsComponent","arcLinkLabelComponent","outerWidth","outerHeight","innerWidth","innerHeight","useDimensions","normalizedData","boundDefs","bindDefs","layerById","arcLinkLabels","arcs","arcLabels","ArcLinkLabelsLayer","skipAngle","offset","diagonalLength","straightLength","strokeWidth","textOffset","textColor","linkColor","component","ArcLabelsLayer","radiusOffset","length","layerContext","SvgWrapper","layer","Fragment","Pie","renderWrapper","otherProps","Container","ResponsivePie","props","ResponsiveWrapper","InnerPieCanvas","canvasEl","useRef","useTheme","getBorderColor","useInheritedColor","useArcLabels","useArcLinkLabels","useEffect","current","ctx","getContext","scale","fillStyle","background","fillRect","save","translate","left","top","context","forEach","beginPath","strokeStyle","lineWidth","stroke","drawCanvasArcLinkLabels","drawCanvasArcLabels","restore","renderLegendToCanvas","getArcFromMouse","getRelativeCursor","hoveredArc","findArcUnderCursor","find","handleMouseHover","ref","style","cursor","PieCanvas","ResponsivePieCanvas"],"mappings":"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","sourcesContent":["import { BoxLegendSvg } from '@nivo/legends'\nimport { CompletePieSvgProps, ComputedDatum, DatumId } from './types'\n\ninterface PieLegendsProps<RawDatum> {\n    width: number\n    height: number\n    legends: CompletePieSvgProps<RawDatum>['legends']\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    toggleSerie: (id: DatumId) => void\n}\n\nconst PieLegends = <RawDatum,>({\n    width,\n    height,\n    legends,\n    data,\n    toggleSerie,\n}: PieLegendsProps<RawDatum>) => {\n    return (\n        <>\n            {legends.map((legend, i) => (\n                <BoxLegendSvg\n                    key={i}\n                    {...legend}\n                    containerWidth={width}\n                    containerHeight={height}\n                    data={legend.data ?? data}\n                    toggleSerie={legend.toggleSerie ? toggleSerie : undefined}\n                />\n            ))}\n        </>\n    )\n}\n\nexport default PieLegends\n","import { OrdinalColorScaleConfig } from '@nivo/colors'\nimport { ArcTransitionMode } from '@nivo/arcs'\nimport { PieTooltip } from './PieTooltip'\n\nexport const defaultProps = {\n    id: 'id',\n    value: 'value',\n    sortByValue: false,\n    innerRadius: 0,\n    padAngle: 0,\n    cornerRadius: 0,\n\n    layers: ['arcLinkLabels', 'arcs', 'arcLabels', 'legends'],\n\n    // layout\n    startAngle: 0,\n    endAngle: 360,\n    fit: true,\n    activeInnerRadiusOffset: 0,\n    activeOuterRadiusOffset: 0,\n\n    // border\n    borderWidth: 0,\n    borderColor: {\n        from: 'color',\n        modifiers: [['darker', 1]],\n    },\n\n    // arc labels\n    enableArcLabels: true,\n    arcLabel: 'formattedValue',\n    arcLabelsSkipAngle: 0,\n    arcLabelsRadiusOffset: 0.5,\n    arcLabelsTextColor: { theme: 'labels.text.fill' },\n\n    // arc link labels\n    enableArcLinkLabels: true,\n    arcLinkLabel: 'id',\n    arcLinkLabelsSkipAngle: 0,\n    arcLinkLabelsOffset: 0,\n    arcLinkLabelsDiagonalLength: 16,\n    arcLinkLabelsStraightLength: 24,\n    arcLinkLabelsThickness: 1,\n    arcLinkLabelsTextOffset: 6,\n    arcLinkLabelsTextColor: { theme: 'labels.text.fill' },\n    arcLinkLabelsColor: { theme: 'axis.ticks.line.stroke' },\n\n    colors: { scheme: 'nivo' } as unknown as OrdinalColorScaleConfig,\n    defs: [],\n    fill: [],\n\n    isInteractive: true,\n\n    animate: true,\n    motionConfig: 'gentle',\n    transitionMode: 'innerRadius' as ArcTransitionMode,\n\n    tooltip: PieTooltip,\n\n    legends: [],\n\n    role: 'img',\n\n    pixelRatio: typeof window !== 'undefined' ? window.devicePixelRatio ?? 1 : 1,\n}\n","import { BasicTooltip } from '@nivo/tooltip'\nimport { ComputedDatum } from './types'\n\nexport const PieTooltip = <RawDatum,>({ datum }: { datum: ComputedDatum<RawDatum> }) => (\n    <BasicTooltip\n        id={datum.id}\n        value={datum.formattedValue}\n        enableChip={true}\n        color={datum.color}\n    />\n)\n\nexport default PieTooltip\n","import { useCallback, useMemo, useState } from 'react'\nimport { pie as d3Pie } from 'd3-shape'\nimport { useArcGenerator, computeArcBoundingBox } from '@nivo/arcs'\nimport {\n    degreesToRadians,\n    radiansToDegrees,\n    useValueFormatter,\n    usePropertyAccessor,\n} from '@nivo/core'\nimport { OrdinalColorScaleConfig, useOrdinalColorScale } from '@nivo/colors'\nimport { defaultProps } from './props'\nimport { CompletePieSvgProps, ComputedDatum, DatumId, PieArc, PieCustomLayerProps } from './types'\n\ninterface MayHaveLabel {\n    label?: string | number\n}\n\n/**\n * Format data so that we get a consistent data structure.\n * It will also add the `formattedValue` and `color` property.\n */\nexport const useNormalizedData = <RawDatum extends MayHaveLabel>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    colors = defaultProps.colors as OrdinalColorScaleConfig<\n        Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>\n    >,\n}: Pick<CompletePieSvgProps<RawDatum>, 'id' | 'value' | 'valueFormat' | 'colors'> & {\n    data: RawDatum[]\n}): Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[] => {\n    const getId = usePropertyAccessor<RawDatum, DatumId>(id)\n    const getValue = usePropertyAccessor<RawDatum, number>(value)\n    const formatValue = useValueFormatter<number>(valueFormat)\n\n    const getColor = useOrdinalColorScale<Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'>>(\n        colors,\n        'id'\n    )\n\n    return useMemo(\n        () =>\n            data.map(datum => {\n                const datumId = getId(datum)\n                const datumValue = getValue(datum)\n\n                const normalizedDatum: Omit<ComputedDatum<RawDatum>, 'arc' | 'color' | 'fill'> = {\n                    id: datumId,\n                    label: datum.label ?? datumId,\n                    hidden: false,\n                    value: datumValue,\n                    formattedValue: formatValue(datumValue),\n                    data: datum,\n                }\n\n                return {\n                    ...normalizedDatum,\n                    color: getColor(normalizedDatum),\n                }\n            }),\n        [data, getId, getValue, formatValue, getColor]\n    )\n}\n\n/**\n * Compute arcs, which don't depend yet on radius.\n */\nexport const usePieArcs = <RawDatum>({\n    data,\n    startAngle,\n    endAngle,\n    innerRadius,\n    outerRadius,\n    padAngle,\n    sortByValue,\n    activeId,\n    activeInnerRadiusOffset,\n    activeOuterRadiusOffset,\n    hiddenIds,\n}: {\n    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n    // in degrees\n    startAngle: number\n    // in degrees\n    endAngle: number\n    // in pixels\n    innerRadius: number\n    // in pixels\n    outerRadius: number\n    padAngle: number\n    sortByValue: boolean\n    activeId: null | DatumId\n    activeInnerRadiusOffset: number\n    activeOuterRadiusOffset: number\n    hiddenIds: DatumId[]\n}): {\n    dataWithArc: Omit<ComputedDatum<RawDatum>, 'fill'>[]\n    legendData: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>[]\n} => {\n    const pie = useMemo(() => {\n        const innerPie = d3Pie<Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>>()\n            .value(d => d.value)\n            .startAngle(degreesToRadians(startAngle))\n            .endAngle(degreesToRadians(endAngle))\n            .padAngle(degreesToRadians(padAngle))\n\n        if (!sortByValue) {\n            innerPie.sortValues(null)\n        }\n\n        return innerPie\n    }, [startAngle, endAngle, padAngle, sortByValue])\n\n    return useMemo(() => {\n        const hiddenData = data.filter(item => !hiddenIds.includes(item.id))\n        const dataWithArc = pie(hiddenData).map(\n            (\n                arc: Omit<\n                    PieArc,\n                    'angle' | 'angleDeg' | 'innerRadius' | 'outerRadius' | 'thickness'\n                > & {\n                    data: Omit<ComputedDatum<RawDatum>, 'arc' | 'fill'>\n                }\n            ) => {\n                const angle = Math.abs(arc.endAngle - arc.startAngle)\n\n                return {\n                    ...arc.data,\n                    arc: {\n                        index: arc.index,\n                        startAngle: arc.startAngle,\n                        endAngle: arc.endAngle,\n                        innerRadius:\n                            activeId === arc.data.id\n                                ? innerRadius - activeInnerRadiusOffset\n                                : innerRadius,\n                        outerRadius:\n                            activeId === arc.data.id\n                                ? outerRadius + activeOuterRadiusOffset\n                                : outerRadius,\n                        thickness: outerRadius - innerRadius,\n                        padAngle: arc.padAngle,\n                        angle,\n                        angleDeg: radiansToDegrees(angle),\n                    },\n                }\n            }\n        )\n        const legendData = data.map(item => ({ ...item, hidden: hiddenIds.includes(item.id) }))\n\n        return { dataWithArc, legendData }\n    }, [\n        pie,\n        data,\n        hiddenIds,\n        activeId,\n        innerRadius,\n        activeInnerRadiusOffset,\n        outerRadius,\n        activeOuterRadiusOffset,\n    ])\n}\n\n/**\n * Compute pie layout using explicit radius/innerRadius,\n * expressed in pixels.\n */\nexport const usePie = <RawDatum>({\n    data,\n    radius,\n    innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    Partial<CompletePieSvgProps<RawDatum>>,\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n    radius: number\n    innerRadius: number\n}) => {\n    const [activeId, setActiveId] = useState<DatumId | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius,\n        outerRadius: radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({ cornerRadius, padAngle: degreesToRadians(padAngle) })\n\n    return { ...pieArcs, arcGenerator, setActiveId, toggleSerie }\n}\n\n/**\n * Compute pie layout using a box to find radius/innerRadius,\n * expressed in ratio (0~1), can optionally use the `fit`\n * attribute to find the most space efficient layout.\n *\n * It also returns `centerX`/`centerY` as those can be altered\n * if `fit` is `true`.\n */\nexport const usePieFromBox = <RawDatum>({\n    data,\n    width,\n    height,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    sortByValue = defaultProps.sortByValue,\n    cornerRadius = defaultProps.cornerRadius,\n    fit = defaultProps.fit,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n}: Pick<\n    CompletePieSvgProps<RawDatum>,\n    | 'width'\n    | 'height'\n    | 'innerRadius'\n    | 'startAngle'\n    | 'endAngle'\n    | 'padAngle'\n    | 'sortByValue'\n    | 'cornerRadius'\n    | 'fit'\n    | 'activeInnerRadiusOffset'\n    | 'activeOuterRadiusOffset'\n> & {\n    data: Omit<ComputedDatum<RawDatum>, 'arc'>[]\n}) => {\n    const [activeId, setActiveId] = useState<string | number | null>(null)\n    const [hiddenIds, setHiddenIds] = useState<DatumId[]>([])\n    const computedProps = useMemo(() => {\n        let radius = Math.min(width, height) / 2\n        let innerRadius = radius * Math.min(innerRadiusRatio, 1)\n\n        let centerX = width / 2\n        let centerY = height / 2\n\n        let boundingBox\n        if (fit) {\n            const { points, ...box } = computeArcBoundingBox(\n                centerX,\n                centerY,\n                radius,\n                startAngle - 90,\n                endAngle - 90\n            )\n            const ratio = Math.min(width / box.width, height / box.height)\n\n            const adjustedBox: {\n                width: number\n                height: number\n                x?: number\n                y?: number\n            } = {\n                width: box.width * ratio,\n                height: box.height * ratio,\n            }\n            adjustedBox.x = (width - adjustedBox.width) / 2\n            adjustedBox.y = (height - adjustedBox.height) / 2\n\n            centerX = ((centerX - box.x) / box.width) * box.width * ratio + adjustedBox.x\n            centerY = ((centerY - box.y) / box.height) * box.height * ratio + adjustedBox.y\n\n            boundingBox = { box, ratio, points }\n\n            radius = radius * ratio\n            innerRadius = innerRadius * ratio\n        }\n\n        return {\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n            debug: boundingBox,\n        }\n    }, [width, height, innerRadiusRatio, startAngle, endAngle, fit, cornerRadius])\n\n    const pieArcs = usePieArcs({\n        data,\n        startAngle,\n        endAngle,\n        innerRadius: computedProps.innerRadius,\n        outerRadius: computedProps.radius,\n        padAngle,\n        sortByValue,\n        activeId,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n        hiddenIds,\n    })\n\n    const toggleSerie = useCallback((id: DatumId) => {\n        setHiddenIds(state =>\n            state.indexOf(id) > -1 ? state.filter(item => item !== id) : [...state, id]\n        )\n    }, [])\n\n    const arcGenerator = useArcGenerator({\n        cornerRadius,\n        padAngle: degreesToRadians(padAngle),\n    })\n\n    return {\n        arcGenerator,\n        setActiveId,\n        toggleSerie,\n        ...pieArcs,\n        ...computedProps,\n    }\n}\n\n/**\n * Memoize the context to pass to custom layers.\n */\nexport const usePieLayerContext = <RawDatum>({\n    dataWithArc,\n    arcGenerator,\n    centerX,\n    centerY,\n    radius,\n    innerRadius,\n}: PieCustomLayerProps<RawDatum>): PieCustomLayerProps<RawDatum> =>\n    useMemo(\n        () => ({\n            dataWithArc,\n            arcGenerator,\n            centerX,\n            centerY,\n            radius,\n            innerRadius,\n        }),\n        [dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius]\n    )\n","import { createElement, useMemo } from 'react'\nimport * as React from 'react'\nimport { ArcGenerator, ArcsLayer } from '@nivo/arcs'\nimport { useTooltip } from '@nivo/tooltip'\nimport { ComputedDatum, CompletePieSvgProps } from './types'\n\ninterface ArcsProps<RawDatum> {\n    center: [number, number]\n    data: ComputedDatum<RawDatum>[]\n    arcGenerator: ArcGenerator\n    borderWidth: CompletePieSvgProps<RawDatum>['borderWidth']\n    borderColor: CompletePieSvgProps<RawDatum>['borderColor']\n    isInteractive: CompletePieSvgProps<RawDatum>['isInteractive']\n    onClick?: CompletePieSvgProps<RawDatum>['onClick']\n    onMouseEnter?: CompletePieSvgProps<RawDatum>['onMouseEnter']\n    onMouseMove?: CompletePieSvgProps<RawDatum>['onMouseMove']\n    onMouseLeave?: CompletePieSvgProps<RawDatum>['onMouseLeave']\n    setActiveId: (id: null | string | number) => void\n    tooltip: CompletePieSvgProps<RawDatum>['tooltip']\n    transitionMode: CompletePieSvgProps<RawDatum>['transitionMode']\n}\n\nexport const Arcs = <RawDatum,>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    setActiveId,\n    tooltip,\n    transitionMode,\n}: ArcsProps<RawDatum>) => {\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleClick = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            onClick?.(datum, event)\n        }\n    }, [isInteractive, onClick])\n\n    const handleMouseEnter = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            setActiveId(datum.id)\n            onMouseEnter?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, setActiveId, onMouseEnter])\n\n    const handleMouseMove = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n            onMouseMove?.(datum, event)\n        }\n    }, [isInteractive, showTooltipFromEvent, onMouseMove])\n\n    const handleMouseLeave = useMemo(() => {\n        if (!isInteractive) return undefined\n\n        return (datum: ComputedDatum<RawDatum>, event: React.MouseEvent<SVGPathElement>) => {\n            hideTooltip()\n            setActiveId(null)\n            onMouseLeave?.(datum, event)\n        }\n    }, [isInteractive, hideTooltip, setActiveId, onMouseLeave])\n\n    return (\n        <ArcsLayer<ComputedDatum<RawDatum>>\n            center={center}\n            data={data}\n            arcGenerator={arcGenerator}\n            borderWidth={borderWidth}\n            borderColor={borderColor}\n            transitionMode={transitionMode}\n            onClick={handleClick}\n            onMouseEnter={handleMouseEnter}\n            onMouseMove={handleMouseMove}\n            onMouseLeave={handleMouseLeave}\n        />\n    )\n}\n","import { ReactNode, Fragment, createElement } from 'react'\nimport {\n    // @ts-ignore\n    bindDefs,\n    useDimensions,\n    Container,\n    SvgWrapper,\n} from '@nivo/core'\nimport { ArcLabelsLayer, ArcLinkLabelsLayer } from '@nivo/arcs'\nimport { InheritedColorConfig } from '@nivo/colors'\nimport PieLegends from './PieLegends'\nimport { useNormalizedData, usePieFromBox, usePieLayerContext } from './hooks'\nimport { ComputedDatum, PieLayer, PieSvgProps, PieLayerId } from './types'\nimport { defaultProps } from './props'\nimport { Arcs } from './Arcs'\n\nconst InnerPie = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    layers = defaultProps.layers as PieLayer<RawDatum>[],\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n    arcLabelsComponent,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n    arcLinkLabelComponent,\n\n    // styling\n    defs = defaultProps.defs,\n    fill = defaultProps.fill,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    tooltip = defaultProps.tooltip,\n\n    transitionMode = defaultProps.transitionMode,\n\n    legends = defaultProps.legends,\n    role = defaultProps.role,\n}: PieSvgProps<RawDatum>) => {\n    const { outerWidth, outerHeight, margin, innerWidth, innerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const {\n        dataWithArc,\n        legendData,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n        setActiveId,\n        toggleSerie,\n    } = usePieFromBox<RawDatum>({\n        data: normalizedData,\n        width: innerWidth,\n        height: innerHeight,\n        fit,\n        innerRadius: innerRadiusRatio,\n        startAngle,\n        endAngle,\n        padAngle,\n        sortByValue,\n        cornerRadius,\n        activeInnerRadiusOffset,\n        activeOuterRadiusOffset,\n    })\n\n    const boundDefs = bindDefs(defs, dataWithArc, fill)\n\n    const layerById: Record<PieLayerId, ReactNode> = {\n        arcLinkLabels: null,\n        arcs: null,\n        arcLabels: null,\n        legends: null,\n    }\n\n    if (enableArcLinkLabels && layers.includes('arcLinkLabels')) {\n        layerById.arcLinkLabels = (\n            <ArcLinkLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLinkLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLinkLabel}\n                skipAngle={arcLinkLabelsSkipAngle}\n                offset={arcLinkLabelsOffset}\n                diagonalLength={arcLinkLabelsDiagonalLength}\n                straightLength={arcLinkLabelsStraightLength}\n                strokeWidth={arcLinkLabelsThickness}\n                textOffset={arcLinkLabelsTextOffset}\n                textColor={arcLinkLabelsTextColor}\n                linkColor={arcLinkLabelsColor}\n                component={arcLinkLabelComponent}\n            />\n        )\n    }\n\n    if (layers.includes('arcs')) {\n        layerById.arcs = (\n            <Arcs<RawDatum>\n                key=\"arcs\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                arcGenerator={arcGenerator}\n                borderWidth={borderWidth}\n                borderColor={borderColor}\n                isInteractive={isInteractive}\n                onClick={onClick}\n                onMouseEnter={onMouseEnter}\n                onMouseMove={onMouseMove}\n                onMouseLeave={onMouseLeave}\n                setActiveId={setActiveId}\n                tooltip={tooltip}\n                transitionMode={transitionMode}\n            />\n        )\n    }\n\n    if (enableArcLabels && layers.includes('arcLabels')) {\n        layerById.arcLabels = (\n            <ArcLabelsLayer<ComputedDatum<RawDatum>>\n                key=\"arcLabels\"\n                center={[centerX, centerY]}\n                data={dataWithArc}\n                label={arcLabel}\n                radiusOffset={arcLabelsRadiusOffset}\n                skipAngle={arcLabelsSkipAngle}\n                textColor={arcLabelsTextColor}\n                transitionMode={transitionMode}\n                component={arcLabelsComponent}\n            />\n        )\n    }\n\n    if (legends.length > 0 && layers.includes('legends')) {\n        layerById.legends = (\n            <PieLegends<RawDatum>\n                key=\"legends\"\n                width={innerWidth}\n                height={innerHeight}\n                data={legendData}\n                legends={legends}\n                toggleSerie={toggleSerie}\n            />\n        )\n    }\n\n    const layerContext = usePieLayerContext<RawDatum>({\n        dataWithArc,\n        arcGenerator,\n        centerX,\n        centerY,\n        radius,\n        innerRadius,\n    })\n\n    return (\n        <SvgWrapper\n            width={outerWidth}\n            height={outerHeight}\n            margin={margin}\n            defs={boundDefs}\n            role={role}\n        >\n            {layers.map((layer, i) => {\n                if (layerById[layer as PieLayerId] !== undefined) {\n                    return layerById[layer as PieLayerId]\n                }\n\n                if (typeof layer === 'function') {\n                    return <Fragment key={i}>{createElement(layer, layerContext)}</Fragment>\n                }\n\n                return null\n            })}\n        </SvgWrapper>\n    )\n}\n\nexport const Pie = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    animate = defaultProps.animate,\n    motionConfig = defaultProps.motionConfig,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieSvgProps<RawDatum>) => (\n    <Container\n        {...{\n            animate,\n            isInteractive,\n            motionConfig,\n            renderWrapper,\n            theme,\n        }}\n    >\n        <InnerPie<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { Pie } from './Pie'\nimport { PieSvgProps } from './types'\n\nexport const ResponsivePie = <RawDatum,>(\n    props: Omit<PieSvgProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <Pie<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n","import { createElement, useEffect, useMemo, useRef } from 'react'\nimport * as React from 'react'\nimport { getRelativeCursor, useDimensions, useTheme, Container } from '@nivo/core'\nimport { renderLegendToCanvas } from '@nivo/legends'\nimport { useInheritedColor, InheritedColorConfig } from '@nivo/colors'\nimport { useTooltip } from '@nivo/tooltip'\nimport {\n    Arc,\n    findArcUnderCursor,\n    useArcLabels,\n    drawCanvasArcLabels,\n    useArcLinkLabels,\n    drawCanvasArcLinkLabels,\n} from '@nivo/arcs'\nimport { useNormalizedData, usePieFromBox } from './hooks'\nimport { ComputedDatum, PieCanvasProps } from './types'\nimport { defaultProps } from './props'\n\nconst InnerPieCanvas = <RawDatum,>({\n    data,\n    id = defaultProps.id,\n    value = defaultProps.value,\n    valueFormat,\n    sortByValue = defaultProps.sortByValue,\n\n    startAngle = defaultProps.startAngle,\n    endAngle = defaultProps.endAngle,\n    padAngle = defaultProps.padAngle,\n    fit = defaultProps.fit,\n    innerRadius: innerRadiusRatio = defaultProps.innerRadius,\n    cornerRadius = defaultProps.cornerRadius,\n    activeInnerRadiusOffset = defaultProps.activeInnerRadiusOffset,\n    activeOuterRadiusOffset = defaultProps.activeOuterRadiusOffset,\n\n    width,\n    height,\n    margin: partialMargin,\n    pixelRatio = 1,\n\n    colors = defaultProps.colors,\n\n    // border\n    borderWidth = defaultProps.borderWidth,\n    borderColor = defaultProps.borderColor as InheritedColorConfig<ComputedDatum<RawDatum>>,\n\n    // arc labels\n    enableArcLabels = defaultProps.enableArcLabels,\n    arcLabel = defaultProps.arcLabel,\n    arcLabelsSkipAngle = defaultProps.arcLabelsSkipAngle,\n    arcLabelsTextColor = defaultProps.arcLabelsTextColor,\n    arcLabelsRadiusOffset = defaultProps.arcLabelsRadiusOffset,\n\n    // arc link labels\n    enableArcLinkLabels = defaultProps.enableArcLinkLabels,\n    arcLinkLabel = defaultProps.arcLinkLabel,\n    arcLinkLabelsSkipAngle = defaultProps.arcLinkLabelsSkipAngle,\n    arcLinkLabelsOffset = defaultProps.arcLinkLabelsOffset,\n    arcLinkLabelsDiagonalLength = defaultProps.arcLinkLabelsDiagonalLength,\n    arcLinkLabelsStraightLength = defaultProps.arcLinkLabelsStraightLength,\n    arcLinkLabelsThickness = defaultProps.arcLinkLabelsThickness,\n    arcLinkLabelsTextOffset = defaultProps.arcLinkLabelsTextOffset,\n    arcLinkLabelsTextColor = defaultProps.arcLinkLabelsTextColor,\n    arcLinkLabelsColor = defaultProps.arcLinkLabelsColor,\n\n    // interactivity\n    isInteractive = defaultProps.isInteractive,\n    onClick,\n    onMouseMove,\n    tooltip = defaultProps.tooltip,\n\n    legends = defaultProps.legends,\n}: PieCanvasProps<RawDatum>) => {\n    const canvasEl = useRef<HTMLCanvasElement | null>(null)\n    const theme = useTheme()\n\n    const { margin, innerWidth, innerHeight, outerWidth, outerHeight } = useDimensions(\n        width,\n        height,\n        partialMargin\n    )\n\n    const normalizedData = useNormalizedData<RawDatum>({\n        data,\n        id,\n        value,\n        valueFormat,\n        colors,\n    })\n\n    const { dataWithArc, arcGenerator, centerX, centerY, radius, innerRadius, setActiveId } =\n        usePieFromBox<RawDatum>({\n            data: normalizedData,\n            width: innerWidth,\n            height: innerHeight,\n            fit,\n            innerRadius: innerRadiusRatio,\n            startAngle,\n            endAngle,\n            padAngle,\n            sortByValue,\n            cornerRadius,\n            activeInnerRadiusOffset,\n            activeOuterRadiusOffset,\n        })\n\n    const getBorderColor = useInheritedColor<ComputedDatum<RawDatum>>(borderColor, theme)\n\n    const arcLabels = useArcLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        label: arcLabel,\n        skipAngle: arcLabelsSkipAngle,\n        offset: arcLabelsRadiusOffset,\n        textColor: arcLabelsTextColor,\n    })\n\n    const arcLinkLabels = useArcLinkLabels<ComputedDatum<RawDatum>>({\n        data: dataWithArc,\n        skipAngle: arcLinkLabelsSkipAngle,\n        offset: arcLinkLabelsOffset,\n        diagonalLength: arcLinkLabelsDiagonalLength,\n        straightLength: arcLinkLabelsStraightLength,\n        label: arcLinkLabel,\n        linkColor: arcLinkLabelsColor,\n        textOffset: arcLinkLabelsTextOffset,\n        textColor: arcLinkLabelsTextColor,\n    })\n\n    useEffect(() => {\n        if (!canvasEl.current) return\n\n        canvasEl.current.width = outerWidth * pixelRatio\n        canvasEl.current.height = outerHeight * pixelRatio\n\n        const ctx = canvasEl.current.getContext('2d')!\n\n        ctx.scale(pixelRatio, pixelRatio)\n\n        ctx.fillStyle = theme.background\n        ctx.fillRect(0, 0, outerWidth, outerHeight)\n\n        ctx.save()\n        ctx.translate(margin.left, margin.top)\n        arcGenerator.context(ctx)\n\n        ctx.save()\n        ctx.translate(centerX, centerY)\n\n        dataWithArc.forEach(arc => {\n            ctx.beginPath()\n            ctx.fillStyle = arc.color\n\n            ctx.strokeStyle = getBorderColor(arc)\n            ctx.lineWidth = borderWidth\n\n            arcGenerator(arc.arc)\n\n            ctx.fill()\n\n            if (borderWidth > 0) {\n                ctx.stroke()\n            }\n        })\n\n        if (enableArcLinkLabels === true) {\n            drawCanvasArcLinkLabels<ComputedDatum<RawDatum>>(\n                ctx,\n                arcLinkLabels,\n                theme,\n                arcLinkLabelsThickness\n            )\n        }\n\n        if (enableArcLabels === true) {\n            drawCanvasArcLabels<ComputedDatum<RawDatum>>(ctx, arcLabels, theme)\n        }\n\n        // legends assume a box rather than a center,\n        // that's why we restore previously saved position here.\n        ctx.restore()\n        legends.forEach(legend => {\n            renderLegendToCanvas(ctx, {\n                ...legend,\n                data: dataWithArc,\n                containerWidth: innerWidth,\n                containerHeight: innerHeight,\n                theme,\n            })\n        })\n    }, [\n        canvasEl,\n        innerWidth,\n        innerHeight,\n        outerWidth,\n        outerHeight,\n        margin.top,\n        margin.left,\n        pixelRatio,\n        centerX,\n        centerY,\n        arcGenerator,\n        dataWithArc,\n        getBorderColor,\n        enableArcLabels,\n        arcLabels,\n        enableArcLinkLabels,\n        arcLinkLabels,\n        arcLinkLabelsThickness,\n        legends,\n        theme,\n    ])\n\n    const arcs = useMemo(\n        () =>\n            dataWithArc.map(datum => ({\n                id: datum.id,\n                ...datum.arc,\n            })),\n        [dataWithArc]\n    )\n\n    const getArcFromMouse = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!canvasEl.current) return null\n\n        const [x, y] = getRelativeCursor(canvasEl.current, event)\n\n        const hoveredArc = findArcUnderCursor<Arc & { id: string | number }>(\n            margin.left + centerX,\n            margin.top + centerY,\n            radius,\n            innerRadius,\n            arcs,\n            x,\n            y\n        )\n\n        if (!hoveredArc) return null\n\n        return dataWithArc.find(datum => datum.id === hoveredArc.id)\n    }\n\n    const { showTooltipFromEvent, hideTooltip } = useTooltip()\n\n    const handleMouseHover = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        const datum = getArcFromMouse(event)\n        if (datum) {\n            onMouseMove?.(datum, event)\n            setActiveId(datum.id)\n            showTooltipFromEvent(createElement(tooltip, { datum }), event)\n        } else {\n            setActiveId(null)\n            hideTooltip()\n        }\n    }\n\n    const handleMouseLeave = () => {\n        hideTooltip()\n    }\n\n    const handleClick = (event: React.MouseEvent<HTMLCanvasElement>) => {\n        if (!onClick) return\n\n        const arc = getArcFromMouse(event)\n        if (arc) {\n            onClick(arc, event)\n        }\n    }\n\n    return (\n        <canvas\n            ref={canvasEl}\n            width={outerWidth * pixelRatio}\n            height={outerHeight * pixelRatio}\n            style={{\n                width: outerWidth,\n                height: outerHeight,\n                cursor: isInteractive ? 'auto' : 'normal',\n            }}\n            onMouseEnter={isInteractive ? handleMouseHover : undefined}\n            onMouseMove={isInteractive ? handleMouseHover : undefined}\n            onMouseLeave={isInteractive ? handleMouseLeave : undefined}\n            onClick={isInteractive ? handleClick : undefined}\n        />\n    )\n}\n\nexport const PieCanvas = <RawDatum,>({\n    isInteractive = defaultProps.isInteractive,\n    theme,\n    renderWrapper,\n    ...otherProps\n}: PieCanvasProps<RawDatum>) => (\n    <Container {...{ isInteractive, renderWrapper, theme }}>\n        <InnerPieCanvas<RawDatum> isInteractive={isInteractive} {...otherProps} />\n    </Container>\n)\n","import { ResponsiveWrapper } from '@nivo/core'\nimport { PieCanvas } from './PieCanvas'\nimport { PieCanvasProps } from './types'\n\nexport const ResponsivePieCanvas = <RawDatum,>(\n    props: Omit<PieCanvasProps<RawDatum>, 'width' | 'height'>\n) => (\n    <ResponsiveWrapper>\n        {({ width, height }: { width: number; height: number }) => (\n            <PieCanvas<RawDatum> width={width} height={height} {...props} />\n        )}\n    </ResponsiveWrapper>\n)\n"]},"metadata":{},"sourceType":"module"}