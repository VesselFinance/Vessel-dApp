{"ast":null,"code":"import { animated as t, to as n, useTransition as e, useSpring as r } from \"@react-spring/web\";\nimport { useTheme as i, radiansToDegrees as a, positionFromAngle as o, degreesToRadians as u, midAngle as l, useMotionConfig as s, usePropertyAccessor as d, textPropsByEngine as f, getDistance as c, getAngle as g } from \"@nivo/core\";\nimport { jsx as p, jsxs as h } from \"react/jsx-runtime\";\nimport { useMemo as v, createElement as A, useCallback as x } from \"react\";\nimport { useInheritedColor as R } from \"@nivo/colors\";\nimport { line as m, arc as y } from \"d3-shape\";\n\nfunction M() {\n  return M = Object.assign || function (t) {\n    for (var n = 1; n < arguments.length; n++) {\n      var e = arguments[n];\n\n      for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && (t[r] = e[r]);\n    }\n\n    return t;\n  }, M.apply(this, arguments);\n}\n\nvar k = {\n  pointerEvents: \"none\"\n},\n    C = function (n) {\n  var e = n.label,\n      r = n.style,\n      a = i();\n  return p(t.g, {\n    transform: r.transform,\n    opacity: r.progress,\n    style: k,\n    children: p(t.text, {\n      textAnchor: \"middle\",\n      dominantBaseline: \"central\",\n      style: M({}, a.labels.text, {\n        fill: r.textColor\n      }),\n      children: e\n    })\n  });\n},\n    b = function (t) {\n  var n = t % (2 * Math.PI);\n  return n < 0 && (n += 2 * Math.PI), n;\n},\n    L = function (t, n) {\n  return t.filter(function (t) {\n    return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= n;\n  });\n},\n    P = function (t, n, e, r, i) {\n  return [\"A\", t, t, 0, n, e, r, i].join(\" \");\n},\n    O = [\"startAngle\", \"middleAngle\", \"endAngle\", \"innerRadius\", \"centerRadius\", \"outerRadius\", \"pushIn\", \"pushOut\"],\n    E = {\n  startAngle: {\n    enter: function (t) {\n      return M({}, t, {\n        endAngle: t.startAngle\n      });\n    },\n    update: function (t) {\n      return t;\n    },\n    leave: function (t) {\n      return M({}, t, {\n        startAngle: t.endAngle\n      });\n    }\n  },\n  middleAngle: {\n    enter: function (t) {\n      var n = t.startAngle + (t.endAngle - t.startAngle) / 2;\n      return M({}, t, {\n        startAngle: n,\n        endAngle: n\n      });\n    },\n    update: function (t) {\n      return t;\n    },\n    leave: function (t) {\n      var n = t.startAngle + (t.endAngle - t.startAngle) / 2;\n      return M({}, t, {\n        startAngle: n,\n        endAngle: n\n      });\n    }\n  },\n  endAngle: {\n    enter: function (t) {\n      return M({}, t, {\n        startAngle: t.endAngle\n      });\n    },\n    update: function (t) {\n      return t;\n    },\n    leave: function (t) {\n      return M({}, t, {\n        endAngle: t.startAngle\n      });\n    }\n  },\n  innerRadius: {\n    enter: function (t) {\n      return M({}, t, {\n        outerRadius: t.innerRadius\n      });\n    },\n    update: function (t) {\n      return t;\n    },\n    leave: function (t) {\n      return M({}, t, {\n        innerRadius: t.outerRadius\n      });\n    }\n  },\n  centerRadius: {\n    enter: function (t) {\n      var n = t.innerRadius + (t.outerRadius - t.innerRadius) / 2;\n      return M({}, t, {\n        innerRadius: n,\n        outerRadius: n\n      });\n    },\n    update: function (t) {\n      return t;\n    },\n    leave: function (t) {\n      var n = t.innerRadius + (t.outerRadius - t.innerRadius) / 2;\n      return M({}, t, {\n        innerRadius: n,\n        outerRadius: n\n      });\n    }\n  },\n  outerRadius: {\n    enter: function (t) {\n      return M({}, t, {\n        innerRadius: t.outerRadius\n      });\n    },\n    update: function (t) {\n      return t;\n    },\n    leave: function (t) {\n      return M({}, t, {\n        outerRadius: t.innerRadius\n      });\n    }\n  },\n  pushIn: {\n    enter: function (t) {\n      return M({}, t, {\n        innerRadius: t.innerRadius - t.outerRadius + t.innerRadius,\n        outerRadius: t.innerRadius\n      });\n    },\n    update: function (t) {\n      return t;\n    },\n    leave: function (t) {\n      return M({}, t, {\n        innerRadius: t.outerRadius,\n        outerRadius: t.outerRadius + t.outerRadius - t.innerRadius\n      });\n    }\n  },\n  pushOut: {\n    enter: function (t) {\n      return M({}, t, {\n        innerRadius: t.outerRadius,\n        outerRadius: t.outerRadius + t.outerRadius - t.innerRadius\n      });\n    },\n    update: function (t) {\n      return t;\n    },\n    leave: function (t) {\n      return M({}, t, {\n        innerRadius: t.innerRadius - t.outerRadius + t.innerRadius,\n        outerRadius: t.innerRadius\n      });\n    }\n  }\n},\n    I = function (t, n) {\n  return v(function () {\n    var e = E[t];\n    return {\n      enter: function (t) {\n        return M({\n          progress: 0\n        }, e.enter(t.arc), n ? n.enter(t) : {});\n      },\n      update: function (t) {\n        return M({\n          progress: 1\n        }, e.update(t.arc), n ? n.update(t) : {});\n      },\n      leave: function (t) {\n        return M({\n          progress: 0\n        }, e.leave(t.arc), n ? n.leave(t) : {});\n      }\n    };\n  }, [t, n]);\n},\n    T = function (t, n) {\n  var e = l(t) - Math.PI / 2,\n      r = t.innerRadius + (t.outerRadius - t.innerRadius) * n;\n  return o(e, r);\n},\n    j = function (t) {\n  return function (e, r, i, a) {\n    return n([e, r, i, a], function (n, e, r, i) {\n      var a = T({\n        startAngle: n,\n        endAngle: e,\n        innerRadius: r,\n        outerRadius: i\n      }, t);\n      return \"translate(\" + a.x + \",\" + a.y + \")\";\n    });\n  };\n},\n    W = function (t, n, r, i) {\n  void 0 === n && (n = .5), void 0 === r && (r = \"innerRadius\");\n  var a = s(),\n      o = a.animate,\n      u = a.config,\n      l = I(r, i);\n  return {\n    transition: e(t, {\n      keys: function (t) {\n        return t.id;\n      },\n      initial: l.update,\n      from: l.enter,\n      enter: l.update,\n      update: l.update,\n      leave: l.leave,\n      config: u,\n      immediate: !o\n    }),\n    interpolate: j(n)\n  };\n},\n    S = function (t) {\n  var n = t.data,\n      e = t.offset,\n      r = void 0 === e ? .5 : e,\n      i = t.skipAngle,\n      a = void 0 === i ? 0 : i,\n      o = t.computeExtraProps,\n      u = void 0 === o ? function () {\n    return {};\n  } : o;\n  return v(function () {\n    return L(n, a).map(function (t) {\n      var n = T(t.arc, r);\n      return M({}, u(t), {\n        x: n.x,\n        y: n.y,\n        data: t\n      });\n    });\n  }, [n, r, a, u]);\n},\n    B = function (t) {\n  var n = t.center,\n      e = t.data,\n      r = t.transitionMode,\n      o = t.label,\n      u = t.radiusOffset,\n      l = t.skipAngle,\n      s = t.textColor,\n      f = t.component,\n      c = void 0 === f ? C : f,\n      g = d(o),\n      h = i(),\n      x = R(s, h),\n      m = v(function () {\n    return e.filter(function (t) {\n      return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= l;\n    });\n  }, [e, l]),\n      y = W(m, u, r),\n      k = y.transition,\n      b = y.interpolate,\n      L = c;\n  return p(\"g\", {\n    transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n    children: k(function (t, n) {\n      return A(L, {\n        key: n.id,\n        datum: n,\n        label: g(n),\n        style: M({}, t, {\n          transform: b(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius),\n          textColor: x(n)\n        })\n      });\n    })\n  });\n},\n    w = function (t, n, e) {\n  t.textAlign = \"center\", t.textBaseline = \"middle\", t.font = e.labels.text.fontSize + \"px \" + e.labels.text.fontFamily, n.forEach(function (n) {\n    t.fillStyle = n.textColor, t.fillText(\"\" + n.label, n.x, n.y);\n  });\n},\n    z = function (t) {\n  var n = t.data,\n      e = t.offset,\n      r = t.skipAngle,\n      a = t.label,\n      o = t.textColor,\n      u = d(a),\n      l = i(),\n      s = R(o, l),\n      f = x(function (t) {\n    return {\n      label: u(t),\n      textColor: s(t)\n    };\n  }, [u, s]);\n  return S({\n    data: n,\n    offset: e,\n    skipAngle: r,\n    computeExtraProps: f\n  });\n},\n    F = C,\n    G = function (n) {\n  var e = n.label,\n      r = n.style,\n      a = i();\n  return h(t.g, {\n    opacity: r.opacity,\n    children: [p(t.path, {\n      fill: \"none\",\n      stroke: r.linkColor,\n      strokeWidth: r.thickness,\n      d: r.path\n    }), p(t.text, {\n      transform: r.textPosition,\n      textAnchor: r.textAnchor,\n      dominantBaseline: \"central\",\n      style: M({}, a.labels.text, {\n        fill: r.textColor\n      }),\n      children: e\n    })]\n  });\n},\n    q = function (t) {\n  var n = b(t.startAngle + (t.endAngle - t.startAngle) / 2 - Math.PI / 2);\n  return n < Math.PI / 2 || n > 1.5 * Math.PI ? \"start\" : \"end\";\n},\n    D = function (t, n, e, r) {\n  var i,\n      a,\n      u = b(t.startAngle + (t.endAngle - t.startAngle) / 2 - Math.PI / 2),\n      l = o(u, t.outerRadius + n),\n      s = o(u, t.outerRadius + n + e);\n  return u < Math.PI / 2 || u > 1.5 * Math.PI ? (i = \"after\", a = {\n    x: s.x + r,\n    y: s.y\n  }) : (i = \"before\", a = {\n    x: s.x - r,\n    y: s.y\n  }), {\n    side: i,\n    points: [l, s, a]\n  };\n},\n    H = m().x(function (t) {\n  return t.x;\n}).y(function (t) {\n  return t.y;\n}),\n    J = function (t, e, r, i, a, o, u) {\n  return n([t, e, r, i, a, o, u], function (t, n, e, r, i, a, o) {\n    var u = D({\n      startAngle: t,\n      endAngle: n,\n      innerRadius: e,\n      outerRadius: r\n    }, i, a, o).points;\n    return H(u);\n  });\n},\n    K = function (t, e, r, i) {\n  return n([t, e, r, i], function (t, n, e, r) {\n    return q({\n      startAngle: t,\n      endAngle: n,\n      innerRadius: e,\n      outerRadius: r\n    });\n  });\n},\n    N = function (t, e, r, i, a, o, u, l) {\n  return n([t, e, r, i, a, o, u, l], function (t, n, e, r, i, a, o, u) {\n    var l = D({\n      startAngle: t,\n      endAngle: n,\n      innerRadius: e,\n      outerRadius: r\n    }, i, a, o),\n        s = l.points,\n        d = l.side,\n        f = s[2];\n    return \"before\" === d ? f.x -= u : f.x += u, \"translate(\" + f.x + \",\" + f.y + \")\";\n  });\n},\n    Q = function (t) {\n  var n = t.data,\n      r = t.offset,\n      a = void 0 === r ? 0 : r,\n      o = t.diagonalLength,\n      u = t.straightLength,\n      l = t.skipAngle,\n      d = void 0 === l ? 0 : l,\n      f = t.textOffset,\n      c = t.linkColor,\n      g = t.textColor,\n      p = s(),\n      h = p.animate,\n      A = p.config,\n      x = i(),\n      m = R(c, x),\n      y = R(g, x),\n      M = function (t, n) {\n    return v(function () {\n      return L(t, n);\n    }, [t, n]);\n  }(n, d),\n      k = function (t) {\n    var n = t.offset,\n        e = t.diagonalLength,\n        r = t.straightLength,\n        i = t.textOffset,\n        a = t.getLinkColor,\n        o = t.getTextColor;\n    return v(function () {\n      return {\n        enter: function (t) {\n          return {\n            startAngle: t.arc.startAngle,\n            endAngle: t.arc.endAngle,\n            innerRadius: t.arc.innerRadius,\n            outerRadius: t.arc.outerRadius,\n            offset: n,\n            diagonalLength: 0,\n            straightLength: 0,\n            textOffset: i,\n            linkColor: a(t),\n            textColor: o(t),\n            opacity: 0\n          };\n        },\n        update: function (t) {\n          return {\n            startAngle: t.arc.startAngle,\n            endAngle: t.arc.endAngle,\n            innerRadius: t.arc.innerRadius,\n            outerRadius: t.arc.outerRadius,\n            offset: n,\n            diagonalLength: e,\n            straightLength: r,\n            textOffset: i,\n            linkColor: a(t),\n            textColor: o(t),\n            opacity: 1\n          };\n        },\n        leave: function (t) {\n          return {\n            startAngle: t.arc.startAngle,\n            endAngle: t.arc.endAngle,\n            innerRadius: t.arc.innerRadius,\n            outerRadius: t.arc.outerRadius,\n            offset: n,\n            diagonalLength: 0,\n            straightLength: 0,\n            textOffset: i,\n            linkColor: a(t),\n            textColor: o(t),\n            opacity: 0\n          };\n        }\n      };\n    }, [e, r, i, a, o]);\n  }({\n    offset: a,\n    diagonalLength: o,\n    straightLength: u,\n    textOffset: f,\n    getLinkColor: m,\n    getTextColor: y\n  });\n\n  return {\n    transition: e(M, {\n      keys: function (t) {\n        return t.id;\n      },\n      initial: k.update,\n      from: k.enter,\n      enter: k.update,\n      update: k.update,\n      leave: k.leave,\n      config: A,\n      immediate: !h\n    }),\n    interpolateLink: J,\n    interpolateTextAnchor: K,\n    interpolateTextPosition: N\n  };\n},\n    U = function (t) {\n  var n = t.center,\n      e = t.data,\n      r = t.label,\n      i = t.skipAngle,\n      a = t.offset,\n      o = t.diagonalLength,\n      u = t.straightLength,\n      l = t.strokeWidth,\n      s = t.textOffset,\n      f = t.textColor,\n      c = t.linkColor,\n      g = t.component,\n      h = void 0 === g ? G : g,\n      v = d(r),\n      x = Q({\n    data: e,\n    skipAngle: i,\n    offset: a,\n    diagonalLength: o,\n    straightLength: u,\n    textOffset: s,\n    linkColor: c,\n    textColor: f\n  }),\n      R = x.transition,\n      m = x.interpolateLink,\n      y = x.interpolateTextAnchor,\n      k = x.interpolateTextPosition,\n      C = h;\n  return p(\"g\", {\n    transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n    children: R(function (t, n) {\n      return A(C, {\n        key: n.id,\n        datum: n,\n        label: v(n),\n        style: M({}, t, {\n          thickness: l,\n          path: m(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, t.offset, t.diagonalLength, t.straightLength),\n          textAnchor: y(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius),\n          textPosition: k(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, t.offset, t.diagonalLength, t.straightLength, t.textOffset)\n        })\n      });\n    })\n  });\n},\n    V = function (t, n, e, r) {\n  t.textBaseline = \"middle\", t.font = e.labels.text.fontSize + \"px \" + e.labels.text.fontFamily, n.forEach(function (n) {\n    t.fillStyle = n.textColor, t.textAlign = f.canvas.align[n.textAnchor], t.fillText(\"\" + n.label, n.x, n.y), t.beginPath(), t.strokeStyle = n.linkColor, t.lineWidth = r, n.points.forEach(function (n, e) {\n      0 === e ? t.moveTo(n.x, n.y) : t.lineTo(n.x, n.y);\n    }), t.stroke();\n  });\n},\n    X = function (t) {\n  var n = t.data,\n      e = t.skipAngle,\n      r = void 0 === e ? 0 : e,\n      i = t.offset,\n      o = void 0 === i ? .5 : i,\n      u = t.diagonalLength,\n      l = t.straightLength,\n      s = t.computeExtraProps,\n      d = void 0 === s ? function () {\n    return {};\n  } : s,\n      f = v(function () {\n    return n.filter(function (t) {\n      return Math.abs(a(t.arc.endAngle - t.arc.startAngle)) >= r;\n    }).map(function (t) {\n      return M({}, D(t.arc, o, u, l), {\n        data: t\n      });\n    });\n  }, [n, r, o, u, l]);\n  return v(function () {\n    return f.map(function (t) {\n      return M({}, d(t), t);\n    });\n  }, [f, d]);\n},\n    Y = function (t) {\n  var n = t.data,\n      e = t.skipAngle,\n      r = t.offset,\n      a = t.diagonalLength,\n      o = t.straightLength,\n      u = t.textOffset,\n      l = void 0 === u ? 0 : u,\n      s = t.label,\n      f = t.linkColor,\n      c = t.textColor,\n      g = d(s),\n      p = i(),\n      h = R(f, p),\n      v = R(c, p),\n      A = x(function (t) {\n    var n,\n        e = {\n      x: t.points[2].x,\n      y: t.points[2].y\n    };\n    return \"before\" === t.side ? (e.x -= l, n = \"end\") : (e.x += l, n = \"start\"), M({}, e, {\n      label: g(t.data),\n      linkColor: h(t.data),\n      textAnchor: n,\n      textColor: v(t.data)\n    });\n  }, [g, h, v, l]);\n  return X({\n    data: n,\n    skipAngle: e,\n    offset: r,\n    diagonalLength: a,\n    straightLength: o,\n    computeExtraProps: A\n  });\n},\n    Z = G,\n    $ = [\"animated\"],\n    _ = function (e) {\n  var r = e.animated,\n      i = function (t, n) {\n    if (null == t) return {};\n    var e,\n        r,\n        i = {},\n        a = Object.keys(t);\n\n    for (r = 0; r < a.length; r++) e = a[r], n.indexOf(e) >= 0 || (i[e] = t[e]);\n\n    return i;\n  }(e, $);\n\n  return p(t.path, M({\n    d: n([r.radius, r.startAngle, r.endAngle], function (t, n, e) {\n      return function (t, n, e) {\n        var r = Math.min(n, e),\n            i = Math.max(n, e),\n            a = o(u(i), t),\n            l = o(u(r), t);\n\n        if (i - r >= 360) {\n          var s = o(u(r + 180), t);\n          return [\"M \" + a.x + \" \" + a.y, P(t, 1, 1, s.x, s.y), \"M \" + a.x + \" \" + a.y, P(t, 1, 0, s.x, s.y)].join(\" \");\n        }\n\n        var d = i - r <= 180 ? 0 : 1;\n        return [\"M \" + a.x + \" \" + a.y, P(t, d, 0, l.x, l.y)].join(\" \");\n      }(t, n, e);\n    })\n  }, i));\n},\n    tt = function (n) {\n  var e = n.datum,\n      r = n.style,\n      i = n.onClick,\n      a = n.onMouseEnter,\n      o = n.onMouseMove,\n      u = n.onMouseLeave,\n      l = x(function (t) {\n    return null == i ? void 0 : i(e, t);\n  }, [i, e]),\n      s = x(function (t) {\n    return null == a ? void 0 : a(e, t);\n  }, [a, e]),\n      d = x(function (t) {\n    return null == o ? void 0 : o(e, t);\n  }, [o, e]),\n      f = x(function (t) {\n    return null == u ? void 0 : u(e, t);\n  }, [u, e]);\n  return p(t.path, {\n    d: r.path,\n    opacity: r.opacity,\n    fill: e.fill || r.color,\n    stroke: r.borderColor,\n    strokeWidth: r.borderWidth,\n    onClick: i ? l : void 0,\n    onMouseEnter: a ? s : void 0,\n    onMouseMove: o ? d : void 0,\n    onMouseLeave: u ? f : void 0\n  });\n},\n    nt = function (t, e, r, i, a) {\n  return n([t, e, r, i], function (t, n, e, r) {\n    return a({\n      startAngle: t,\n      endAngle: n,\n      innerRadius: Math.max(0, e),\n      outerRadius: Math.max(0, r)\n    });\n  });\n},\n    et = function (t, n, r) {\n  void 0 === n && (n = \"innerRadius\");\n  var i = s(),\n      a = i.animate,\n      o = i.config,\n      u = I(n, r);\n  return {\n    transition: e(t, {\n      keys: function (t) {\n        return t.id;\n      },\n      initial: u.update,\n      from: u.enter,\n      enter: u.update,\n      update: u.update,\n      leave: u.leave,\n      config: o,\n      immediate: !a\n    }),\n    interpolate: nt\n  };\n},\n    rt = function (t) {\n  var n = t.center,\n      e = t.data,\n      r = t.arcGenerator,\n      a = t.borderWidth,\n      o = t.borderColor,\n      u = t.onClick,\n      l = t.onMouseEnter,\n      s = t.onMouseMove,\n      d = t.onMouseLeave,\n      f = t.transitionMode,\n      c = t.component,\n      g = void 0 === c ? tt : c,\n      h = i(),\n      v = R(o, h),\n      x = et(e, f, {\n    enter: function (t) {\n      return {\n        opacity: 0,\n        color: t.color,\n        borderColor: v(t)\n      };\n    },\n    update: function (t) {\n      return {\n        opacity: 1,\n        color: t.color,\n        borderColor: v(t)\n      };\n    },\n    leave: function (t) {\n      return {\n        opacity: 0,\n        color: t.color,\n        borderColor: v(t)\n      };\n    }\n  }),\n      m = x.transition,\n      y = x.interpolate,\n      k = g;\n  return p(\"g\", {\n    transform: \"translate(\" + n[0] + \",\" + n[1] + \")\",\n    children: m(function (t, n) {\n      return A(k, {\n        key: n.id,\n        datum: n,\n        style: M({}, t, {\n          borderWidth: a,\n          path: y(t.startAngle, t.endAngle, t.innerRadius, t.outerRadius, r)\n        }),\n        onClick: u,\n        onMouseEnter: l,\n        onMouseMove: s,\n        onMouseLeave: d\n      });\n    })\n  });\n},\n    it = function (t, n, e, r, i, a) {\n  void 0 === a && (a = !0);\n  var l = [],\n      s = o(u(r), e);\n  l.push([s.x, s.y]);\n  var d = o(u(i), e);\n  l.push([d.x, d.y]);\n\n  for (var f = Math.round(Math.min(r, i)); f <= Math.round(Math.max(r, i)); f++) if (f % 90 == 0) {\n    var c = o(u(f), e);\n    l.push([c.x, c.y]);\n  }\n\n  l = l.map(function (e) {\n    var r = e[0],\n        i = e[1];\n    return [t + r, n + i];\n  }), a && l.push([t, n]);\n  var g = l.map(function (t) {\n    return t[0];\n  }),\n      p = l.map(function (t) {\n    return t[1];\n  }),\n      h = Math.min.apply(Math, g),\n      v = Math.max.apply(Math, g),\n      A = Math.min.apply(Math, p);\n  return {\n    points: l,\n    x: h,\n    y: A,\n    width: v - h,\n    height: Math.max.apply(Math, p) - A\n  };\n},\n    at = function (t, n, e, r, i, a) {\n  var o = c(i, a, t, n);\n  return o < e && o > r;\n},\n    ot = function (t, n, e, r, i, a, o) {\n  if (at(t, n, e, r, a, o)) {\n    var u = g(a, o, t, n);\n    return i.find(function (t) {\n      var n = t.startAngle,\n          e = t.endAngle;\n      return u >= n && u < e;\n    });\n  }\n},\n    ut = function (t, n) {\n  var e = s(),\n      i = e.animate,\n      a = e.config,\n      o = r({\n    startAngle: t.arc.startAngle,\n    endAngle: t.arc.endAngle,\n    innerRadius: t.arc.innerRadius,\n    outerRadius: t.arc.outerRadius,\n    config: a,\n    immediate: !i\n  });\n  return M({}, o, {\n    path: nt(o.startAngle, o.endAngle, o.innerRadius, o.outerRadius, n)\n  });\n},\n    lt = function (t) {\n  var n = void 0 === t ? {} : t,\n      e = n.cornerRadius,\n      r = void 0 === e ? 0 : e,\n      i = n.padAngle,\n      a = void 0 === i ? 0 : i;\n  return v(function () {\n    return y().innerRadius(function (t) {\n      return t.innerRadius;\n    }).outerRadius(function (t) {\n      return t.outerRadius;\n    }).cornerRadius(r).padAngle(a);\n  }, [r, a]);\n};\n\nexport { F as ArcLabelComponent, B as ArcLabelsLayer, _ as ArcLine, Z as ArcLinkLabelComponent, U as ArcLinkLabelsLayer, tt as ArcShape, rt as ArcsLayer, E as arcTransitionModeById, O as arcTransitionModes, it as computeArcBoundingBox, T as computeArcCenter, D as computeArcLink, q as computeArcLinkTextAnchor, w as drawCanvasArcLabels, V as drawCanvasArcLinkLabels, ot as findArcUnderCursor, nt as interpolateArc, j as interpolateArcCenter, at as isCursorInRing, ut as useAnimatedArc, S as useArcCenters, W as useArcCentersTransition, lt as useArcGenerator, z as useArcLabels, Y as useArcLinkLabels, Q as useArcLinkLabelsTransition, X as useArcLinks, I as useArcTransitionMode, et as useArcsTransition };","map":{"version":3,"sources":["../src/arc_labels/ArcLabel.tsx","../src/utils.ts","../src/arcTransitionMode.ts","../src/centers.ts","../src/arc_labels/ArcLabelsLayer.tsx","../src/arc_labels/canvas.ts","../src/arc_labels/useArcLabels.ts","../src/arc_labels/index.ts","../src/arc_link_labels/ArcLinkLabel.tsx","../src/arc_link_labels/compute.ts","../src/arc_link_labels/useArcLinkLabelsTransition.ts","../src/arc_link_labels/ArcLinkLabelsLayer.tsx","../src/arc_link_labels/canvas.ts","../src/arc_link_labels/useArcLinks.ts","../src/arc_link_labels/useArcLinkLabels.ts","../src/arc_link_labels/index.ts","../src/ArcLine.tsx","../src/ArcShape.tsx","../src/interpolateArc.ts","../src/useArcsTransition.ts","../src/ArcsLayer.tsx","../src/boundingBox.ts","../src/interactivity.ts","../src/useAnimatedArc.ts","../src/useArcGenerator.ts"],"names":["staticStyle","pointerEvents","ArcLabel","label","style","theme","useTheme","_jsx","animated","g","transform","opacity","progress","text","textAnchor","dominantBaseline","labels","fill","textColor","getNormalizedAngle","angle","normalizedAngle","Math","PI","filterDataBySkipAngle","data","skipAngle","filter","abs","radiansToDegrees","datum","arc","endAngle","startAngle","useMemo","svgEllipticalArcCommand","radius","largeArcFlag","sweepFlag","x","y","join","originalStartAngle","originalEndAngle","min","max","start","positionFromAngle","degreesToRadians","end","mid","arcTransitionModes","arcTransitionModeById","enter","update","leave","middleAngle","innerRadius","outerRadius","centerRadius","pushIn","pushOut","useArcTransitionMode","mode","extraTransition","transitionMode","computeArcCenter","offset","midAngle","interpolateArcCenter","startAngleValue","endAngleValue","innerRadiusValue","outerRadiusValue","to","centroid","useArcCentersTransition","extra","animate","config","springConfig","useMotionConfig","phases","useTransition","keys","id","initial","from","immediate","transition","interpolate","useArcCenters","computeExtraProps","map","position","ArcLabelsLayer","center","labelAccessor","radiusOffset","component","getLabel","usePropertyAccessor","getTextColor","useInheritedColor","filteredData","Label","transitionProps","createElement","key","drawCanvasArcLabels","ctx","textAlign","textBaseline","font","fontSize","fontFamily","forEach","fillStyle","fillText","useArcLabels","useCallback","ArcLabelComponent","ArcLinkLabel","_jsxs","path","stroke","linkColor","strokeWidth","thickness","d","textPosition","computeArcLinkTextAnchor","centerAngle","computeArcLink","diagonalLength","straightLength","point0","point1","side","point2","points","lineGenerator","line","textOffset","getLinkColor","interpolateLink","offsetValue","diagonalLengthValue","straightLengthValue","diagonalLengthAnimated","straightLengthAnimated","interpolateTextAnchor","interpolateTextPosition","textOffsetValue","useArcLinkLabelsTransition","useFilteredDataBySkipAngle","transitionPhases","useTransitionPhases","ArcLinkLabelsLayer","drawCanvasArcLinkLabels","textPropsByEngine","canvas","align","beginPath","strokeStyle","lineWidth","point","index","moveTo","lineTo","useArcLinks","links","link","useArcLinkLabels","ArcLinkLabelComponent","ArcLine","animatedProps","rest","generateSvgArc","ArcShape","onClick","onMouseEnter","onMouseMove","onMouseLeave","handleClick","event","handleMouseEnter","handleMouseMove","handleMouseLeave","color","borderColor","borderWidth","undefined","interpolateArc","arcGenerator","useArcsTransition","ArcsLayer","getBorderColor","Arc","computeArcBoundingBox","centerX","centerY","includeCenter","p0","push","p1","round","p","xs","ys","x0","x1","y0","width","height","isCursorInRing","cursorX","cursorY","distance","getDistance","findArcUnderCursor","arcs","cursorAngle","getAngle","find","useAnimatedArc","datumWithArc","animatedValues","useSpring","useArcGenerator","cornerRadius","padAngle","d3Arc"],"mappings":";;;;;;;;;;;;;;;;;AAKA;;AAAA,IAAMA,CAAAA,GAA6B;AAC/BC,EAAAA,aAAAA,EAAe;AADgB,CAAnC;AAAA,IAcaC,CAAAA,GAAW,UAAA,CAAA,EAAA;AAAA,MACpBC,CAAAA,GAAAA,CAAAA,CAAAA,KADoB;AAAA,MAEpBC,CAAAA,GAAAA,CAAAA,CAAAA,KAFoB;AAAA,MAIdC,CAAAA,GAAQC,CAAAA,EAJM;AAINA,SAGVC,CAAAA,CAACC,CAAAA,CAASC,CAAVF,EAAUE;AAAEC,IAAAA,SAAAA,EAAWN,CAAAA,CAAMM,SAAnBD;AAA8BE,IAAAA,OAAAA,EAASP,CAAAA,CAAMQ,QAA7CH;AAAuDL,IAAAA,KAAAA,EAAOJ,CAA9DS;AAA8DT,IAAAA,QAAAA,EACpEO,CAAAA,CAACC,CAAAA,CAASK,IAAVN,EAAUM;AACNC,MAAAA,UAAAA,EAAW,QADLD;AAENE,MAAAA,gBAAAA,EAAiB,SAFXF;AAGNT,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EACOC,CAAAA,CAAMW,MAANX,CAAaQ,IADpBT,EACoBS;AAChBI,QAAAA,IAAAA,EAAMb,CAAAA,CAAMc;AADIL,OADpBT,CAHMS;AAKUK,MAAAA,QAAAA,EAGff;AARKU,KAAVN;AADME,GAAVF,CAHUD;AAYDH,CA9BjB;AAAA,ICGagB,CAAAA,GAAqB,UAACC,CAAD,EAACA;AAAAA,MAC3BC,CAAAA,GAAkBD,CAAAA,IAAmB,IAAVE,IAAAA,CAAKC,EAAdH,CADSA;AACKG,SAChCF,CAAAA,GAAkB,CAAlBA,KACAA,CAAAA,IAA6B,IAAVC,IAAAA,CAAKC,EADxBF,GAIGA,CAL6BE;AAK7BF,CDTX;AAAA,ICeaG,CAAAA,GAAwB,UACjCC,CADiC,EAEjCC,CAFiC,EAEjCA;AAAAA,SAEAD,CAAAA,CAAKE,MAALF,CACI,UAAA,CAAA,EAAA;AAAA,WAASH,IAAAA,CAAKM,GAALN,CAASO,CAAAA,CAAiBC,CAAAA,CAAMC,GAAND,CAAUE,QAAVF,GAAqBA,CAAAA,CAAMC,GAAND,CAAUG,UAAhDJ,CAATP,KAAyEI,CAAlF;AAAkFA,GADtFD,CAFAC;AAGsFA,CDpB1F;AAAA,IC+BaS,CAAAA,GAA0B,UACnCC,CADmC,EAEnCC,CAFmC,EAGnCC,CAHmC,EAInCC,CAJmC,EAKnCC,CALmC,EAKnCA;AAAAA,SAEA,CACI,GADJ,EAEIJ,CAFJ,EAGIA,CAHJ,EAII,CAJJ,EAKIC,CALJ,EAMIC,CANJ,EAOIC,CAPJ,EAQIC,CARJ,EASEC,IATF,CASO,GATP,CAFAD;AAWO,CD/CX;AAAA,IEIaW,CAAAA,GAAqB,CAC9B,YAD8B,EAE9B,aAF8B,EAG9B,UAH8B,EAI9B,aAJ8B,EAK9B,cAL8B,EAM9B,aAN8B,EAO9B,QAP8B,EAQ9B,SAR8B,CFJlC;AAAA,IEgBaC,CAAAA,GAA4E;AACrFnB,EAAAA,UAAAA,EAAY;AACRoB,IAAAA,KAAAA,EAAO,UAACtB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACHC,QAAAA,QAAAA,EAAUD,CAAAA,CAAIE;AADXF,OADCA,CAAAA;AAEUE,KAHV;AAKRqB,IAAAA,MAAAA,EAAQ,UAACvB,CAAD,EAACA;AAAAA,aAAaA,CAAbA;AAAaA,KALd;AAMRwB,IAAAA,KAAAA,EAAO,UAACxB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACHE,QAAAA,UAAAA,EAAYF,CAAAA,CAAIC;AADbD,OADCA,CAAAA;AAEYC;AARZ,GADyE;AAYrFwB,EAAAA,WAAAA,EAAa;AACTH,IAAAA,KAAAA,EAAO,UAACtB,CAAD,EAACA;AAAAA,UACEyB,CAAAA,GAAczB,CAAAA,CAAIE,UAAJF,GAAIE,CAAcF,CAAAA,CAAIC,QAAJD,GAAeA,CAAAA,CAAIE,UAAjCA,IAA+C,CADnEF;AACmE,aAAA,CAAA,CAAA,EAAA,EAGhEA,CAHgE,EAGhEA;AACHE,QAAAA,UAAAA,EAAYuB,CADTzB;AAEHC,QAAAA,QAAAA,EAAUwB;AAFPzB,OAHgE,CAAA;AAKzDyB,KAPT;AAUTF,IAAAA,MAAAA,EAAQ,UAACvB,CAAD,EAACA;AAAAA,aAAaA,CAAbA;AAAaA,KAVb;AAWTwB,IAAAA,KAAAA,EAAO,UAACxB,CAAD,EAACA;AAAAA,UACEyB,CAAAA,GAAczB,CAAAA,CAAIE,UAAJF,GAAIE,CAAcF,CAAAA,CAAIC,QAAJD,GAAeA,CAAAA,CAAIE,UAAjCA,IAA+C,CADnEF;AACmE,aAAA,CAAA,CAAA,EAAA,EAGhEA,CAHgE,EAGhEA;AACHE,QAAAA,UAAAA,EAAYuB,CADTzB;AAEHC,QAAAA,QAAAA,EAAUwB;AAFPzB,OAHgE,CAAA;AAKzDyB;AAjBT,GAZwE;AAiCrFxB,EAAAA,QAAAA,EAAU;AACNqB,IAAAA,KAAAA,EAAO,UAACtB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACHE,QAAAA,UAAAA,EAAYF,CAAAA,CAAIC;AADbD,OADCA,CAAAA;AAEYC,KAHd;AAKNsB,IAAAA,MAAAA,EAAQ,UAACvB,CAAD,EAACA;AAAAA,aAAaA,CAAbA;AAAaA,KALhB;AAMNwB,IAAAA,KAAAA,EAAO,UAACxB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACHC,QAAAA,QAAAA,EAAUD,CAAAA,CAAIE;AADXF,OADCA,CAAAA;AAEUE;AARZ,GAjC2E;AA4CrFwB,EAAAA,WAAAA,EAAa;AACTJ,IAAAA,KAAAA,EAAO,UAACtB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACH2B,QAAAA,WAAAA,EAAa3B,CAAAA,CAAI0B;AADd1B,OADCA,CAAAA;AAEa0B,KAHZ;AAKTH,IAAAA,MAAAA,EAAQ,UAACvB,CAAD,EAACA;AAAAA,aAAaA,CAAbA;AAAaA,KALb;AAMTwB,IAAAA,KAAAA,EAAO,UAACxB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACH0B,QAAAA,WAAAA,EAAa1B,CAAAA,CAAI2B;AADd3B,OADCA,CAAAA;AAEa2B;AARZ,GA5CwE;AAuDrFC,EAAAA,YAAAA,EAAc;AACVN,IAAAA,KAAAA,EAAO,UAACtB,CAAD,EAACA;AAAAA,UACE4B,CAAAA,GAAe5B,CAAAA,CAAI0B,WAAJ1B,GAAI0B,CAAe1B,CAAAA,CAAI2B,WAAJ3B,GAAkBA,CAAAA,CAAI0B,WAArCA,IAAoD,CADzE1B;AACyE,aAAA,CAAA,CAAA,EAAA,EAGtEA,CAHsE,EAGtEA;AACH0B,QAAAA,WAAAA,EAAaE,CADV5B;AAEH2B,QAAAA,WAAAA,EAAaC;AAFV5B,OAHsE,CAAA;AAK5D4B,KAPX;AAUVL,IAAAA,MAAAA,EAAQ,UAACvB,CAAD,EAACA;AAAAA,aAAaA,CAAbA;AAAaA,KAVZ;AAWVwB,IAAAA,KAAAA,EAAO,UAACxB,CAAD,EAACA;AAAAA,UACE4B,CAAAA,GAAe5B,CAAAA,CAAI0B,WAAJ1B,GAAI0B,CAAe1B,CAAAA,CAAI2B,WAAJ3B,GAAkBA,CAAAA,CAAI0B,WAArCA,IAAoD,CADzE1B;AACyE,aAAA,CAAA,CAAA,EAAA,EAGtEA,CAHsE,EAGtEA;AACH0B,QAAAA,WAAAA,EAAaE,CADV5B;AAEH2B,QAAAA,WAAAA,EAAaC;AAFV5B,OAHsE,CAAA;AAK5D4B;AAjBX,GAvDuE;AA4ErFD,EAAAA,WAAAA,EAAa;AACTL,IAAAA,KAAAA,EAAO,UAACtB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACH0B,QAAAA,WAAAA,EAAa1B,CAAAA,CAAI2B;AADd3B,OADCA,CAAAA;AAEa2B,KAHZ;AAKTJ,IAAAA,MAAAA,EAAQ,UAACvB,CAAD,EAACA;AAAAA,aAAaA,CAAbA;AAAaA,KALb;AAMTwB,IAAAA,KAAAA,EAAO,UAACxB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACH2B,QAAAA,WAAAA,EAAa3B,CAAAA,CAAI0B;AADd1B,OADCA,CAAAA;AAEa0B;AARZ,GA5EwE;AAuFrFG,EAAAA,MAAAA,EAAQ;AACJP,IAAAA,KAAAA,EAAO,UAACtB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACH0B,QAAAA,WAAAA,EAAa1B,CAAAA,CAAI0B,WAAJ1B,GAAkBA,CAAAA,CAAI2B,WAAtB3B,GAAoCA,CAAAA,CAAI0B,WADlD1B;AAEH2B,QAAAA,WAAAA,EAAa3B,CAAAA,CAAI0B;AAFd1B,OADCA,CAAAA;AAGa0B,KAJjB;AAMJH,IAAAA,MAAAA,EAAQ,UAACvB,CAAD,EAACA;AAAAA,aAAaA,CAAbA;AAAaA,KANlB;AAOJwB,IAAAA,KAAAA,EAAO,UAACxB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACH0B,QAAAA,WAAAA,EAAa1B,CAAAA,CAAI2B,WADd3B;AAEH2B,QAAAA,WAAAA,EAAa3B,CAAAA,CAAI2B,WAAJ3B,GAAkBA,CAAAA,CAAI2B,WAAtB3B,GAAoCA,CAAAA,CAAI0B;AAFlD1B,OADCA,CAAAA;AAGiD0B;AAVrD,GAvF6E;AAoGrFI,EAAAA,OAAAA,EAAS;AACLR,IAAAA,KAAAA,EAAO,UAACtB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACH0B,QAAAA,WAAAA,EAAa1B,CAAAA,CAAI2B,WADd3B;AAEH2B,QAAAA,WAAAA,EAAa3B,CAAAA,CAAI2B,WAAJ3B,GAAkBA,CAAAA,CAAI2B,WAAtB3B,GAAoCA,CAAAA,CAAI0B;AAFlD1B,OADCA,CAAAA;AAGiD0B,KAJpD;AAMLH,IAAAA,MAAAA,EAAQ,UAACvB,CAAD,EAACA;AAAAA,aAAaA,CAAbA;AAAaA,KANjB;AAOLwB,IAAAA,KAAAA,EAAO,UAACxB,CAAD,EAACA;AAAAA,aAAAA,CAAAA,CAAAA,EAAAA,EACDA,CADCA,EACDA;AACH0B,QAAAA,WAAAA,EAAa1B,CAAAA,CAAI0B,WAAJ1B,GAAkBA,CAAAA,CAAI2B,WAAtB3B,GAAoCA,CAAAA,CAAI0B,WADlD1B;AAEH2B,QAAAA,WAAAA,EAAa3B,CAAAA,CAAI0B;AAFd1B,OADCA,CAAAA;AAGa0B;AAVhB;AApG4E,CFhBzF;AAAA,IEyIaK,CAAAA,GAAuB,UAChCC,CADgC,EAEhCC,CAFgC,EAEhCA;AAAAA,SAEA9B,CAAAA,CAAQ,YAAA;AAAA,QACE+B,CAAAA,GAAiBb,CAAAA,CAAsBW,CAAtBX,CADnB;AACyCW,WAEtC;AACHV,MAAAA,KAAAA,EAAO,UAACvB,CAAD,EAACA;AAAAA,eAAAA,CAAAA,CAAAA;AACJlB,UAAAA,QAAAA,EAAU;AADNkB,SAAAA,EAEDmC,CAAAA,CAAeZ,KAAfY,CAAqBnC,CAAAA,CAAMC,GAA3BkC,CAFCnC,EAGAkC,CAAAA,GAAkBA,CAAAA,CAAgBX,KAAhBW,CAAsBlC,CAAtBkC,CAAlBA,GAAiD,EAHjDlC,CAAAA;AAGiD,OAJtD;AAMHwB,MAAAA,MAAAA,EAAQ,UAACxB,CAAD,EAACA;AAAAA,eAAAA,CAAAA,CAAAA;AACLlB,UAAAA,QAAAA,EAAU;AADLkB,SAAAA,EAEFmC,CAAAA,CAAeX,MAAfW,CAAsBnC,CAAAA,CAAMC,GAA5BkC,CAFEnC,EAGDkC,CAAAA,GAAkBA,CAAAA,CAAgBV,MAAhBU,CAAuBlC,CAAvBkC,CAAlBA,GAAkD,EAHjDlC,CAAAA;AAGiD,OATvD;AAWHyB,MAAAA,KAAAA,EAAO,UAACzB,CAAD,EAACA;AAAAA,eAAAA,CAAAA,CAAAA;AACJlB,UAAAA,QAAAA,EAAU;AADNkB,SAAAA,EAEDmC,CAAAA,CAAeV,KAAfU,CAAqBnC,CAAAA,CAAMC,GAA3BkC,CAFCnC,EAGAkC,CAAAA,GAAkBA,CAAAA,CAAgBT,KAAhBS,CAAsBlC,CAAtBkC,CAAlBA,GAAiD,EAHjDlC,CAAAA;AAGiD;AAdtD,KAFsCiC;AAgBgB,GAjBjE7B,EAoBG,CAAC6B,CAAD,EAAOC,CAAP,CApBH9B,CAFA8B;AAsBUA,CFjKd;AAAA,IGOaE,CAAAA,GAAmB,UAACnC,CAAD,EAAWoC,CAAX,EAAWA;AAAAA,MACjC/C,CAAAA,GAAQgD,CAAAA,CAASrC,CAATqC,CAAAA,GAAgB9C,IAAAA,CAAKC,EAALD,GAAU,CADD6C;AAAAA,MAEjC/B,CAAAA,GAASL,CAAAA,CAAI0B,WAAJ1B,GAAI0B,CAAe1B,CAAAA,CAAI2B,WAAJ3B,GAAkBA,CAAAA,CAAI0B,WAArCA,IAAoDU,CAFhCA;AAEgCA,SAEhEpB,CAAAA,CAAkB3B,CAAlB2B,EAAyBX,CAAzBW,CAFgEoB;AAEvC/B,CHXpC;AAAA,IGcaiC,CAAAA,GACT,UAACF,CAAD,EAACA;AAAAA,SACD,UACIG,CADJ,EAEIC,CAFJ,EAGIC,CAHJ,EAIIC,CAJJ,EAIIA;AAAAA,WAEAC,CAAAA,CACI,CAACJ,CAAD,EAAkBC,CAAlB,EAAiCC,CAAjC,EAAmDC,CAAnD,CADJC,EAEI,UAACzC,CAAD,EAAaD,CAAb,EAAuByB,CAAvB,EAAoCC,CAApC,EAAoCA;AAAAA,UAC1BiB,CAAAA,GAAWT,CAAAA,CACb;AAAEjC,QAAAA,UAAAA,EAAAA,CAAF;AAAcD,QAAAA,QAAAA,EAAAA,CAAd;AAAwByB,QAAAA,WAAAA,EAAAA,CAAxB;AAAqCC,QAAAA,WAAAA,EAAAA;AAArC,OADaQ,EAEbC,CAFaD,CADeR;AAG5BS,aAAAA,eAGgBQ,CAAAA,CAASpC,CAHzB4B,GAGyB5B,GAHzB4B,GAG8BQ,CAAAA,CAASnC,CAHvC2B,GAGuC3B,GAHvC2B;AAGuC3B,KARnDkC,CAFAD;AAUmDjC,GAftD2B;AAesD3B,CH9B3D;AAAA,IGkCaoC,CAAAA,GAA0B,UACnCnD,CADmC,EAMnC0C,CANmC,EAOnCJ,CAPmC,EAQnCc,CARmC,EAQnCA;AAAAA,OAAAA,CAAAA,KAFAV,CAEAU,KAFAV,CAAAA,GAAS,EAETU,GAFS,KAAA,CAAA,KACTd,CADS,KACTA,CAAAA,GAA0B,aADjB,CAETc;AAD0B,MAAA,CAAA,GAGgBI,CAAAA,EAHhB;AAAA,MAGlBH,CAAAA,GAAAA,CAAAA,CAAAA,OAHkB;AAAA,MAGDE,CAAAA,GAAAA,CAAAA,CAARD,MAHS;AAAA,MAKpBG,CAAAA,GAASpB,CAAAA,CAAwCC,CAAxCD,EAA8Ce,CAA9Cf,CALW;AAKmCe,SAsBtD;AACHY,IAAAA,UAAAA,EArBeN,CAAAA,CASjB1D,CATiB0D,EASX;AACJC,MAAAA,IAAAA,EAAM,UAAA,CAAA,EAAA;AAAA,eAAStD,CAAAA,CAAMuD,EAAf;AAAeA,OADjB;AAEJC,MAAAA,OAAAA,EAASJ,CAAAA,CAAO5B,MAFZ;AAGJiC,MAAAA,IAAAA,EAAML,CAAAA,CAAO7B,KAHT;AAIJA,MAAAA,KAAAA,EAAO6B,CAAAA,CAAO5B,MAJV;AAKJA,MAAAA,MAAAA,EAAQ4B,CAAAA,CAAO5B,MALX;AAMJC,MAAAA,KAAAA,EAAO2B,CAAAA,CAAO3B,KANV;AAOJwB,MAAAA,MAAAA,EAAQC,CAPJ;AAQJQ,MAAAA,SAAAA,EAAAA,CAAYV;AARR,KATWK,CAoBZ;AAEHO,IAAAA,WAAAA,EAAarB,CAAAA,CAAqBF,CAArBE;AAFV,GAtBsDQ;AAwBvBV,CHtE1C;AAAA,IGsFawB,CAAAA,GAAgB,UAAA,CAAA,EAAA;AAAA,MAIzBlE,CAAAA,GAAAA,CAAAA,CAAAA,IAJyB;AAAA,MAIzBA,CAAAA,GAAAA,CAAAA,CACA0C,MALyB;AAAA,MAKzBA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAS,EAATA,GAAS,CALgB;AAAA,MAKhB,CAAA,GAAA,CAAA,CACTzC,SANyB;AAAA,MAMzBA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAY,CAAZA,GAAY,CANa;AAAA,MAMb,CAAA,GAAA,CAAA,CACZkE,iBAPyB;AAAA,MAOzBA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAoB,YAAA;AAAA,WAAO,EAAP;AAAO,GAA3BA,GAA2B,CAPF;AAOE,SAgB3B1D,CAAAA,CACI,YAAA;AAAA,WACIV,CAAAA,CAA6BC,CAA7BD,EAAmCE,CAAnCF,CAAAA,CAEKqE,GAFLrE,CAES,UAAA,CAAA,EAAA;AAAA,UACKsE,CAAAA,GAAW5B,CAAAA,CAAiBpC,CAAAA,CAAMC,GAAvBmC,EAA4BC,CAA5BD,CADhB;AAC4CC,aAAAA,CAAAA,CAAAA,EAAAA,EAGtCyB,CAAAA,CAAkB9D,CAAlB8D,CAHsCzB,EAGpBrC;AACrBS,QAAAA,CAAAA,EAAGuD,CAAAA,CAASvD,CADST;AAErBU,QAAAA,CAAAA,EAAGsD,CAAAA,CAAStD,CAFSV;AAGrBL,QAAAA,IAAAA,EAAMK;AAHeA,OAHoBqC,CAAAA;AAMnCrC,KATlBN,CADJ;AAUsBM,GAX1BI,EAcI,CAACT,CAAD,EAAO0C,CAAP,EAAezC,CAAf,EAA0BkE,CAA1B,CAdJ1D,CAhB2B;AA8BG0D,CH3HlC;AAAA,IImBaG,CAAAA,GAAiB,UAAA,CAAA,EAAA;AAAA,MAC1BC,CAAAA,GAAAA,CAAAA,CAAAA,MAD0B;AAAA,MAE1BvE,CAAAA,GAAAA,CAAAA,CAAAA,IAF0B;AAAA,MAG1BwC,CAAAA,GAAAA,CAAAA,CAAAA,cAH0B;AAAA,MAInBgC,CAAAA,GAAAA,CAAAA,CAAP9F,KAJ0B;AAAA,MAK1B+F,CAAAA,GAAAA,CAAAA,CAAAA,YAL0B;AAAA,MAM1BxE,CAAAA,GAAAA,CAAAA,CAAAA,SAN0B;AAAA,MAO1BR,CAAAA,GAAAA,CAAAA,CAAAA,SAP0B;AAAA,MAO1BA,CAAAA,GAAAA,CAAAA,CACAiF,SAR0B;AAAA,MAQ1BA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAYjG,CAAZiG,GAAYjG,CARc;AAAA,MAUpBkG,CAAAA,GAAWC,CAAAA,CAAmCJ,CAAnCI,CAVS;AAAA,MAWpBhG,CAAAA,GAAQC,CAAAA,EAXY;AAAA,MAYpBgG,CAAAA,GAAeC,CAAAA,CAAyBrF,CAAzBqF,EAAoClG,CAApCkG,CAZK;AAAA,MAcpBC,CAAAA,GAAetE,CAAAA,CACjB,YAAA;AAAA,WACIT,CAAAA,CAAKE,MAALF,CAAY,UAAA,CAAA,EAAA;AAAA,aAEJH,IAAAA,CAAKM,GAALN,CAASO,CAAAA,CAAiBC,CAAAA,CAAMC,GAAND,CAAUE,QAAVF,GAAqBA,CAAAA,CAAMC,GAAND,CAAUG,UAAhDJ,CAATP,KACAI,CAHI;AAGJA,KAHRD,CADJ;AAIYC,GALKQ,EAQjB,CAACT,CAAD,EAAOC,CAAP,CARiBQ,CAdK;AAAA,MAsBfR,CAAAA,GAGyBkD,CAAAA,CAChC4B,CADgC5B,EAEhCsB,CAFgCtB,EAGhCX,CAHgCW,CAzBV;AAAA,MAyBlBa,CAAAA,GAAAA,CAAAA,CAAAA,UAzBkB;AAAA,MAyBNC,CAAAA,GAAAA,CAAAA,CAAAA,WAzBM;AAAA,MA+BpBe,CAAAA,GAAkCN,CA/Bd;AA+BcA,SAGpC5F,CAAAA,CAAAA,GAAAA,EAAAA;AAAGG,IAAAA,SAAAA,EAAAA,eAAwBsF,CAAAA,CAAO,CAAPA,CAAxBtF,GAA+B,GAA/BA,GAAqCsF,CAAAA,CAAO,CAAPA,CAArCtF,GAA4C,GAA/CH;AAA+C,IAAA,QAAA,EAC1CkF,CAAAA,CAAW,UAACiB,CAAD,EAAkB5E,CAAlB,EAAkBA;AAAAA,aACnB6E,CAAAA,CAAcF,CAAdE,EAAqB;AACxBC,QAAAA,GAAAA,EAAK9E,CAAAA,CAAMuD,EADa;AAExBvD,QAAAA,KAAAA,EAAAA,CAFwB;AAGxB3B,QAAAA,KAAAA,EAAOiG,CAAAA,CAAStE,CAATsE,CAHiB;AAIxBhG,QAAAA,KAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EACOsG,CADPtG,EACOsG;AACHhG,UAAAA,SAAAA,EAAWgF,CAAAA,CACPgB,CAAAA,CAAgBzE,UADTyD,EAEPgB,CAAAA,CAAgB1E,QAFT0D,EAGPgB,CAAAA,CAAgBjD,WAHTiC,EAIPgB,CAAAA,CAAgBhD,WAJTgC,CADRgB;AAOHxF,UAAAA,SAAAA,EAAWoF,CAAAA,CAAaxE,CAAbwE;AAPRI,SADPtG;AAJwB,OAArBuG,CADmB7E;AAaMA,KAbnC2D;AADLlF,GAAAA,CAHoC4F;AAiBIrE,CJnEhD;AAAA,IKDa+E,CAAAA,GAAsB,UAC/BC,CAD+B,EAE/B9F,CAF+B,EAG/BX,CAH+B,EAG/BA;AAEAyG,EAAAA,CAAAA,CAAIC,SAAJD,GAAgB,QAAhBA,EACAA,CAAAA,CAAIE,YAAJF,GAAmB,QADnBA,EAEAA,CAAAA,CAAIG,IAAJH,GAAczG,CAAAA,CAAMW,MAANX,CAAaQ,IAAbR,CAAkB6G,QAAlB7G,GAAkB6G,KAAlB7G,GAAgCA,CAAAA,CAAMW,MAANX,CAAaQ,IAAbR,CAAkB8G,UAFhEL,EAIA9F,CAAAA,CAAOoG,OAAPpG,CAAe,UAAA,CAAA,EAAA;AACX8F,IAAAA,CAAAA,CAAIO,SAAJP,GAAgB3G,CAAAA,CAAMe,SAAtB4F,EACAA,CAAAA,CAAIQ,QAAJR,CAAIQ,KAAYnH,CAAAA,CAAMA,KAAtB2G,EAA+B3G,CAAAA,CAAMoC,CAArCuE,EAAwC3G,CAAAA,CAAMqC,CAA9CsE,CADAA;AAC8CtE,GAFlDxB,CAJA8F;AAMkDtE,CLVtD;AAAA,IMaa+E,CAAAA,GAAe,UAAA,CAAA,EAAA;AAAA,MACxB9F,CAAAA,GAAAA,CAAAA,CAAAA,IADwB;AAAA,MAExB0C,CAAAA,GAAAA,CAAAA,CAAAA,MAFwB;AAAA,MAGxBzC,CAAAA,GAAAA,CAAAA,CAAAA,SAHwB;AAAA,MAIxBvB,CAAAA,GAAAA,CAAAA,CAAAA,KAJwB;AAAA,MAKxBe,CAAAA,GAAAA,CAAAA,CAAAA,SALwB;AAAA,MAalBkF,CAAAA,GAAWC,CAAAA,CAAmClG,CAAnCkG,CAbO;AAAA,MAelBhG,CAAAA,GAAQC,CAAAA,EAfU;AAAA,MAgBlBgG,CAAAA,GAAeC,CAAAA,CAAyBrF,CAAzBqF,EAAoClG,CAApCkG,CAhBG;AAAA,MAkBlBX,CAAAA,GAAoB4B,CAAAA,CACtB,UAAC1F,CAAD,EAACA;AAAAA,WACU;AACH3B,MAAAA,KAAAA,EAAOiG,CAAAA,CAAStE,CAATsE,CADJ;AAEHlF,MAAAA,SAAAA,EAAWoF,CAAAA,CAAaxE,CAAbwE;AAFR,KADVxE;AAG+BA,GAJV0F,EAOtB,CAACpB,CAAD,EAAWE,CAAX,CAPsBkB,CAlBF;AAyBTlB,SAGRX,CAAAA,CAAoE;AACvElE,IAAAA,IAAAA,EAAAA,CADuE;AAEvE0C,IAAAA,MAAAA,EAAAA,CAFuE;AAGvEzC,IAAAA,SAAAA,EAAAA,CAHuE;AAIvEkE,IAAAA,iBAAAA,EAAAA;AAJuE,GAApED,CAHQW;AAOXV,CN7CR;AAAA,IOHa6B,CAAAA,GAAoBvH,CPGjC;AAAA,IQaawH,CAAAA,GAAe,UAAA,CAAA,EAAA;AAAA,MACxBvH,CAAAA,GAAAA,CAAAA,CAAAA,KADwB;AAAA,MAExBC,CAAAA,GAAAA,CAAAA,CAAAA,KAFwB;AAAA,MAIlBC,CAAAA,GAAQC,CAAAA,EAJU;AAIVA,SAGVqH,CAAAA,CAACnH,CAAAA,CAASC,CAAVkH,EAAUlH;AAAEE,IAAAA,OAAAA,EAASP,CAAAA,CAAMO,OAAjBF;AAAiBE,IAAAA,QAAAA,EAAAA,CACvBJ,CAAAA,CAACC,CAAAA,CAASoH,IAAVrH,EAAUqH;AACN3G,MAAAA,IAAAA,EAAK,MADC2G;AAENC,MAAAA,MAAAA,EAAQzH,CAAAA,CAAM0H,SAFRF;AAGNG,MAAAA,WAAAA,EAAa3H,CAAAA,CAAM4H,SAHbJ;AAINK,MAAAA,CAAAA,EAAG7H,CAAAA,CAAMwH;AAJHA,KAAVrH,CADuBI,EAOvBJ,CAAAA,CAACC,CAAAA,CAASK,IAAVN,EAAUM;AACNH,MAAAA,SAAAA,EAAWN,CAAAA,CAAM8H,YADXrH;AAENC,MAAAA,UAAAA,EAAYV,CAAAA,CAAMU,UAFZD;AAGNE,MAAAA,gBAAAA,EAAiB,SAHXF;AAINT,MAAAA,KAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EACOC,CAAAA,CAAMW,MAANX,CAAaQ,IADpBT,EACoBS;AAChBI,QAAAA,IAAAA,EAAMb,CAAAA,CAAMc;AADIL,OADpBT,CAJMS;AAMUK,MAAAA,QAAAA,EAGff;AATKU,KAAVN,CAPuBI;AAAjBF,GAAVkH,CAHUrH;AAmBDH,CRpCjB;AAAA,ISQagI,CAAAA,GAA2B,UAACpG,CAAD,EAACA;AAAAA,MAC/BqG,CAAAA,GAAcjH,CAAAA,CAChBY,CAAAA,CAAIE,UAAJF,GAAIE,CAAcF,CAAAA,CAAIC,QAAJD,GAAeA,CAAAA,CAAIE,UAAjCA,IAA+C,CAAnDF,GAAuDT,IAAAA,CAAKC,EAALD,GAAU,CADjDH,CADiBY;AAEgC,SAGjEqG,CAAAA,GAAc9G,IAAAA,CAAKC,EAALD,GAAU,CAAxB8G,IAA6BA,CAAAA,GAAwB,MAAV9G,IAAAA,CAAKC,EAAhD6G,GACO,OADPA,GAIG,KAP8D;AAO9D,CTjBX;AAAA,ISyBaC,CAAAA,GAAiB,UAC1BtG,CAD0B,EAE1BoC,CAF0B,EAG1BmE,CAH0B,EAI1BC,CAJ0B,EAI1BA;AAAAA,MAQIG,CARJH;AAAAA,MASII,CATJJ;AAAAA,MAEMH,CAAAA,GAAcjH,CAAAA,CAChBY,CAAAA,CAAIE,UAAJF,GAAIE,CAAcF,CAAAA,CAAIC,QAAJD,GAAeA,CAAAA,CAAIE,UAAjCA,IAA+C,CAAnDF,GAAuDT,IAAAA,CAAKC,EAALD,GAAU,CADjDH,CAFpBoH;AAAAA,MAKMC,CAAAA,GAAgBzF,CAAAA,CAAkBqF,CAAlBrF,EAA+BhB,CAAAA,CAAI2B,WAAJ3B,GAAkBoC,CAAjDpB,CALtBwF;AAAAA,MAMME,CAAAA,GAAgB1F,CAAAA,CAAkBqF,CAAlBrF,EAA+BhB,CAAAA,CAAI2B,WAAJ3B,GAAkBoC,CAAlBpC,GAA2BuG,CAA1DvF,CANtBwF;AAMgFD,SAI5EF,CAAAA,GAAc9G,IAAAA,CAAKC,EAALD,GAAU,CAAxB8G,IAA6BA,CAAAA,GAAwB,MAAV9G,IAAAA,CAAKC,EAAhD6G,IACAM,CAAAA,GAAO,OAAPA,EACAC,CAAAA,GAAS;AACLpG,IAAAA,CAAAA,EAAGkG,CAAAA,CAAOlG,CAAPkG,GAAWF,CADT;AAEL/F,IAAAA,CAAAA,EAAGiG,CAAAA,CAAOjG;AAFL,GAFT4F,KAOAM,CAAAA,GAAO,QAAPA,EACAC,CAAAA,GAAS;AACLpG,IAAAA,CAAAA,EAAGkG,CAAAA,CAAOlG,CAAPkG,GAAWF,CADT;AAEL/F,IAAAA,CAAAA,EAAGiG,CAAAA,CAAOjG;AAFL,GART4F,GAcG;AACHM,IAAAA,IAAAA,EAAAA,CADG;AAEHE,IAAAA,MAAAA,EAAQ,CAACJ,CAAD,EAASC,CAAT,EAAiBE,CAAjB;AAFL,GAlByEL;AAoBnDK,CTvDjC;AAAA,IUIME,CAAAA,GAAgBC,CAAAA,GACjBvG,CADiBuG,CACf,UAAA,CAAA,EAAA;AAAA,SAAKb,CAAAA,CAAE1F,CAAP;AAAOA,CADQuG,EAEjBtG,CAFiBsG,CAEf,UAAA,CAAA,EAAA;AAAA,SAAKb,CAAAA,CAAEzF,CAAP;AAAOA,CAFQsG,CVJtB;AAAA,IU8EMG,CAAAA,GAAkB,UACpB3E,CADoB,EAEpBC,CAFoB,EAGpBC,CAHoB,EAIpBC,CAJoB,EAKpByE,CALoB,EAMpBC,CANoB,EAOpBC,CAPoB,EAOpBA;AAAAA,SAEA1E,CAAAA,CACI,CACIJ,CADJ,EAEIC,CAFJ,EAGIC,CAHJ,EAIIC,CAJJ,EAKIyE,CALJ,EAMIC,CANJ,EAOIC,CAPJ,CADJ1E,EAUI,UACIzC,CADJ,EAEID,CAFJ,EAGIyB,CAHJ,EAIIC,CAJJ,EAKIS,CALJ,EAMIkF,CANJ,EAOIC,CAPJ,EAOIA;AAAAA,QAEQV,CAAAA,GAAWP,CAAAA,CACf;AACIpG,MAAAA,UAAAA,EAAAA,CADJ;AAEID,MAAAA,QAAAA,EAAAA,CAFJ;AAGIyB,MAAAA,WAAAA,EAAAA,CAHJ;AAIIC,MAAAA,WAAAA,EAAAA;AAJJ,KADe2E,EAOflE,CAPekE,EAQfgB,CARehB,EASfiB,CATejB,CAAAA,CAAXO,MAFRU;AAEQV,WAYDC,CAAAA,CAAcD,CAAdC,CAZCD;AAYaA,GA/B7BlE,CAFA0E;AAiC6BR,CVtHjC;AAAA,IU0HMW,CAAAA,GAAwB,UAC1BjF,CAD0B,EAE1BC,CAF0B,EAG1BC,CAH0B,EAI1BC,CAJ0B,EAI1BA;AAAAA,SAEAC,CAAAA,CACI,CAACJ,CAAD,EAAkBC,CAAlB,EAAiCC,CAAjC,EAAmDC,CAAnD,CADJC,EAEI,UAACzC,CAAD,EAAaD,CAAb,EAAuByB,CAAvB,EAAoCC,CAApC,EAAoCA;AAAAA,WACzByE,CAAAA,CAAyB;AAC5BlG,MAAAA,UAAAA,EAAAA,CAD4B;AAE5BD,MAAAA,QAAAA,EAAAA,CAF4B;AAG5ByB,MAAAA,WAAAA,EAAAA,CAH4B;AAI5BC,MAAAA,WAAAA,EAAAA;AAJ4B,KAAzByE,CADyBzE;AAK5BA,GAPZgB,CAFAD;AASYf,CVvIhB;AAAA,IUmJM8F,CAAAA,GAA0B,UAC5BlF,CAD4B,EAE5BC,CAF4B,EAG5BC,CAH4B,EAI5BC,CAJ4B,EAK5ByE,CAL4B,EAM5BC,CAN4B,EAO5BC,CAP4B,EAQ5BK,CAR4B,EAQ5BA;AAAAA,SAEA/E,CAAAA,CACI,CACIJ,CADJ,EAEIC,CAFJ,EAGIC,CAHJ,EAIIC,CAJJ,EAKIyE,CALJ,EAMIC,CANJ,EAOIC,CAPJ,EAQIK,CARJ,CADJ/E,EAWI,UACIzC,CADJ,EAEID,CAFJ,EAGIyB,CAHJ,EAIIC,CAJJ,EAKIS,CALJ,EAMIkF,CANJ,EAOIC,CAPJ,EAQIP,CARJ,EAQIA;AAAAA,QAAAA,CAAAA,GAEyBV,CAAAA,CACrB;AACIpG,MAAAA,UAAAA,EAAAA,CADJ;AAEID,MAAAA,QAAAA,EAAAA,CAFJ;AAGIyB,MAAAA,WAAAA,EAAAA,CAHJ;AAIIC,MAAAA,WAAAA,EAAAA;AAJJ,KADqB2E,EAOrBlE,CAPqBkE,EAQrBgB,CARqBhB,EASrBiB,CATqBjB,CAFzBU;AAAAA,QAEQH,CAAAA,GAAAA,CAAAA,CAAAA,MAFRG;AAAAA,QAEgBL,CAAAA,GAAAA,CAAAA,CAAAA,IAFhBK;AAAAA,QAcMjD,CAAAA,GAAW8C,CAAAA,CAAO,CAAPA,CAdjBG;AAcwB,WACX,aAATL,CAAS,GACT5C,CAAAA,CAASvD,CAATuD,IAAciD,CADL,GAGTjD,CAAAA,CAASvD,CAATuD,IAAciD,CAHL,EAGKA,eAGEjD,CAAAA,CAASvD,CAHXwG,GAGWxG,GAHXwG,GAGgBjD,CAAAA,CAAStD,CAHzBuG,GAGyBvG,GAPnB;AAOmBA,GAxCnDkC,CAFA+E;AA0CmDjH,CVrMvD;AAAA,IU6MakH,CAAAA,GAA6B,UAAA,CAAA,EAAA;AAAA,MACtCjI,CAAAA,GAAAA,CAAAA,CAAAA,IADsC;AAAA,MACtCA,CAAAA,GAAAA,CAAAA,CACA0C,MAFsC;AAAA,MAEtCA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAS,CAATA,GAAS,CAF6B;AAAA,MAGtCmE,CAAAA,GAAAA,CAAAA,CAAAA,cAHsC;AAAA,MAItCC,CAAAA,GAAAA,CAAAA,CAAAA,cAJsC;AAAA,MAItCA,CAAAA,GAAAA,CAAAA,CACA7G,SALsC;AAAA,MAKtCA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAY,CAAZA,GAAY,CAL0B;AAAA,MAMtCqH,CAAAA,GAAAA,CAAAA,CAAAA,UANsC;AAAA,MAOtCjB,CAAAA,GAAAA,CAAAA,CAAAA,SAPsC;AAAA,MAQtC5G,CAAAA,GAAAA,CAAAA,CAAAA,SARsC;AAAA,MAQtCA,CAAAA,GAW0C+D,CAAAA,EAnBJ;AAAA,MAmB9BH,CAAAA,GAAAA,CAAAA,CAAAA,OAnB8B;AAAA,MAmBbE,CAAAA,GAAAA,CAAAA,CAARD,MAnBqB;AAAA,MAqBhC1E,CAAAA,GAAQC,CAAAA,EArBwB;AAAA,MAsBhC0I,CAAAA,GAAezC,CAAAA,CAAyBuB,CAAzBvB,EAAoClG,CAApCkG,CAtBiB;AAAA,MAuBhCD,CAAAA,GAAeC,CAAAA,CAAyBrF,CAAzBqF,EAAoClG,CAApCkG,CAvBiB;AAAA,MAyBhCC,CAAAA,GT5MgC,UACtC/E,CADsC,EAEtCC,CAFsC,EAEtCA;AAAAA,WACCQ,CAAAA,CAAQ,YAAA;AAAA,aAAMV,CAAAA,CAAsBC,CAAtBD,EAA4BE,CAA5BF,CAAN;AAAkCE,KAA1CQ,EAAsD,CAACT,CAAD,EAAOC,CAAP,CAAtDQ,CADDR;AS0MqBiI,GT5MiB,CS4MiBlI,CT5MjB,ES4MuBC,CT5MvB,CSmLA;AAAA,MA0BhCkI,CAAAA,GAjNkB,UAAA,CAAA,EAAA;AAAA,QACxBzF,CAAAA,GAAAA,CAAAA,CAAAA,MADwB;AAAA,QAExBmE,CAAAA,GAAAA,CAAAA,CAAAA,cAFwB;AAAA,QAGxBC,CAAAA,GAAAA,CAAAA,CAAAA,cAHwB;AAAA,QAIxBQ,CAAAA,GAAAA,CAAAA,CAAAA,UAJwB;AAAA,QAKxBC,CAAAA,GAAAA,CAAAA,CAAAA,YALwB;AAAA,QAMxB1C,CAAAA,GAAAA,CAAAA,CAAAA,YANwB;AAMxBA,WAKApE,CAAAA,CACI,YAAA;AAAA,aAAO;AACHmB,QAAAA,KAAAA,EAAO,UAACvB,CAAD,EAACA;AAAAA,iBAAkB;AACtBG,YAAAA,UAAAA,EAAYH,CAAAA,CAAMC,GAAND,CAAUG,UADA;AAEtBD,YAAAA,QAAAA,EAAUF,CAAAA,CAAMC,GAAND,CAAUE,QAFE;AAGtByB,YAAAA,WAAAA,EAAa3B,CAAAA,CAAMC,GAAND,CAAU2B,WAHD;AAItBC,YAAAA,WAAAA,EAAa5B,CAAAA,CAAMC,GAAND,CAAU4B,WAJD;AAKtBS,YAAAA,MAAAA,EAAAA,CALsB;AAMtBmE,YAAAA,cAAAA,EAAgB,CANM;AAOtBC,YAAAA,cAAAA,EAAgB,CAPM;AAQtBQ,YAAAA,UAAAA,EAAAA,CARsB;AAStBjB,YAAAA,SAAAA,EAAWkB,CAAAA,CAAalH,CAAbkH,CATW;AAUtB9H,YAAAA,SAAAA,EAAWoF,CAAAA,CAAaxE,CAAbwE,CAVW;AAWtB3F,YAAAA,OAAAA,EAAS;AAXa,WAAlBmB;AAWK,SAZV;AAcHwB,QAAAA,MAAAA,EAAQ,UAAC2E,CAAD,EAACA;AAAAA,iBAAc;AACnBhG,YAAAA,UAAAA,EAAYgG,CAAAA,CAAElG,GAAFkG,CAAMhG,UADC;AAEnBD,YAAAA,QAAAA,EAAUiG,CAAAA,CAAElG,GAAFkG,CAAMjG,QAFG;AAGnByB,YAAAA,WAAAA,EAAawE,CAAAA,CAAElG,GAAFkG,CAAMxE,WAHA;AAInBC,YAAAA,WAAAA,EAAauE,CAAAA,CAAElG,GAAFkG,CAAMvE,WAJA;AAKnBS,YAAAA,MAAAA,EAAAA,CALmB;AAMnBmE,YAAAA,cAAAA,EAAAA,CANmB;AAOnBC,YAAAA,cAAAA,EAAAA,CAPmB;AAQnBQ,YAAAA,UAAAA,EAAAA,CARmB;AASnBjB,YAAAA,SAAAA,EAAWkB,CAAAA,CAAaf,CAAbe,CATQ;AAUnB9H,YAAAA,SAAAA,EAAWoF,CAAAA,CAAa2B,CAAb3B,CAVQ;AAWnB3F,YAAAA,OAAAA,EAAS;AAXU,WAAdsH;AAWI,SAzBV;AA2BH1E,QAAAA,KAAAA,EAAO,UAAC0E,CAAD,EAACA;AAAAA,iBAAc;AAClBhG,YAAAA,UAAAA,EAAYgG,CAAAA,CAAElG,GAAFkG,CAAMhG,UADA;AAElBD,YAAAA,QAAAA,EAAUiG,CAAAA,CAAElG,GAAFkG,CAAMjG,QAFE;AAGlByB,YAAAA,WAAAA,EAAawE,CAAAA,CAAElG,GAAFkG,CAAMxE,WAHD;AAIlBC,YAAAA,WAAAA,EAAauE,CAAAA,CAAElG,GAAFkG,CAAMvE,WAJD;AAKlBS,YAAAA,MAAAA,EAAAA,CALkB;AAMlBmE,YAAAA,cAAAA,EAAgB,CANE;AAOlBC,YAAAA,cAAAA,EAAgB,CAPE;AAQlBQ,YAAAA,UAAAA,EAAAA,CARkB;AASlBjB,YAAAA,SAAAA,EAAWkB,CAAAA,CAAaf,CAAbe,CATO;AAUlB9H,YAAAA,SAAAA,EAAWoF,CAAAA,CAAa2B,CAAb3B,CAVO;AAWlB3F,YAAAA,OAAAA,EAAS;AAXS,WAAdsH;AAWK;AAtCV,OAAP;AAsCiB,KAvCrB/F,EA0CI,CAACoG,CAAD,EAAiBC,CAAjB,EAAiCQ,CAAjC,EAA6CC,CAA7C,EAA2D1C,CAA3D,CA1CJpE,CALAoE;AA2MyBuD,GAjND,CAiN4B;AAChD1F,IAAAA,MAAAA,EAAAA,CADgD;AAEhDmE,IAAAA,cAAAA,EAAAA,CAFgD;AAGhDC,IAAAA,cAAAA,EAAAA,CAHgD;AAIhDQ,IAAAA,UAAAA,EAAAA,CAJgD;AAKhDC,IAAAA,YAAAA,EAAAA,CALgD;AAMhD1C,IAAAA,YAAAA,EAAAA;AANgD,GAjN5B,CAuLc;;AAgClCA,SAcG;AACHb,IAAAA,UAAAA,EAZeN,CAAAA,CAAoCqB,CAApCrB,EAAkD;AACjEC,MAAAA,IAAAA,EAAM,UAAA,CAAA,EAAA;AAAA,eAAStD,CAAAA,CAAMuD,EAAf;AAAeA,OAD4C;AAEjEC,MAAAA,OAAAA,EAASsE,CAAAA,CAAiBtG,MAFuC;AAGjEiC,MAAAA,IAAAA,EAAMqE,CAAAA,CAAiBvG,KAH0C;AAIjEA,MAAAA,KAAAA,EAAOuG,CAAAA,CAAiBtG,MAJyC;AAKjEA,MAAAA,MAAAA,EAAQsG,CAAAA,CAAiBtG,MALwC;AAMjEC,MAAAA,KAAAA,EAAOqG,CAAAA,CAAiBrG,KANyC;AAOjEwB,MAAAA,MAAAA,EAAQC,CAPyD;AAQjEQ,MAAAA,SAAAA,EAAAA,CAAYV;AARqD,KAAlDK,CAWZ;AAEH8D,IAAAA,eAAAA,EAAAA,CAFG;AAGHM,IAAAA,qBAAAA,EAAAA,CAHG;AAIHC,IAAAA,uBAAAA,EAAAA;AAJG,GAdHlD;AAkBAkD,CV/PR;AAAA,IWqBaM,CAAAA,GAAqB,UAAA,CAAA,EAAA;AAAA,MAC9B9D,CAAAA,GAAAA,CAAAA,CAAAA,MAD8B;AAAA,MAE9BvE,CAAAA,GAAAA,CAAAA,CAAAA,IAF8B;AAAA,MAGvBwE,CAAAA,GAAAA,CAAAA,CAAP9F,KAH8B;AAAA,MAI9BuB,CAAAA,GAAAA,CAAAA,CAAAA,SAJ8B;AAAA,MAK9ByC,CAAAA,GAAAA,CAAAA,CAAAA,MAL8B;AAAA,MAM9BmE,CAAAA,GAAAA,CAAAA,CAAAA,cAN8B;AAAA,MAO9BC,CAAAA,GAAAA,CAAAA,CAAAA,cAP8B;AAAA,MAQ9BR,CAAAA,GAAAA,CAAAA,CAAAA,WAR8B;AAAA,MAS9BgB,CAAAA,GAAAA,CAAAA,CAAAA,UAT8B;AAAA,MAU9B7H,CAAAA,GAAAA,CAAAA,CAAAA,SAV8B;AAAA,MAW9B4G,CAAAA,GAAAA,CAAAA,CAAAA,SAX8B;AAAA,MAW9BA,CAAAA,GAAAA,CAAAA,CACA3B,SAZ8B;AAAA,MAY9BA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAYuB,CAAZvB,GAAYuB,CAZkB;AAAA,MAcxBtB,CAAAA,GAAWC,CAAAA,CAAmCJ,CAAnCI,CAda;AAAA,MAcsBJ,CAAAA,GAGhDyD,CAAAA,CAAkC;AAC9BjI,IAAAA,IAAAA,EAAAA,CAD8B;AAE9BC,IAAAA,SAAAA,EAAAA,CAF8B;AAG9ByC,IAAAA,MAAAA,EAAAA,CAH8B;AAI9BmE,IAAAA,cAAAA,EAAAA,CAJ8B;AAK9BC,IAAAA,cAAAA,EAAAA,CAL8B;AAM9BQ,IAAAA,UAAAA,EAAAA,CAN8B;AAO9BjB,IAAAA,SAAAA,EAAAA,CAP8B;AAQ9B5G,IAAAA,SAAAA,EAAAA;AAR8B,GAAlCwI,CAjB0B;AAAA,MAgBtBjE,CAAAA,GAAAA,CAAAA,CAAAA,UAhBsB;AAAA,MAgBVwD,CAAAA,GAAAA,CAAAA,CAAAA,eAhBU;AAAA,MAgBOM,CAAAA,GAAAA,CAAAA,CAAAA,qBAhBP;AAAA,MAgB8BC,CAAAA,GAAAA,CAAAA,CAAAA,uBAhB9B;AAAA,MA4BxB/C,CAAAA,GAAsCN,CA5Bd;AA4BcA,SAGxC5F,CAAAA,CAAAA,GAAAA,EAAAA;AAAGG,IAAAA,SAAAA,EAAAA,eAAwBsF,CAAAA,CAAO,CAAPA,CAAxBtF,GAA+B,GAA/BA,GAAqCsF,CAAAA,CAAO,CAAPA,CAArCtF,GAA4C,GAA/CH;AAA+C,IAAA,QAAA,EAC1CkF,CAAAA,CAAW,UAACiB,CAAD,EAAkB5E,CAAlB,EAAkBA;AAAAA,aACnB6E,CAAAA,CAAcF,CAAdE,EAAqB;AACxBC,QAAAA,GAAAA,EAAK9E,CAAAA,CAAMuD,EADa;AAExBvD,QAAAA,KAAAA,EAAAA,CAFwB;AAGxB3B,QAAAA,KAAAA,EAAOiG,CAAAA,CAAStE,CAATsE,CAHiB;AAIxBhG,QAAAA,KAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EACOsG,CADPtG,EACOsG;AACHsB,UAAAA,SAAAA,EAAWD,CADRrB;AAEHkB,UAAAA,IAAAA,EAAMqB,CAAAA,CACFvC,CAAAA,CAAgBzE,UADdgH,EAEFvC,CAAAA,CAAgB1E,QAFdiH,EAGFvC,CAAAA,CAAgBjD,WAHdwF,EAIFvC,CAAAA,CAAgBhD,WAJduF,EAKFvC,CAAAA,CAAgBvC,MALd8E,EAMFvC,CAAAA,CAAgB4B,cANdW,EAOFvC,CAAAA,CAAgB6B,cAPdU,CAFHvC;AAWH5F,UAAAA,UAAAA,EAAYyI,CAAAA,CACR7C,CAAAA,CAAgBzE,UADRsH,EAER7C,CAAAA,CAAgB1E,QAFRuH,EAGR7C,CAAAA,CAAgBjD,WAHR8F,EAIR7C,CAAAA,CAAgBhD,WAJR6F,CAXT7C;AAiBHwB,UAAAA,YAAAA,EAAcsB,CAAAA,CACV9C,CAAAA,CAAgBzE,UADNuH,EAEV9C,CAAAA,CAAgB1E,QAFNwH,EAGV9C,CAAAA,CAAgBjD,WAHN+F,EAIV9C,CAAAA,CAAgBhD,WAJN8F,EAKV9C,CAAAA,CAAgBvC,MALNqF,EAMV9C,CAAAA,CAAgB4B,cANNkB,EAOV9C,CAAAA,CAAgB6B,cAPNiB,EAQV9C,CAAAA,CAAgBqC,UARNS;AAjBX9C,SADPtG;AAJwB,OAArBuG,CADmB7E;AA+BEiH,KA/B/BtD;AADLlF,GAAAA,CAHwC4F;AAmCJ4C,CXpF5C;AAAA,IYGagB,CAAAA,GAA0B,UACnCjD,CADmC,EAEnC9F,CAFmC,EAGnCX,CAHmC,EAInC0H,CAJmC,EAInCA;AAEAjB,EAAAA,CAAAA,CAAIE,YAAJF,GAAmB,QAAnBA,EACAA,CAAAA,CAAIG,IAAJH,GAAczG,CAAAA,CAAMW,MAANX,CAAaQ,IAAbR,CAAkB6G,QAAlB7G,GAAkB6G,KAAlB7G,GAAgCA,CAAAA,CAAMW,MAANX,CAAaQ,IAAbR,CAAkB8G,UADhEL,EAGA9F,CAAAA,CAAOoG,OAAPpG,CAAe,UAAA,CAAA,EAAA;AACX8F,IAAAA,CAAAA,CAAIO,SAAJP,GAAgB3G,CAAAA,CAAMe,SAAtB4F,EACAA,CAAAA,CAAIC,SAAJD,GAAgBkD,CAAAA,CAAkBC,MAAlBD,CAAyBE,KAAzBF,CAA+B7J,CAAAA,CAAMW,UAArCkJ,CADhBlD,EAEAA,CAAAA,CAAIQ,QAAJR,CAAIQ,KAAYnH,CAAAA,CAAMA,KAAtB2G,EAA+B3G,CAAAA,CAAMoC,CAArCuE,EAAwC3G,CAAAA,CAAMqC,CAA9CsE,CAFAA,EAIAA,CAAAA,CAAIqD,SAAJrD,EAJAA,EAKAA,CAAAA,CAAIsD,WAAJtD,GAAkB3G,CAAAA,CAAM2H,SALxBhB,EAMAA,CAAAA,CAAIuD,SAAJvD,GAAgBiB,CANhBjB,EAOA3G,CAAAA,CAAMyI,MAANzI,CAAaiH,OAAbjH,CAAqB,UAACmK,CAAD,EAAQC,CAAR,EAAQA;AACX,YAAVA,CAAU,GAAGzD,CAAAA,CAAI0D,MAAJ1D,CAAWwD,CAAAA,CAAM/H,CAAjBuE,EAAoBwD,CAAAA,CAAM9H,CAA1BsE,CAAH,GACTA,CAAAA,CAAI2D,MAAJ3D,CAAWwD,CAAAA,CAAM/H,CAAjBuE,EAAoBwD,CAAAA,CAAM9H,CAA1BsE,CADS;AACiBtE,KAFnCrC,CAPA2G,EAWAA,CAAAA,CAAIe,MAAJf,EAXAA;AAWIe,GAZR7G,CAHA8F;AAeQe,CZxBZ;AAAA,IaOa6C,CAAAA,GAAc,UAAA,CAAA,EAAA;AAAA,MAIvBjJ,CAAAA,GAAAA,CAAAA,CAAAA,IAJuB;AAAA,MAIvBA,CAAAA,GAAAA,CAAAA,CACAC,SALuB;AAAA,MAKvBA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAY,CAAZA,GAAY,CALW;AAAA,MAKX,CAAA,GAAA,CAAA,CACZyC,MANuB;AAAA,MAMvBA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAS,EAATA,GAAS,CANc;AAAA,MAOvBmE,CAAAA,GAAAA,CAAAA,CAAAA,cAPuB;AAAA,MAQvBC,CAAAA,GAAAA,CAAAA,CAAAA,cARuB;AAAA,MAQvBA,CAAAA,GAAAA,CAAAA,CACA3C,iBATuB;AAAA,MASvBA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAoB,YAAA;AAAA,WAAO,EAAP;AAAO,GAA3BA,GAA2B,CATJ;AAAA,MA0BjB+E,CAAAA,GAAQzI,CAAAA,CACV,YAAA;AAAA,WACIT,CAAAA,CAEKE,MAFLF,CAGQ,UAAA,CAAA,EAAA;AAAA,aACIH,IAAAA,CAAKM,GAALN,CAASO,CAAAA,CAAiBC,CAAAA,CAAMC,GAAND,CAAUE,QAAVF,GAAqBA,CAAAA,CAAMC,GAAND,CAAUG,UAAhDJ,CAATP,KACAI,CAFJ;AAEIA,KALZD,EAQKoE,GARLpE,CAQS,UAAA,CAAA,EAAA;AAAA,aAAA,CAAA,CAAA,EAAA,EACE4G,CAAAA,CAAevG,CAAAA,CAAMC,GAArBsG,EAA0BlE,CAA1BkE,EAAkCC,CAAlCD,EAAkDE,CAAlDF,CADF,EACoDE;AACrD9G,QAAAA,IAAAA,EAAMK;AAD+CyG,OADpD,CAAA;AAEKzG,KAVdL,CADJ;AAWkBK,GAZRI,EAcV,CAACT,CAAD,EAAOC,CAAP,EAAkByC,CAAlB,EAA0BmE,CAA1B,EAA0CC,CAA1C,CAdUrG,CA1BS;AAwCuBqG,SAKvCrG,CAAAA,CACH,YAAA;AAAA,WACIyI,CAAAA,CAAM9E,GAAN8E,CAAU,UAAA,CAAA,EAAA;AAAA,aAAA,CAAA,CAAA,EAAA,EACH/E,CAAAA,CAAkBgF,CAAlBhF,CADG,EAEHgF,CAFG,CAAA;AAEHA,KAFPD,CADJ;AAGWC,GAJR1I,EAMH,CAACyI,CAAD,EAAQ/E,CAAR,CANG1D,CALuCqG;AAWlC3C,Cb1DhB;AAAA,IcSaiF,CAAAA,GAAmB,UAAA,CAAA,EAAA;AAAA,MAC5BpJ,CAAAA,GAAAA,CAAAA,CAAAA,IAD4B;AAAA,MAE5BC,CAAAA,GAAAA,CAAAA,CAAAA,SAF4B;AAAA,MAG5ByC,CAAAA,GAAAA,CAAAA,CAAAA,MAH4B;AAAA,MAI5BmE,CAAAA,GAAAA,CAAAA,CAAAA,cAJ4B;AAAA,MAK5BC,CAAAA,GAAAA,CAAAA,CAAAA,cAL4B;AAAA,MAK5BA,CAAAA,GAAAA,CAAAA,CACAQ,UAN4B;AAAA,MAM5BA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAa,CAAbA,GAAa,CANe;AAAA,MAO5B5I,CAAAA,GAAAA,CAAAA,CAAAA,KAP4B;AAAA,MAQ5B2H,CAAAA,GAAAA,CAAAA,CAAAA,SAR4B;AAAA,MAS5B5G,CAAAA,GAAAA,CAAAA,CAAAA,SAT4B;AAAA,MAqBtBkF,CAAAA,GAAWC,CAAAA,CAAmClG,CAAnCkG,CArBW;AAAA,MAuBtBhG,CAAAA,GAAQC,CAAAA,EAvBc;AAAA,MAwBtB0I,CAAAA,GAAezC,CAAAA,CAAyBuB,CAAzBvB,EAAoClG,CAApCkG,CAxBO;AAAA,MAyBtBD,CAAAA,GAAeC,CAAAA,CAAyBrF,CAAzBqF,EAAoClG,CAApCkG,CAzBO;AAAA,MA2BtBX,CAAAA,GAAoB4B,CAAAA,CACtB,UAACoD,CAAD,EAACA;AAAAA,QAKO9J,CALP8J;AAAAA,QACS9E,CAAAA,GAAW;AACbvD,MAAAA,CAAAA,EAAGqI,CAAAA,CAAKhC,MAALgC,CAAY,CAAZA,EAAerI,CADL;AAEbC,MAAAA,CAAAA,EAAGoI,CAAAA,CAAKhC,MAALgC,CAAY,CAAZA,EAAepI;AAFL,KADpBoI;AAGyBpI,WAGJ,aAAdoI,CAAAA,CAAKlC,IAAS,IACd5C,CAAAA,CAASvD,CAATuD,IAAciD,CAAdjD,EACAhF,CAAAA,GAAa,KAFC,KAIdgF,CAAAA,CAASvD,CAATuD,IAAciD,CAAdjD,EACAhF,CAAAA,GAAa,OALC,GAKD,CAAA,CAAA,EAAA,EAIVgF,CAJU,EAIVA;AACH3F,MAAAA,KAAAA,EAAOiG,CAAAA,CAASwE,CAAAA,CAAKnJ,IAAd2E,CADJN;AAEHgC,MAAAA,SAAAA,EAAWkB,CAAAA,CAAa4B,CAAAA,CAAKnJ,IAAlBuH,CAFRlD;AAGHhF,MAAAA,UAAAA,EAAAA,CAHGgF;AAIH5E,MAAAA,SAAAA,EAAWoF,CAAAA,CAAasE,CAAAA,CAAKnJ,IAAlB6E;AAJRR,KAJU,CARKtD;AAgBWf,GApBf+F,EAuBtB,CAACpB,CAAD,EAAW4C,CAAX,EAAyB1C,CAAzB,EAAuCyC,CAAvC,CAvBsBvB,CA3BE;AAkDeuB,SAGpC2B,CAAAA,CAA6E;AAChFjJ,IAAAA,IAAAA,EAAAA,CADgF;AAEhFC,IAAAA,SAAAA,EAAAA,CAFgF;AAGhFyC,IAAAA,MAAAA,EAAAA,CAHgF;AAIhFmE,IAAAA,cAAAA,EAAAA,CAJgF;AAKhFC,IAAAA,cAAAA,EAAAA,CALgF;AAMhF3C,IAAAA,iBAAAA,EAAAA;AANgF,GAA7E8E,CAHoC3B;AASvCnD,CdpER;AAAA,IeHakF,CAAAA,GAAwBpD,CfGrC;AAAA,IeHqCA,CAAAA,GAAAA,CAAAA,UAAAA,CfGrC;AAAA,IgBQaqD,CAAAA,GAAU,UAAA,CAAA,EAAA;AAAA,MAAaC,CAAAA,GAAAA,CAAAA,CAAVxK,QAAH;AAAA,MAA+BylD1K,CAAAA,CAACC,CAAAA,CAASoH,IAAVrH,EAAUqH,CAAAA,CAAAA;AACNK,IAAAA,CAAAA,EAAGvD,CAAAA,CACC,CAACsG,CAAAA,CAAc5I,MAAf,EAAuB4I,CAAAA,CAAc/I,UAArC,EAAiD+I,CAAAA,CAAchJ,QAA/D,CADD0C,EAEC,UAACtC,CAAD,EAASU,CAAT,EAAgBG,CAAhB,EAAgBA;AAAAA,afqCE,UAC1Bb,CAD0B,EAE1BM,CAF0B,EAG1BC,CAH0B,EAG1BA;AAAAA,YAEMV,CAAAA,GAAaX,IAAAA,CAAKsB,GAALtB,CAASoB,CAATpB,EAA6BqB,CAA7BrB,CAFnBqB;AAAAA,YAGMX,CAAAA,GAAWV,IAAAA,CAAKuB,GAALvB,CAASoB,CAATpB,EAA6BqB,CAA7BrB,CAHjBqB;AAAAA,YAKMG,CAAAA,GAAQC,CAAAA,CAAkBC,CAAAA,CAAiBhB,CAAjBgB,CAAlBD,EAA8CX,CAA9CW,CALdJ;AAAAA,YAMMM,CAAAA,GAAMF,CAAAA,CAAkBC,CAAAA,CAAiBf,CAAjBe,CAAlBD,EAAgDX,CAAhDW,CANZJ;;AAM4DP,YAIxDJ,CAAAA,GAAWC,CAAXD,IAAyB,GAJ+BI,EAI1B;AAAA,cACxBc,CAAAA,GAAMH,CAAAA,CAAkBC,CAAAA,CAAiBf,CAAAA,GAAa,GAA9Be,CAAlBD,EAAsDX,CAAtDW,CADkB;AACoCX,iBAE3D,CAAA,OACEU,CAAAA,CAAMP,CADR,GACQA,GADR,GACaO,CAAAA,CAAMN,CADnB,EAEHL,CAAAA,CAAwBC,CAAxBD,EAAgC,CAAhCA,EAAmC,CAAnCA,EAAsCe,CAAAA,CAAIX,CAA1CJ,EAA6Ce,CAAAA,CAAIV,CAAjDL,CAFG,EAE8CK,OAC5CM,CAAAA,CAAMP,CADsCC,GACtCD,GADsCC,GACjCM,CAAAA,CAAMN,CAHnB,EAIHL,CAAAA,CAAwBC,CAAxBD,EAAgC,CAAhCA,EAAmC,CAAnCA,EAAsCe,CAAAA,CAAIX,CAA1CJ,EAA6Ce,CAAAA,CAAIV,CAAjDL,CAJG,EAKLM,IALK,CAKA,GALA,CAF2DL;AAO3D;;AAAA,YAGLC,CAAAA,GAAeL,CAAAA,GAAWC,CAAXD,IAAyB,GAAzBA,GAA+B,CAA/BA,GAAmC,CAH7C;AAG6C,eAEjD,CAAA,OACEc,CAAAA,CAAMP,CADR,GACQA,GADR,GACaO,CAAAA,CAAMN,CADnB,EAEHL,CAAAA,CAAwBC,CAAxBD,EAAgCE,CAAhCF,EAA8C,CAA9CA,EAAiDc,CAAAA,CAAIV,CAArDJ,EAAwDc,CAAAA,CAAIT,CAA5DL,CAFG,EAGLM,IAHK,CAGA,GAHA,CAFiD;Ae7DxByI,OfqCN,CerCqB9I,CfqCrB,EerC6BU,CfqC7B,EerCoCG,CfqCpC,CerCFA;AAAsCA,KAFvDyB;AADGkD,GAAAA,EAKFqD,CALErD,CAAVrH,CADkD0K;AAM1CA,ChBdZ;AAAA,IiB0BaE,EAAAA,GAAW,UAAA,CAAA,EAAA;AAAA,MACpBrJ,CAAAA,GAAAA,CAAAA,CAAAA,KADoB;AAAA,MAEpB1B,CAAAA,GAAAA,CAAAA,CAAAA,KAFoB;AAAA,MAGpBgL,CAAAA,GAAAA,CAAAA,CAAAA,OAHoB;AAAA,MAIpBC,CAAAA,GAAAA,CAAAA,CAAAA,YAJoB;AAAA,MAKpBC,CAAAA,GAAAA,CAAAA,CAAAA,WALoB;AAAA,MAMpBC,CAAAA,GAAAA,CAAAA,CAAAA,YANoB;AAAA,MAQdC,CAAAA,GAAchE,CAAAA,CAAY,UAAA,CAAA,EAAA;AAAA,WAAA,QAAS4D,CAAT,GAASA,KAAAA,CAAT,GAASA,CAAAA,CAAUtJ,CAAVsJ,EAAiBK,CAAjBL,CAAT;AAA0BK,GAAtCjE,EAA8C,CAAC4D,CAAD,EAAUtJ,CAAV,CAA9C0F,CARA;AAAA,MAUdkE,CAAAA,GAAmBlE,CAAAA,CACrB,UAAA,CAAA,EAAA;AAAA,WAAA,QAAS6D,CAAT,GAASA,KAAAA,CAAT,GAASA,CAAAA,CAAevJ,CAAfuJ,EAAsBI,CAAtBJ,CAAT;AAA+BI,GADVjE,EAErB,CAAC6D,CAAD,EAAevJ,CAAf,CAFqB0F,CAVL;AAAA,MAedmE,CAAAA,GAAkBnE,CAAAA,CAAY,UAAA,CAAA,EAAA;AAAA,WAAA,QAAS8D,CAAT,GAASA,KAAAA,CAAT,GAASA,CAAAA,CAAcxJ,CAAdwJ,EAAqBG,CAArBH,CAAT;AAA8BG,GAA1CjE,EAAkD,CAAC8D,CAAD,EAAcxJ,CAAd,CAAlD0F,CAfJ;AAAA,MAiBdoE,CAAAA,GAAmBpE,CAAAA,CACrB,UAAA,CAAA,EAAA;AAAA,WAAA,QAAS+D,CAAT,GAASA,KAAAA,CAAT,GAASA,CAAAA,CAAezJ,CAAfyJ,EAAsBE,CAAtBF,CAAT;AAA+BE,GADVjE,EAErB,CAAC+D,CAAD,EAAezJ,CAAf,CAFqB0F,CAjBL;AAmBD1F,SAIfvB,CAAAA,CAACC,CAAAA,CAASoH,IAAVrH,EAAUqH;AACNK,IAAAA,CAAAA,EAAG7H,CAAAA,CAAMwH,IADHA;AAENjH,IAAAA,OAAAA,EAASP,CAAAA,CAAMO,OAFTiH;AAGN3G,IAAAA,IAAAA,EAAMa,CAAAA,CAAMb,IAANa,IAAc1B,CAAAA,CAAMyL,KAHpBjE;AAINC,IAAAA,MAAAA,EAAQzH,CAAAA,CAAM0L,WAJRlE;AAKNG,IAAAA,WAAAA,EAAa3H,CAAAA,CAAM2L,WALbnE;AAMNwD,IAAAA,OAAAA,EAASA,CAAAA,GAAUI,CAAVJ,GAAUI,KAAcQ,CAN3BpE;AAONyD,IAAAA,YAAAA,EAAcA,CAAAA,GAAeK,CAAfL,GAAeK,KAAmBM,CAP1CpE;AAQN0D,IAAAA,WAAAA,EAAaA,CAAAA,GAAcK,CAAdL,GAAcK,KAAkBK,CARvCpE;AASN2D,IAAAA,YAAAA,EAAcA,CAAAA,GAAeK,CAAfL,GAAeK,KAAmBI;AAT1CpE,GAAVrH,CAJeuB;AAaqCkK,CjB1D5D;AAAA,IkBIaC,EAAAA,GAAiB,UAC1B3H,CAD0B,EAE1BC,CAF0B,EAG1BC,CAH0B,EAI1BC,CAJ0B,EAK1ByH,CAL0B,EAK1BA;AAAAA,SAEAxH,CAAAA,CACI,CAACJ,CAAD,EAAkBC,CAAlB,EAAiCC,CAAjC,EAAmDC,CAAnD,CADJC,EAEI,UAACzC,CAAD,EAAaD,CAAb,EAAuByB,CAAvB,EAAoCC,CAApC,EAAoCA;AAAAA,WACzBwI,CAAAA,CAAa;AAChBjK,MAAAA,UAAAA,EAAAA,CADgB;AAEhBD,MAAAA,QAAAA,EAAAA,CAFgB;AAGhByB,MAAAA,WAAAA,EAAanC,IAAAA,CAAKuB,GAALvB,CAAS,CAATA,EAAYmC,CAAZnC,CAHG;AAIhBoC,MAAAA,WAAAA,EAAapC,IAAAA,CAAKuB,GAALvB,CAAS,CAATA,EAAYoC,CAAZpC;AAJG,KAAb4K,CADyBxI;AAKHA,GAPrCgB,CAFAwH;AASqCxI,ClBlBzC;AAAA,ImBMayI,EAAAA,GAAoB,UAC7B1K,CAD6B,EAE7BsC,CAF6B,EAG7Bc,CAH6B,EAG7BA;AAAAA,OAAAA,CAAAA,KADAd,CACAc,KADAd,CAAAA,GAA0B,aAC1Bc;AAD0B,MAAA,CAAA,GAGgBI,CAAAA,EAHhB;AAAA,MAGlBH,CAAAA,GAAAA,CAAAA,CAAAA,OAHkB;AAAA,MAGDE,CAAAA,GAAAA,CAAAA,CAARD,MAHS;AAAA,MAKpBG,CAAAA,GAASpB,CAAAA,CAAwCC,CAAxCD,EAA8Ce,CAA9Cf,CALW;AAKmCe,SAsBtD;AACHY,IAAAA,UAAAA,EArBeN,CAAAA,CASjB1D,CATiB0D,EASX;AACJC,MAAAA,IAAAA,EAAM,UAAA,CAAA,EAAA;AAAA,eAAStD,CAAAA,CAAMuD,EAAf;AAAeA,OADjB;AAEJC,MAAAA,OAAAA,EAASJ,CAAAA,CAAO5B,MAFZ;AAGJiC,MAAAA,IAAAA,EAAML,CAAAA,CAAO7B,KAHT;AAIJA,MAAAA,KAAAA,EAAO6B,CAAAA,CAAO5B,MAJV;AAKJA,MAAAA,MAAAA,EAAQ4B,CAAAA,CAAO5B,MALX;AAMJC,MAAAA,KAAAA,EAAO2B,CAAAA,CAAO3B,KANV;AAOJwB,MAAAA,MAAAA,EAAQC,CAPJ;AAQJQ,MAAAA,SAAAA,EAAAA,CAAYV;AARR,KATWK,CAoBZ;AAEHO,IAAAA,WAAAA,EAAauG;AAFV,GAtBsDpH;AAwB5CoH,CnBrCrB;AAAA,IoBqBaG,EAAAA,GAAY,UAAA,CAAA,EAAA;AAAA,MACrBpG,CAAAA,GAAAA,CAAAA,CAAAA,MADqB;AAAA,MAErBvE,CAAAA,GAAAA,CAAAA,CAAAA,IAFqB;AAAA,MAGrByK,CAAAA,GAAAA,CAAAA,CAAAA,YAHqB;AAAA,MAIrBH,CAAAA,GAAAA,CAAAA,CAAAA,WAJqB;AAAA,MAKrBD,CAAAA,GAAAA,CAAAA,CAAAA,WALqB;AAAA,MAMrBV,CAAAA,GAAAA,CAAAA,CAAAA,OANqB;AAAA,MAOrBC,CAAAA,GAAAA,CAAAA,CAAAA,YAPqB;AAAA,MAQrBC,CAAAA,GAAAA,CAAAA,CAAAA,WARqB;AAAA,MASrBC,CAAAA,GAAAA,CAAAA,CAAAA,YATqB;AAAA,MAUrBtH,CAAAA,GAAAA,CAAAA,CAAAA,cAVqB;AAAA,MAUrBA,CAAAA,GAAAA,CAAAA,CACAkC,SAXqB;AAAA,MAWrBA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAYgF,EAAZhF,GAAYgF,CAXS;AAAA,MAaf9K,CAAAA,GAAQC,CAAAA,EAbO;AAAA,MAcf+L,CAAAA,GAAiB9F,CAAAA,CAAyBuF,CAAzBvF,EAAsClG,CAAtCkG,CAdF;AAAA,MAcwClG,CAAAA,GAEzB8L,EAAAA,CAOlC1K,CAPkC0K,EAO5BlI,CAP4BkI,EAOZ;AACpB9I,IAAAA,KAAAA,EAAO,UAAA,CAAA,EAAA;AAAA,aAAU;AACb1C,QAAAA,OAAAA,EAAS,CADI;AAEbkL,QAAAA,KAAAA,EAAO/J,CAAAA,CAAM+J,KAFA;AAGbC,QAAAA,WAAAA,EAAaO,CAAAA,CAAevK,CAAfuK;AAHA,OAAV;AAGyBvK,KAJZ;AAMpBwB,IAAAA,MAAAA,EAAQ,UAAA,CAAA,EAAA;AAAA,aAAU;AACd3C,QAAAA,OAAAA,EAAS,CADK;AAEdkL,QAAAA,KAAAA,EAAO/J,CAAAA,CAAM+J,KAFC;AAGdC,QAAAA,WAAAA,EAAaO,CAAAA,CAAevK,CAAfuK;AAHC,OAAV;AAGwBvK,KATZ;AAWpByB,IAAAA,KAAAA,EAAO,UAAA,CAAA,EAAA;AAAA,aAAU;AACb5C,QAAAA,OAAAA,EAAS,CADI;AAEbkL,QAAAA,KAAAA,EAAO/J,CAAAA,CAAM+J,KAFA;AAGbC,QAAAA,WAAAA,EAAaO,CAAAA,CAAevK,CAAfuK;AAHA,OAAV;AAGyBvK;AAdZ,GAPYqK,CAhBf;AAAA,MAgBb1G,CAAAA,GAAAA,CAAAA,CAAAA,UAhBa;AAAA,MAgBDC,CAAAA,GAAAA,CAAAA,CAAAA,WAhBC;AAAA,MAyCf4G,CAAAA,GAA2BnG,CAzCZ;AAyCYA,SAG7B5F,CAAAA,CAAAA,GAAAA,EAAAA;AAAGG,IAAAA,SAAAA,EAAAA,eAAwBsF,CAAAA,CAAO,CAAPA,CAAxBtF,GAA+B,GAA/BA,GAAqCsF,CAAAA,CAAO,CAAPA,CAArCtF,GAA4C,GAA/CH;AAA+C,IAAA,QAAA,EAC1CkF,CAAAA,CAAW,UAACiB,CAAD,EAAkB5E,CAAlB,EAAkBA;AAAAA,aACnB6E,CAAAA,CAAc2F,CAAd3F,EAAmB;AACtBC,QAAAA,GAAAA,EAAK9E,CAAAA,CAAMuD,EADW;AAEtBvD,QAAAA,KAAAA,EAAAA,CAFsB;AAGtB1B,QAAAA,KAAAA,EAAAA,CAAAA,CAAAA,EAAAA,EACOsG,CADPtG,EACOsG;AACHqF,UAAAA,WAAAA,EAAAA,CADGrF;AAEHkB,UAAAA,IAAAA,EAAMlC,CAAAA,CACFgB,CAAAA,CAAgBzE,UADdyD,EAEFgB,CAAAA,CAAgB1E,QAFd0D,EAGFgB,CAAAA,CAAgBjD,WAHdiC,EAIFgB,CAAAA,CAAgBhD,WAJdgC,EAKFwG,CALExG;AAFHgB,SADPtG,CAHsB;AActBgL,QAAAA,OAAAA,EAAAA,CAdsB;AAetBC,QAAAA,YAAAA,EAAAA,CAfsB;AAgBtBC,QAAAA,WAAAA,EAAAA,CAhBsB;AAiBtBC,QAAAA,YAAAA,EAAAA;AAjBsB,OAAnB5E,CADmB7E;AAkBtByJ,KAlBP9F;AADLlF,GAAAA,CAH6B4F;AAsBjBoF,CpBpFpB;AAAA,IqBWagB,EAAAA,GAAwB,UACjCC,CADiC,EAEjCC,CAFiC,EAGjCrK,CAHiC,EAKjCH,CALiC,EAOjCD,CAPiC,EAQjC0K,CARiC,EAQjCA;AAAAA,OAAAA,CAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAAA,CAAgB,CAAhBA;AAAgB,MAEZ9D,CAAAA,GAA6B,EAFjB;AAAA,MAIV+D,CAAAA,GAAK5J,CAAAA,CAAkBC,CAAAA,CAAiBf,CAAjBe,CAAlBD,EAAgDX,CAAhDW,CAJK;AAKhB6F,EAAAA,CAAAA,CAAOgE,IAAPhE,CAAY,CAAC+D,CAAAA,CAAGpK,CAAJ,EAAOoK,CAAAA,CAAGnK,CAAV,CAAZoG;AAAsBpG,MAEhBqK,CAAAA,GAAK9J,CAAAA,CAAkBC,CAAAA,CAAiBhB,CAAjBgB,CAAlBD,EAA8CX,CAA9CW,CAFWP;AAGtBoG,EAAAA,CAAAA,CAAOgE,IAAPhE,CAAY,CAACiE,CAAAA,CAAGtK,CAAJ,EAAOsK,CAAAA,CAAGrK,CAAV,CAAZoG;;AAAsBpG,OAGlB,IAAIpB,CAAAA,GAAQE,IAAAA,CAAKwL,KAALxL,CAAWA,IAAAA,CAAKsB,GAALtB,CAASW,CAATX,EAAqBU,CAArBV,CAAXA,CAHMkB,EAIlBpB,CAAAA,IAASE,IAAAA,CAAKwL,KAALxL,CAAWA,IAAAA,CAAKuB,GAALvB,CAASW,CAATX,EAAqBU,CAArBV,CAAXA,CAJSkB,EAKlBpB,CAAAA,EALkBoB,EAKlBpB,IAEIA,CAAAA,GAAQ,EAARA,IAAe,CAFnBA,EAEsB;AAAA,QACZ2L,CAAAA,GAAIhK,CAAAA,CAAkBC,CAAAA,CAAiB5B,CAAjB4B,CAAlBD,EAA2CX,CAA3CW,CADQ;AAElB6F,IAAAA,CAAAA,CAAOgE,IAAPhE,CAAY,CAACmE,CAAAA,CAAExK,CAAH,EAAMwK,CAAAA,CAAEvK,CAAR,CAAZoG;AAIRA;;AAAAA,EAAAA,CAAAA,GAASA,CAAAA,CAAO/C,GAAP+C,CAAW,UAAA,CAAA,EAAA;AAAA,QAAErG,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAF;AAAA,QAAKC,CAAAA,GAAAA,CAAAA,CAAAA,CAAAA,CAAL;AAAKA,WAAO,CAACgK,CAAAA,GAAUjK,CAAX,EAAckK,CAAAA,GAAUjK,CAAxB,CAAPA;AAA+BA,GAA/CoG,CAATA,EACI8D,CAAAA,IACA9D,CAAAA,CAAOgE,IAAPhE,CAAY,CAAC4D,CAAD,EAAUC,CAAV,CAAZ7D,CAFJA;AAE0B6D,MAGpBO,CAAAA,GAAKpE,CAAAA,CAAO/C,GAAP+C,CAAW,UAAA,CAAA,EAAA;AAAA,WAAA,CAAA,CAAA,CAAA,CAAA;AAAA,GAAXA,CAHe6D;AAAAA,MAIpBQ,CAAAA,GAAKrE,CAAAA,CAAO/C,GAAP+C,CAAW,UAAA,CAAA,EAAA;AAAA,WAAA,CAAA,CAAA,CAAA,CAAA;AAAA,GAAXA,CAJe6D;AAAAA,MAMpBS,CAAAA,GAAK5L,IAAAA,CAAKsB,GAALtB,CAAKsB,KAALtB,CAAAA,IAAAA,EAAY0L,CAAZ1L,CANemL;AAAAA,MAOpBU,CAAAA,GAAK7L,IAAAA,CAAKuB,GAALvB,CAAKuB,KAALvB,CAAAA,IAAAA,EAAY0L,CAAZ1L,CAPemL;AAAAA,MASpBW,CAAAA,GAAK9L,IAAAA,CAAKsB,GAALtB,CAAKsB,KAALtB,CAAAA,IAAAA,EAAY2L,CAAZ3L,CATemL;AASHQ,SAGhB;AACHrE,IAAAA,MAAAA,EAAAA,CADG;AAEHrG,IAAAA,CAAAA,EAAG2K,CAFA;AAGH1K,IAAAA,CAAAA,EAAG4K,CAHA;AAIHC,IAAAA,KAAAA,EAAOF,CAAAA,GAAKD,CAJT;AAKHI,IAAAA,MAAAA,EAPOhM,IAAAA,CAAKuB,GAALvB,CAAKuB,KAALvB,CAAAA,IAAAA,EAAY2L,CAAZ3L,IAOM8L;AALV,GAHgBH;AAQNG,CrB3DrB;AAAA,IsBCaG,EAAAA,GAAiB,UAC1Bf,CAD0B,EAE1BC,CAF0B,EAG1BrK,CAH0B,EAI1BqB,CAJ0B,EAK1B+J,CAL0B,EAM1BC,CAN0B,EAM1BA;AAAAA,MAEMC,CAAAA,GAAWC,CAAAA,CAAYH,CAAZG,EAAqBF,CAArBE,EAA8BnB,CAA9BmB,EAAuClB,CAAvCkB,CAFjBF;AAEwDhB,SAEjDiB,CAAAA,GAAWtL,CAAXsL,IAAqBA,CAAAA,GAAWjK,CAFiBgJ;AAEjBhJ,CtBX3C;AAAA,IsBiBamK,EAAAA,GAAqB,UAC9BpB,CAD8B,EAE9BC,CAF8B,EAG9BrK,CAH8B,EAI9BqB,CAJ8B,EAK9BoK,CAL8B,EAM9BL,CAN8B,EAO9BC,CAP8B,EAO9BA;AAAAA,MAEKF,EAAAA,CAAef,CAAfe,EAAwBd,CAAxBc,EAAiCnL,CAAjCmL,EAAyC9J,CAAzC8J,EAAsDC,CAAtDD,EAA+DE,CAA/DF,CAFLE,EAEoEA;AAAAA,QAI9DK,CAAAA,GAAcC,CAAAA,CAASP,CAATO,EAAkBN,CAAlBM,EAA2BvB,CAA3BuB,EAAoCtB,CAApCsB,CAJgDN;AAIZhB,WAEjDoB,CAAAA,CAAKG,IAALH,CACH,UAAA,CAAA,EAAA;AAAA,UAAG5L,CAAAA,GAAAA,CAAAA,CAAAA,UAAH;AAAA,UAAeD,CAAAA,GAAAA,CAAAA,CAAAA,QAAf;AAAeA,aAAe8L,CAAAA,IAAe7L,CAAf6L,IAA6BA,CAAAA,GAAc9L,CAA1DA;AAA0DA,KADtE6L,CAFiDpB;AAGqBzK;AAAAA,CtBjCjF;AAAA,IuBKaiM,EAAAA,GAAiB,UAACC,CAAD,EAA6BhC,CAA7B,EAA6BA;AAAAA,MAAAA,CAAAA,GACbjH,CAAAA,EADaiH;AAAAA,MAC/CpH,CAAAA,GAAAA,CAAAA,CAAAA,OAD+CoH;AAAAA,MAC9BlH,CAAAA,GAAAA,CAAAA,CAARD,MADsCmH;AAAAA,MAGjDiC,CAAAA,GAAiBC,CAAAA,CAAU;AAC7BnM,IAAAA,UAAAA,EAAYiM,CAAAA,CAAanM,GAAbmM,CAAiBjM,UADA;AAE7BD,IAAAA,QAAAA,EAAUkM,CAAAA,CAAanM,GAAbmM,CAAiBlM,QAFE;AAG7ByB,IAAAA,WAAAA,EAAayK,CAAAA,CAAanM,GAAbmM,CAAiBzK,WAHD;AAI7BC,IAAAA,WAAAA,EAAawK,CAAAA,CAAanM,GAAbmM,CAAiBxK,WAJD;AAK7BqB,IAAAA,MAAAA,EAAQC,CALqB;AAM7BQ,IAAAA,SAAAA,EAAAA,CAAYV;AANiB,GAAVsJ,CAHgClC;AASvCpH,SAAAA,CAAAA,CAAAA,EAAAA,EAITqJ,CAJSrJ,EAITqJ;AACHvG,IAAAA,IAAAA,EAAMqE,EAAAA,CACFkC,CAAAA,CAAelM,UADbgK,EAEFkC,CAAAA,CAAenM,QAFbiK,EAGFkC,CAAAA,CAAe1K,WAHbwI,EAIFkC,CAAAA,CAAezK,WAJbuI,EAKFC,CALED;AADHkC,GAJSrJ,CAAAA;AAURoH,CvBxBZ;AAAA,IwBQamC,EAAAA,GAAkB,UAAA,CAAA,EAAA;AAAA,MAAA,CAAA,GAAA,KAAA,CAAA,KAAA,CAAA,GAM3B,EAN2B,GAM3B,CAN2B;AAAA,MAM3B,CAAA,GAAA,CAAA,CALAC,YAD2B;AAAA,MAC3BA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAe,CAAfA,GAAe,CADY;AAAA,MACZ,CAAA,GAAA,CAAA,CACfC,QAF2B;AAAA,MAE3BA,CAAAA,GAAAA,KAAAA,CAAAA,KAAAA,CAAAA,GAAW,CAAXA,GAAW,CAFgB;AAEhB,SAKXrM,CAAAA,CACI,YAAA;AAAA,WACIsM,CAAAA,GACK/K,WADL+K,CACiB,UAAA,CAAA,EAAA;AAAA,aAAOzM,CAAAA,CAAI0B,WAAX;AAAWA,KAD5B+K,EAEK9K,WAFL8K,CAEiB,UAAA,CAAA,EAAA;AAAA,aAAOzM,CAAAA,CAAI2B,WAAX;AAAWA,KAF5B8K,EAGKF,YAHLE,CAGkBF,CAHlBE,EAIKD,QAJLC,CAIcD,CAJdC,CADJ;AAKkBD,GANtBrM,EAOI,CAACoM,CAAD,EAAeC,CAAf,CAPJrM,CALW;AAYQqM,CxBtBvB;;AwBsBuBA,SAAAA,CAAAA,IAAAA,iBAAAA,EAAAA,CAAAA,IAAAA,cAAAA,EAAAA,CAAAA,IAAAA,OAAAA,EAAAA,CAAAA,IAAAA,qBAAAA,EAAAA,CAAAA,IAAAA,kBAAAA,EAAAA,EAAAA,IAAAA,QAAAA,EAAAA,EAAAA,IAAAA,SAAAA,EAAAA,CAAAA,IAAAA,qBAAAA,EAAAA,CAAAA,IAAAA,kBAAAA,EAAAA,EAAAA,IAAAA,qBAAAA,EAAAA,CAAAA,IAAAA,gBAAAA,EAAAA,CAAAA,IAAAA,cAAAA,EAAAA,CAAAA,IAAAA,wBAAAA,EAAAA,CAAAA,IAAAA,mBAAAA,EAAAA,CAAAA,IAAAA,uBAAAA,EAAAA,EAAAA,IAAAA,kBAAAA,EAAAA,EAAAA,IAAAA,cAAAA,EAAAA,CAAAA,IAAAA,oBAAAA,EAAAA,EAAAA,IAAAA,cAAAA,EAAAA,EAAAA,IAAAA,cAAAA,EAAAA,CAAAA,IAAAA,aAAAA,EAAAA,CAAAA,IAAAA,uBAAAA,EAAAA,EAAAA,IAAAA,eAAAA,EAAAA,CAAAA,IAAAA,YAAAA,EAAAA,CAAAA,IAAAA,gBAAAA,EAAAA,CAAAA,IAAAA,0BAAAA,EAAAA,CAAAA,IAAAA,WAAAA,EAAAA,CAAAA,IAAAA,oBAAAA,EAAAA,EAAAA,IAAAA,iBAAAA","sourcesContent":["import { CSSProperties } from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { useTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\n\nconst staticStyle: CSSProperties = {\n    pointerEvents: 'none',\n}\n\nexport interface ArcLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        progress: SpringValue<number>\n        transform: Interpolation<string>\n        textColor: string\n    }\n}\n\nexport const ArcLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g transform={style.transform} opacity={style.progress} style={staticStyle}>\n            <animated.text\n                textAnchor=\"middle\"\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees, positionFromAngle, degreesToRadians } from '@nivo/core'\nimport { DatumWithArc } from './types'\n\n/**\n * Make sure an angle (expressed in radians)\n * always falls in the range 0~2*PI.\n */\nexport const getNormalizedAngle = (angle: number) => {\n    let normalizedAngle = angle % (Math.PI * 2)\n    if (normalizedAngle < 0) {\n        normalizedAngle += Math.PI * 2\n    }\n\n    return normalizedAngle\n}\n\n/**\n * Filter out arcs with a length below `skipAngle`.\n */\nexport const filterDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) =>\n    data.filter(\n        datum => Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >= skipAngle\n    )\n\n/**\n * Memoized version of `filterDataBySkipAngle`.\n */\nexport const useFilteredDataBySkipAngle = <Datum extends DatumWithArc>(\n    data: Datum[],\n    skipAngle: number\n) => useMemo(() => filterDataBySkipAngle(data, skipAngle), [data, skipAngle])\n\nexport const svgEllipticalArcCommand = (\n    radius: number,\n    largeArcFlag: 0 | 1,\n    sweepFlag: 0 | 1,\n    x: number,\n    y: number\n) =>\n    [\n        'A',\n        radius,\n        radius,\n        0, // x-axis-rotation\n        largeArcFlag,\n        sweepFlag,\n        x,\n        y,\n    ].join(' ')\n\nexport const generateSvgArc = (\n    radius: number,\n    originalStartAngle: number,\n    originalEndAngle: number\n): string => {\n    const startAngle = Math.min(originalStartAngle, originalEndAngle)\n    const endAngle = Math.max(originalStartAngle, originalEndAngle)\n\n    const start = positionFromAngle(degreesToRadians(endAngle), radius)\n    const end = positionFromAngle(degreesToRadians(startAngle), radius)\n\n    // we have a full circle, we cannot use a single elliptical arc\n    // to draw it, so we use 2 in that case.\n    if (endAngle - startAngle >= 360) {\n        const mid = positionFromAngle(degreesToRadians(startAngle + 180), radius)\n\n        return [\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 1, mid.x, mid.y),\n            `M ${start.x} ${start.y}`,\n            svgEllipticalArcCommand(radius, 1, 0, mid.x, mid.y),\n        ].join(' ')\n    }\n\n    const largeArcFlag = endAngle - startAngle <= 180 ? 0 : 1\n\n    return [\n        `M ${start.x} ${start.y}`,\n        svgEllipticalArcCommand(radius, largeArcFlag, 0, end.x, end.y),\n    ].join(' ')\n}\n","import { Arc, DatumWithArc } from './types'\nimport { useMemo } from 'react'\n\nexport interface ArcTransitionModeConfig {\n    enter: (arc: Arc) => Arc\n    update: (arc: Arc) => Arc\n    leave: (arc: Arc) => Arc\n}\n\nexport const arcTransitionModes = [\n    'startAngle',\n    'middleAngle',\n    'endAngle',\n    'innerRadius',\n    'centerRadius',\n    'outerRadius',\n    'pushIn',\n    'pushOut',\n] as const\nexport type ArcTransitionMode = typeof arcTransitionModes[number]\n\nexport const arcTransitionModeById: Record<ArcTransitionMode, ArcTransitionModeConfig> = {\n    startAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n    },\n    middleAngle: {\n        enter: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const middleAngle = arc.startAngle + (arc.endAngle - arc.startAngle) / 2\n\n            return {\n                ...arc,\n                startAngle: middleAngle,\n                endAngle: middleAngle,\n            }\n        },\n    },\n    endAngle: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            startAngle: arc.endAngle,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            endAngle: arc.startAngle,\n        }),\n    },\n    innerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n    },\n    centerRadius: {\n        enter: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => {\n            const centerRadius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) / 2\n\n            return {\n                ...arc,\n                innerRadius: centerRadius,\n                outerRadius: centerRadius,\n            }\n        },\n    },\n    outerRadius: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n    pushIn: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n    },\n    pushOut: {\n        enter: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.outerRadius,\n            outerRadius: arc.outerRadius + arc.outerRadius - arc.innerRadius,\n        }),\n        update: (arc: Arc) => arc,\n        leave: (arc: Arc) => ({\n            ...arc,\n            innerRadius: arc.innerRadius - arc.outerRadius + arc.innerRadius,\n            outerRadius: arc.innerRadius,\n        }),\n    },\n}\n\nexport interface TransitionExtra<Datum extends DatumWithArc, ExtraProps> {\n    enter: (datum: Datum) => ExtraProps\n    update: (datum: Datum) => ExtraProps\n    leave: (datum: Datum) => ExtraProps\n}\n\nexport const useArcTransitionMode = <Datum extends DatumWithArc, ExtraProps>(\n    mode: ArcTransitionMode,\n    extraTransition?: TransitionExtra<Datum, ExtraProps>\n) =>\n    useMemo(() => {\n        const transitionMode = arcTransitionModeById[mode]\n\n        return {\n            enter: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.enter(datum.arc),\n                ...(extraTransition ? extraTransition.enter(datum) : {}),\n            }),\n            update: (datum: Datum) => ({\n                progress: 1,\n                ...transitionMode.update(datum.arc),\n                ...(extraTransition ? extraTransition.update(datum) : {}),\n            }),\n            leave: (datum: Datum) => ({\n                progress: 0,\n                ...transitionMode.leave(datum.arc),\n                ...(extraTransition ? extraTransition.leave(datum) : {}),\n            }),\n        }\n    }, [mode, extraTransition])\n","import { useMemo } from 'react'\nimport { useTransition, to, SpringValue } from '@react-spring/web'\nimport {\n    // @ts-ignore\n    midAngle,\n    positionFromAngle,\n    useMotionConfig,\n} from '@nivo/core'\nimport { Arc, DatumWithArc, Point } from './types'\nimport { filterDataBySkipAngle } from './utils'\nimport { ArcTransitionMode, TransitionExtra, useArcTransitionMode } from './arcTransitionMode'\n\nexport const computeArcCenter = (arc: Arc, offset: number): Point => {\n    const angle = midAngle(arc) - Math.PI / 2\n    const radius = arc.innerRadius + (arc.outerRadius - arc.innerRadius) * offset\n\n    return positionFromAngle(angle, radius)\n}\n\nexport const interpolateArcCenter =\n    (offset: number) =>\n    (\n        startAngleValue: SpringValue<number>,\n        endAngleValue: SpringValue<number>,\n        innerRadiusValue: SpringValue<number>,\n        outerRadiusValue: SpringValue<number>\n    ) =>\n        to(\n            [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n            (startAngle, endAngle, innerRadius, outerRadius) => {\n                const centroid = computeArcCenter(\n                    { startAngle, endAngle, innerRadius, outerRadius },\n                    offset\n                )\n\n                return `translate(${centroid.x},${centroid.y})`\n            }\n        )\n\nexport const useArcCentersTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset = 0.5,\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArcCenter(offset),\n    }\n}\n\nexport interface ArcCenter<Datum extends DatumWithArc> extends Point {\n    data: Datum\n}\n\n/**\n * Compute an array of arc centers from an array of data containing arcs.\n *\n * If you plan to animate those, you could use `useArcCentersTransition`\n * instead, you could use the returned array with react-spring `useTransition`,\n * but this would lead to cartesian transitions (x/y), while `useArcCentersTransition`\n * will generate proper transitions using radius/angle.\n */\nexport const useArcCenters = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    offset = 0.5,\n    skipAngle = 0,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // define where the centers should be placed,\n    // 0.0: inner radius\n    // 0.5: center\n    // 1.0: outer radius\n    offset?: number\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // this can be used to append extra properties to the centers,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: Datum) => ExtraProps\n}): (ArcCenter<Datum> & ExtraProps)[] =>\n    useMemo(\n        () =>\n            filterDataBySkipAngle<Datum>(data, skipAngle)\n                // compute position and extra props for each eligible datum\n                .map(datum => {\n                    const position = computeArcCenter(datum.arc, offset)\n\n                    return {\n                        ...computeExtraProps(datum),\n                        x: position.x,\n                        y: position.y,\n                        data: datum,\n                    }\n                }),\n        [data, offset, skipAngle, computeExtraProps]\n    )\n","import { createElement, useMemo } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, radiansToDegrees, useTheme } from '@nivo/core'\nimport { useInheritedColor } from '@nivo/colors'\nimport { useArcCentersTransition } from '../centers'\nimport { ArcTransitionMode } from '../arcTransitionMode'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabelsProps } from './props'\nimport { ArcLabel, ArcLabelProps } from './ArcLabel'\n\nexport type ArcLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: PropertyAccessor<Datum, string>\n    radiusOffset: ArcLabelsProps<Datum>['arcLabelsRadiusOffset']\n    skipAngle: ArcLabelsProps<Datum>['arcLabelsSkipAngle']\n    textColor: ArcLabelsProps<Datum>['arcLabelsTextColor']\n    transitionMode: ArcTransitionMode\n    component?: ArcLabelsProps<Datum>['arcLabelsComponent']\n}\n\nexport const ArcLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    transitionMode,\n    label: labelAccessor,\n    radiusOffset,\n    skipAngle,\n    textColor,\n    component = ArcLabel,\n}: ArcLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useMemo(\n        () =>\n            data.filter(datum => {\n                return (\n                    Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                    skipAngle\n                )\n            }),\n        [data, skipAngle]\n    )\n\n    const { transition, interpolate } = useArcCentersTransition<Datum>(\n        filteredData,\n        radiusOffset,\n        transitionMode\n    )\n\n    const Label: ArcLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        transform: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textColor: getTextColor(datum),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import { CompleteTheme } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLabel } from './useArcLabels'\n\nexport const drawCanvasArcLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLabel<Datum>[],\n    theme: CompleteTheme\n) => {\n    ctx.textAlign = 'center'\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.fillText(`${label.label}`, label.x, label.y)\n    })\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcCenters, ArcCenter } from '../centers'\n\nexport interface ArcLabel<Datum extends DatumWithArcAndColor> extends ArcCenter<Datum> {\n    label: string\n    textColor: string\n}\n\n/**\n * Compute arc labels, please note that the datum should\n * contain a color in order to be able to compute the label text color.\n *\n * Please see `useArcCenters` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset,\n    skipAngle,\n    label,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    skipAngle?: number\n    label: PropertyAccessor<Datum, string>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (datum: Datum) => {\n            return {\n                label: getLabel(datum),\n                textColor: getTextColor(datum),\n            }\n        },\n        [getLabel, getTextColor]\n    )\n\n    return useArcCenters<Datum, Omit<ArcLabel<Datum>, keyof ArcCenter<Datum>>>({\n        data,\n        offset,\n        skipAngle,\n        computeExtraProps,\n    })\n}\n","import { ArcLabel } from './ArcLabel'\n\nexport const ArcLabelComponent = ArcLabel\nexport * from './ArcLabelsLayer'\nexport * from './canvas'\nexport * from './props'\nexport * from './useArcLabels'\n","import { useTheme } from '@nivo/core'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from '../types'\n\nexport interface ArcLinkLabelProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    label: string\n    style: {\n        path: Interpolation<string>\n        thickness: number\n        textPosition: Interpolation<string>\n        textAnchor: Interpolation<'start' | 'end'>\n        linkColor: SpringValue<string>\n        opacity: SpringValue<number>\n        textColor: SpringValue<string>\n    }\n}\n\nexport const ArcLinkLabel = <Datum extends DatumWithArcAndColor>({\n    label,\n    style,\n}: ArcLinkLabelProps<Datum>) => {\n    const theme = useTheme()\n\n    return (\n        <animated.g opacity={style.opacity}>\n            <animated.path\n                fill=\"none\"\n                stroke={style.linkColor}\n                strokeWidth={style.thickness}\n                d={style.path}\n            />\n            <animated.text\n                transform={style.textPosition}\n                textAnchor={style.textAnchor}\n                dominantBaseline=\"central\"\n                style={{\n                    ...theme.labels.text,\n                    fill: style.textColor,\n                }}\n            >\n                {label}\n            </animated.text>\n        </animated.g>\n    )\n}\n","import { positionFromAngle } from '@nivo/core'\nimport { Arc, Point } from '../types'\nimport { getNormalizedAngle } from '../utils'\nimport { ArcLink } from './types'\n\n/**\n * Compute text anchor for a given arc.\n *\n * `computeArcLink` already computes a `side`, but when using\n * `react-spring`, you cannot have a single interpolation\n * returning several output values, so we need to compute\n * them in separate interpolations.\n */\nexport const computeArcLinkTextAnchor = (arc: Arc): 'start' | 'end' => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        return 'start'\n    }\n\n    return 'end'\n}\n\n/**\n * Compute the link of a single arc, returning its points,\n * please note that points coordinates are relative to\n * the center of the arc.\n */\nexport const computeArcLink = (\n    arc: Arc,\n    offset: number,\n    diagonalLength: number,\n    straightLength: number\n): ArcLink => {\n    const centerAngle = getNormalizedAngle(\n        arc.startAngle + (arc.endAngle - arc.startAngle) / 2 - Math.PI / 2\n    )\n    const point0: Point = positionFromAngle(centerAngle, arc.outerRadius + offset)\n    const point1: Point = positionFromAngle(centerAngle, arc.outerRadius + offset + diagonalLength)\n\n    let side: ArcLink['side']\n    let point2: Point\n    if (centerAngle < Math.PI / 2 || centerAngle > Math.PI * 1.5) {\n        side = 'after'\n        point2 = {\n            x: point1.x + straightLength,\n            y: point1.y,\n        }\n    } else {\n        side = 'before'\n        point2 = {\n            x: point1.x - straightLength,\n            y: point1.y,\n        }\n    }\n\n    return {\n        side,\n        points: [point0, point1, point2],\n    }\n}\n","import { useMemo } from 'react'\nimport { SpringValue, useTransition, to } from '@react-spring/web'\nimport { line } from 'd3-shape'\nimport { useMotionConfig, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, Point } from '../types'\nimport { useFilteredDataBySkipAngle } from '../utils'\nimport { computeArcLink, computeArcLinkTextAnchor } from './compute'\n\nconst lineGenerator = line<Point>()\n    .x(d => d.x)\n    .y(d => d.y)\n\ntype AnimatedProps = {\n    startAngle: number\n    endAngle: number\n    innerRadius: number\n    outerRadius: number\n    offset: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    linkColor: string\n    textColor: string\n    opacity: number\n}\n\nconst useTransitionPhases = <Datum extends DatumWithArcAndColor>({\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset,\n    getLinkColor,\n    getTextColor,\n}: Pick<AnimatedProps, 'offset' | 'diagonalLength' | 'straightLength' | 'textOffset'> & {\n    getLinkColor: (datum: Datum) => string\n    getTextColor: (datum: Datum) => string\n}): Record<'enter' | 'update' | 'leave', (datum: Datum) => AnimatedProps> =>\n    useMemo(\n        () => ({\n            enter: (datum: Datum) => ({\n                startAngle: datum.arc.startAngle,\n                endAngle: datum.arc.endAngle,\n                innerRadius: datum.arc.innerRadius,\n                outerRadius: datum.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(datum),\n                textColor: getTextColor(datum),\n                opacity: 0,\n            }),\n            update: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength,\n                straightLength,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 1,\n            }),\n            leave: (d: Datum) => ({\n                startAngle: d.arc.startAngle,\n                endAngle: d.arc.endAngle,\n                innerRadius: d.arc.innerRadius,\n                outerRadius: d.arc.outerRadius,\n                offset,\n                diagonalLength: 0,\n                straightLength: 0,\n                textOffset,\n                linkColor: getLinkColor(d),\n                textColor: getTextColor(d),\n                opacity: 0,\n            }),\n        }),\n        [diagonalLength, straightLength, textOffset, getLinkColor, getTextColor]\n    )\n\nconst interpolateLink = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated\n        ) => {\n            const { points } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            return lineGenerator(points)\n        }\n    )\n\nconst interpolateTextAnchor = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return computeArcLinkTextAnchor({\n                startAngle,\n                endAngle,\n                innerRadius,\n                outerRadius,\n            })\n        }\n    )\n\n/**\n * Interpolating the text position involves almost the same computation\n * as `interpolateLink`, unfortunately `react-spring` does not support\n * multiple output values from a single interpolation.\n *\n * We should revise this if `react-spring` adds this feature at some point.\n */\nconst interpolateTextPosition = (\n    startAngleValue: SpringValue<AnimatedProps['startAngle']>,\n    endAngleValue: SpringValue<AnimatedProps['endAngle']>,\n    innerRadiusValue: SpringValue<AnimatedProps['innerRadius']>,\n    outerRadiusValue: SpringValue<AnimatedProps['outerRadius']>,\n    offsetValue: SpringValue<AnimatedProps['offset']>,\n    diagonalLengthValue: SpringValue<AnimatedProps['diagonalLength']>,\n    straightLengthValue: SpringValue<AnimatedProps['straightLength']>,\n    textOffsetValue: SpringValue<AnimatedProps['textOffset']>\n) =>\n    to(\n        [\n            startAngleValue,\n            endAngleValue,\n            innerRadiusValue,\n            outerRadiusValue,\n            offsetValue,\n            diagonalLengthValue,\n            straightLengthValue,\n            textOffsetValue,\n        ],\n        (\n            startAngle,\n            endAngle,\n            innerRadius,\n            outerRadius,\n            offset,\n            diagonalLengthAnimated,\n            straightLengthAnimated,\n            textOffset\n        ) => {\n            const { points, side } = computeArcLink(\n                {\n                    startAngle,\n                    endAngle,\n                    innerRadius,\n                    outerRadius,\n                },\n                offset,\n                diagonalLengthAnimated,\n                straightLengthAnimated\n            )\n\n            const position = points[2]\n            if (side === 'before') {\n                position.x -= textOffset\n            } else {\n                position.x += textOffset\n            }\n\n            return `translate(${position.x},${position.y})`\n        }\n    )\n\n/**\n * This hook can be used to animate a group of arc link labels,\n * if you just want to compute the labels, please use `useArcLinkLabels`.\n */\nexport const useArcLinkLabelsTransition = <Datum extends DatumWithArcAndColor>({\n    data,\n    offset = 0,\n    diagonalLength,\n    straightLength,\n    skipAngle = 0,\n    textOffset,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    skipAngle?: number\n    textOffset: number\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const filteredData = useFilteredDataBySkipAngle<Datum>(data, skipAngle)\n    const transitionPhases = useTransitionPhases<Datum>({\n        offset,\n        diagonalLength,\n        straightLength,\n        textOffset,\n        getLinkColor,\n        getTextColor,\n    })\n\n    const transition = useTransition<Datum, AnimatedProps>(filteredData, {\n        keys: datum => datum.id,\n        initial: transitionPhases.update,\n        from: transitionPhases.enter,\n        enter: transitionPhases.update,\n        update: transitionPhases.update,\n        leave: transitionPhases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolateLink,\n        interpolateTextAnchor,\n        interpolateTextPosition,\n    }\n}\n","import { createElement } from 'react'\nimport { usePropertyAccessor } from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { useArcLinkLabelsTransition } from './useArcLinkLabelsTransition'\nimport { ArcLinkLabelsProps } from './props'\nimport { ArcLinkLabel, ArcLinkLabelProps } from './ArcLinkLabel'\n\nexport type ArcLinkLabelComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcLinkLabelProps<Datum>\n) => JSX.Element\n\ninterface ArcLinkLabelsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    label: ArcLinkLabelsProps<Datum>['arcLinkLabel']\n    skipAngle: ArcLinkLabelsProps<Datum>['arcLinkLabelsSkipAngle']\n    offset: ArcLinkLabelsProps<Datum>['arcLinkLabelsOffset']\n    diagonalLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsDiagonalLength']\n    straightLength: ArcLinkLabelsProps<Datum>['arcLinkLabelsStraightLength']\n    strokeWidth: ArcLinkLabelsProps<Datum>['arcLinkLabelsThickness']\n    textOffset: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextOffset']\n    textColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsTextColor']\n    linkColor: ArcLinkLabelsProps<Datum>['arcLinkLabelsColor']\n    component?: ArcLinkLabelComponent<Datum>\n}\n\nexport const ArcLinkLabelsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    label: labelAccessor,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    strokeWidth,\n    textOffset,\n    textColor,\n    linkColor,\n    component = ArcLinkLabel,\n}: ArcLinkLabelsLayerProps<Datum>) => {\n    const getLabel = usePropertyAccessor<Datum, string>(labelAccessor)\n\n    const { transition, interpolateLink, interpolateTextAnchor, interpolateTextPosition } =\n        useArcLinkLabelsTransition<Datum>({\n            data,\n            skipAngle,\n            offset,\n            diagonalLength,\n            straightLength,\n            textOffset,\n            linkColor,\n            textColor,\n        })\n\n    const Label: ArcLinkLabelComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Label, {\n                    key: datum.id,\n                    datum,\n                    label: getLabel(datum),\n                    style: {\n                        ...transitionProps,\n                        thickness: strokeWidth,\n                        path: interpolateLink(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength\n                        ),\n                        textAnchor: interpolateTextAnchor(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius\n                        ),\n                        textPosition: interpolateTextPosition(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            transitionProps.offset,\n                            transitionProps.diagonalLength,\n                            transitionProps.straightLength,\n                            transitionProps.textOffset\n                        ),\n                    },\n                })\n            })}\n        </g>\n    )\n}\n","import {\n    // @ts-ignore\n    textPropsByEngine,\n    CompleteTheme,\n} from '@nivo/core'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkLabel } from './types'\n\nexport const drawCanvasArcLinkLabels = <Datum extends DatumWithArcAndColor>(\n    ctx: CanvasRenderingContext2D,\n    labels: ArcLinkLabel<Datum>[],\n    theme: CompleteTheme,\n    strokeWidth: number\n) => {\n    ctx.textBaseline = 'middle'\n    ctx.font = `${theme.labels.text.fontSize}px ${theme.labels.text.fontFamily}`\n\n    labels.forEach(label => {\n        ctx.fillStyle = label.textColor\n        ctx.textAlign = textPropsByEngine.canvas.align[label.textAnchor]\n        ctx.fillText(`${label.label}`, label.x, label.y)\n\n        ctx.beginPath()\n        ctx.strokeStyle = label.linkColor\n        ctx.lineWidth = strokeWidth\n        label.points.forEach((point, index) => {\n            if (index === 0) ctx.moveTo(point.x, point.y)\n            else ctx.lineTo(point.x, point.y)\n        })\n        ctx.stroke()\n    })\n}\n","import { useMemo } from 'react'\nimport { radiansToDegrees } from '@nivo/core'\nimport { DatumWithArc } from '../types'\nimport { ArcLinkWithDatum } from './types'\nimport { computeArcLink } from './compute'\n\n/**\n * Compute links for an array of data containing arcs.\n *\n * This is typically used to create labels for arcs,\n * and it's used for the `useArcLinkLabels` hook.\n */\nexport const useArcLinks = <\n    Datum extends DatumWithArc,\n    ExtraProps extends Record<string, any> = Record<string, any>\n>({\n    data,\n    skipAngle = 0,\n    offset = 0.5,\n    diagonalLength,\n    straightLength,\n    computeExtraProps = () => ({} as ExtraProps),\n}: {\n    data: Datum[]\n    // arcs with a length below this (end angle - start angle in degrees)\n    // are going to be excluded, this can typically be used to avoid having\n    // overlapping labels.\n    skipAngle?: number\n    // offset from arc outer radius in pixels\n    offset?: number\n    // length of the diagonal segment of the link\n    diagonalLength: number\n    // length of the straight segment of the link\n    straightLength: number\n    // this can be used to append extra properties to the links,\n    // can be used to compute a color/label for example.\n    computeExtraProps?: (datum: ArcLinkWithDatum<Datum>) => ExtraProps\n}): (ArcLinkWithDatum<Datum> & ExtraProps)[] => {\n    const links = useMemo(\n        () =>\n            data\n                // filter out arcs with a length below `skipAngle`\n                .filter(\n                    datum =>\n                        Math.abs(radiansToDegrees(datum.arc.endAngle - datum.arc.startAngle)) >=\n                        skipAngle\n                )\n                // compute the link for each eligible arc\n                .map(datum => ({\n                    ...computeArcLink(datum.arc, offset, diagonalLength, straightLength),\n                    data: datum,\n                })),\n        [data, skipAngle, offset, diagonalLength, straightLength]\n    )\n\n    // splitting memoization of links and extra props can be more efficient,\n    // this way if only `computeExtraProps` changes, we skip links computation.\n    return useMemo(\n        () =>\n            links.map(link => ({\n                ...computeExtraProps(link),\n                ...link,\n            })),\n        [links, computeExtraProps]\n    )\n}\n","import { useCallback } from 'react'\nimport { PropertyAccessor, usePropertyAccessor, useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor } from '../types'\nimport { ArcLinkWithDatum, ArcLinkLabel } from './types'\nimport { useArcLinks } from './useArcLinks'\n\n/**\n * Compute arc link labels, please note that the datum should\n * contain a color in order to be able to compute the link/label text color.\n *\n * Please see `useArcLinks` for a more detailed explanation\n * about the parameters.\n */\nexport const useArcLinkLabels = <Datum extends DatumWithArcAndColor>({\n    data,\n    skipAngle,\n    offset,\n    diagonalLength,\n    straightLength,\n    textOffset = 0,\n    label,\n    linkColor,\n    textColor,\n}: {\n    data: Datum[]\n    skipAngle?: number\n    offset?: number\n    diagonalLength: number\n    straightLength: number\n    textOffset: number\n    label: PropertyAccessor<Datum, string>\n    linkColor: InheritedColorConfig<Datum>\n    textColor: InheritedColorConfig<Datum>\n}) => {\n    const getLabel = usePropertyAccessor<Datum, string>(label)\n\n    const theme = useTheme()\n    const getLinkColor = useInheritedColor<Datum>(linkColor, theme)\n    const getTextColor = useInheritedColor<Datum>(textColor, theme)\n\n    const computeExtraProps = useCallback(\n        (link: ArcLinkWithDatum<Datum>) => {\n            const position = {\n                x: link.points[2].x,\n                y: link.points[2].y,\n            }\n            let textAnchor: ArcLinkLabel<Datum>['textAnchor']\n            if (link.side === 'before') {\n                position.x -= textOffset\n                textAnchor = 'end'\n            } else {\n                position.x += textOffset\n                textAnchor = 'start'\n            }\n\n            return {\n                ...position,\n                label: getLabel(link.data),\n                linkColor: getLinkColor(link.data),\n                textAnchor,\n                textColor: getTextColor(link.data),\n            }\n        },\n        [getLabel, getLinkColor, getTextColor, textOffset]\n    )\n\n    return useArcLinks<Datum, Omit<ArcLinkLabel<Datum>, keyof ArcLinkWithDatum<Datum>>>({\n        data,\n        skipAngle,\n        offset,\n        diagonalLength,\n        straightLength,\n        computeExtraProps,\n    })\n}\n","import { ArcLinkLabel } from './ArcLinkLabel'\n\nexport const ArcLinkLabelComponent = ArcLinkLabel\nexport * from './ArcLinkLabelsLayer'\nexport * from './canvas'\nexport * from './compute'\nexport * from './props'\nexport * from './types'\nexport * from './useArcLinkLabels'\nexport * from './useArcLinkLabelsTransition'\nexport * from './useArcLinks'\n","import { animated, to, AnimatedProps } from '@react-spring/web'\nimport { ExtractProps } from '@nivo/core'\nimport { generateSvgArc } from './utils'\n\ntype ArcLineProps = {\n    animated: AnimatedProps<{\n        radius: number\n        startAngle: number\n        endAngle: number\n        opacity: number\n    }>\n} & ExtractProps<typeof animated.path>\n\nexport const ArcLine = ({ animated: animatedProps, ...rest }: ArcLineProps) => (\n    <animated.path\n        d={to(\n            [animatedProps.radius, animatedProps.startAngle, animatedProps.endAngle],\n            (radius, start, end) => generateSvgArc(radius, start, end)\n        )}\n        {...rest}\n    />\n)\n","import { useCallback } from 'react'\nimport * as React from 'react'\nimport { SpringValue, Interpolation, animated } from '@react-spring/web'\nimport { DatumWithArcAndColor } from './types'\n\nexport type ArcMouseHandler<Datum extends DatumWithArcAndColor> = (\n    datum: Datum,\n    event: React.MouseEvent<SVGPathElement>\n) => void\n\nexport interface ArcShapeProps<Datum extends DatumWithArcAndColor> {\n    datum: Datum\n    style: {\n        opacity: SpringValue<number>\n        color: SpringValue<string>\n        borderWidth: number\n        borderColor: SpringValue<string>\n        path: Interpolation<string>\n    }\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n}\n\n/**\n * A simple arc component to be used typically with an `ArcsLayer`.\n *\n * Please note that the component accepts `SpringValue`s instead of\n * regular values to support animations.\n */\nexport const ArcShape = <Datum extends DatumWithArcAndColor>({\n    datum,\n    style,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n}: ArcShapeProps<Datum>) => {\n    const handleClick = useCallback(event => onClick?.(datum, event), [onClick, datum])\n\n    const handleMouseEnter = useCallback(\n        event => onMouseEnter?.(datum, event),\n        [onMouseEnter, datum]\n    )\n\n    const handleMouseMove = useCallback(event => onMouseMove?.(datum, event), [onMouseMove, datum])\n\n    const handleMouseLeave = useCallback(\n        event => onMouseLeave?.(datum, event),\n        [onMouseLeave, datum]\n    )\n\n    return (\n        <animated.path\n            d={style.path}\n            opacity={style.opacity}\n            fill={datum.fill || style.color}\n            stroke={style.borderColor}\n            strokeWidth={style.borderWidth}\n            onClick={onClick ? handleClick : undefined}\n            onMouseEnter={onMouseEnter ? handleMouseEnter : undefined}\n            onMouseMove={onMouseMove ? handleMouseMove : undefined}\n            onMouseLeave={onMouseLeave ? handleMouseLeave : undefined}\n        />\n    )\n}\n","import { to, SpringValue } from '@react-spring/web'\nimport { ArcGenerator } from './types'\n\n/**\n * Directly animating paths for arcs leads to sub-optimal results\n * as the interpolation is going to be linear while we deal with polar coordinates,\n * this interpolator is going to generate proper arc transitions.\n * It should be used with the `useAnimatedArc` or `useArcsTransition` hooks.\n */\nexport const interpolateArc = (\n    startAngleValue: SpringValue<number>,\n    endAngleValue: SpringValue<number>,\n    innerRadiusValue: SpringValue<number>,\n    outerRadiusValue: SpringValue<number>,\n    arcGenerator: ArcGenerator\n) =>\n    to(\n        [startAngleValue, endAngleValue, innerRadiusValue, outerRadiusValue],\n        (startAngle, endAngle, innerRadius, outerRadius) => {\n            return arcGenerator({\n                startAngle,\n                endAngle,\n                innerRadius: Math.max(0, innerRadius),\n                outerRadius: Math.max(0, outerRadius),\n            })\n        }\n    )\n","import { useTransition } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { DatumWithArc } from './types'\nimport { ArcTransitionMode, useArcTransitionMode, TransitionExtra } from './arcTransitionMode'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a group of arcs,\n * if you want to animate a single arc,\n * please have a look at the `useAnimatedArc` hook.\n */\nexport const useArcsTransition = <Datum extends DatumWithArc, ExtraProps = unknown>(\n    data: Datum[],\n    mode: ArcTransitionMode = 'innerRadius',\n    extra?: TransitionExtra<Datum, ExtraProps>\n) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const phases = useArcTransitionMode<Datum, ExtraProps>(mode, extra)\n\n    const transition = useTransition<\n        Datum,\n        {\n            progress: number\n            startAngle: number\n            endAngle: number\n            innerRadius: number\n            outerRadius: number\n        } & ExtraProps\n    >(data, {\n        keys: datum => datum.id,\n        initial: phases.update,\n        from: phases.enter,\n        enter: phases.update,\n        update: phases.update,\n        leave: phases.leave,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        transition,\n        interpolate: interpolateArc,\n    }\n}\n","import { createElement } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { InheritedColorConfig, useInheritedColor } from '@nivo/colors'\nimport { DatumWithArcAndColor, ArcGenerator } from './types'\nimport { useArcsTransition } from './useArcsTransition'\nimport { ArcTransitionMode } from './arcTransitionMode'\nimport { ArcMouseHandler, ArcShape, ArcShapeProps } from './ArcShape'\n\nexport type ArcComponent<Datum extends DatumWithArcAndColor> = (\n    props: ArcShapeProps<Datum>\n) => JSX.Element\n\ninterface ArcsLayerProps<Datum extends DatumWithArcAndColor> {\n    center: [number, number]\n    data: Datum[]\n    arcGenerator: ArcGenerator\n    borderWidth: number\n    borderColor: InheritedColorConfig<Datum>\n    onClick?: ArcMouseHandler<Datum>\n    onMouseEnter?: ArcMouseHandler<Datum>\n    onMouseMove?: ArcMouseHandler<Datum>\n    onMouseLeave?: ArcMouseHandler<Datum>\n    transitionMode: ArcTransitionMode\n    component?: ArcComponent<Datum>\n}\n\nexport const ArcsLayer = <Datum extends DatumWithArcAndColor>({\n    center,\n    data,\n    arcGenerator,\n    borderWidth,\n    borderColor,\n    onClick,\n    onMouseEnter,\n    onMouseMove,\n    onMouseLeave,\n    transitionMode,\n    component = ArcShape,\n}: ArcsLayerProps<Datum>) => {\n    const theme = useTheme()\n    const getBorderColor = useInheritedColor<Datum>(borderColor, theme)\n\n    const { transition, interpolate } = useArcsTransition<\n        Datum,\n        {\n            opacity: number\n            color: string\n            borderColor: string\n        }\n    >(data, transitionMode, {\n        enter: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        update: datum => ({\n            opacity: 1,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n        leave: datum => ({\n            opacity: 0,\n            color: datum.color,\n            borderColor: getBorderColor(datum),\n        }),\n    })\n\n    const Arc: ArcComponent<Datum> = component\n\n    return (\n        <g transform={`translate(${center[0]},${center[1]})`}>\n            {transition((transitionProps, datum) => {\n                return createElement(Arc, {\n                    key: datum.id,\n                    datum,\n                    style: {\n                        ...transitionProps,\n                        borderWidth,\n                        path: interpolate(\n                            transitionProps.startAngle,\n                            transitionProps.endAngle,\n                            transitionProps.innerRadius,\n                            transitionProps.outerRadius,\n                            arcGenerator\n                        ),\n                    },\n                    onClick,\n                    onMouseEnter,\n                    onMouseMove,\n                    onMouseLeave,\n                })\n            })}\n        </g>\n    )\n}\n","import { positionFromAngle, degreesToRadians } from '@nivo/core'\n\n/**\n * Computes the bounding box for a circle arc.\n *\n * Assumptions:\n *   - Anywhere the arc intersects an axis will be a max or a min.\n *   - If the arc doesn't intersect an axis, then the center\n *     will be one corner of the bounding rectangle,\n *     and this is the only case when it will be.\n *   - The only other possible extreme points of the sector to consider\n *     are the endpoints of the radii.\n *\n * This script was built within the help of this answer on stackoverflow:\n *   https://stackoverflow.com/questions/1336663/2d-bounding-box-of-a-sector\n */\nexport const computeArcBoundingBox = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    // in degrees\n    startAngle: number,\n    // in degrees\n    endAngle: number,\n    includeCenter = true\n) => {\n    let points: [number, number][] = []\n\n    const p0 = positionFromAngle(degreesToRadians(startAngle), radius)\n    points.push([p0.x, p0.y])\n\n    const p1 = positionFromAngle(degreesToRadians(endAngle), radius)\n    points.push([p1.x, p1.y])\n\n    for (\n        let angle = Math.round(Math.min(startAngle, endAngle));\n        angle <= Math.round(Math.max(startAngle, endAngle));\n        angle++\n    ) {\n        if (angle % 90 === 0) {\n            const p = positionFromAngle(degreesToRadians(angle), radius)\n            points.push([p.x, p.y])\n        }\n    }\n\n    points = points.map(([x, y]) => [centerX + x, centerY + y])\n    if (includeCenter) {\n        points.push([centerX, centerY])\n    }\n\n    const xs = points.map(([x]) => x)\n    const ys = points.map(([, y]) => y)\n\n    const x0 = Math.min(...xs)\n    const x1 = Math.max(...xs)\n\n    const y0 = Math.min(...ys)\n    const y1 = Math.max(...ys)\n\n    return {\n        points,\n        x: x0,\n        y: y0,\n        width: x1 - x0,\n        height: y1 - y0,\n    }\n}\n","import { getDistance, getAngle } from '@nivo/core'\nimport { Arc } from './types'\n\n/**\n * Check if cursor is in given ring.\n */\nexport const isCursorInRing = (\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    cursorX: number,\n    cursorY: number\n) => {\n    const distance = getDistance(cursorX, cursorY, centerX, centerY)\n\n    return distance < radius && distance > innerRadius\n}\n\n/**\n * Search for an arc being under cursor.\n */\nexport const findArcUnderCursor = <A extends Arc = Arc>(\n    centerX: number,\n    centerY: number,\n    radius: number,\n    innerRadius: number,\n    arcs: A[],\n    cursorX: number,\n    cursorY: number\n): A | undefined => {\n    if (!isCursorInRing(centerX, centerY, radius, innerRadius, cursorX, cursorY)) {\n        return undefined\n    }\n\n    const cursorAngle = getAngle(cursorX, cursorY, centerX, centerY)\n\n    return arcs.find(\n        ({ startAngle, endAngle }) => cursorAngle >= startAngle && cursorAngle < endAngle\n    )\n}\n","import { useSpring } from '@react-spring/web'\nimport { useMotionConfig } from '@nivo/core'\nimport { Arc, ArcGenerator } from './types'\nimport { interpolateArc } from './interpolateArc'\n\n/**\n * This hook can be used to animate a single arc,\n * if you want to animate a group of arcs,\n * please have a look at the `useArcsTransition` hook.\n */\nexport const useAnimatedArc = (datumWithArc: { arc: Arc }, arcGenerator: ArcGenerator) => {\n    const { animate, config: springConfig } = useMotionConfig()\n\n    const animatedValues = useSpring({\n        startAngle: datumWithArc.arc.startAngle,\n        endAngle: datumWithArc.arc.endAngle,\n        innerRadius: datumWithArc.arc.innerRadius,\n        outerRadius: datumWithArc.arc.outerRadius,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return {\n        ...animatedValues,\n        path: interpolateArc(\n            animatedValues.startAngle,\n            animatedValues.endAngle,\n            animatedValues.innerRadius,\n            animatedValues.outerRadius,\n            arcGenerator\n        ),\n    }\n}\n","import { useMemo } from 'react'\nimport { arc as d3Arc } from 'd3-shape'\nimport { ArcGenerator, Arc } from './types'\n\n/**\n * Memoize a d3 arc generator.\n *\n * Please note that both inner/outer radius aren't static\n * and should come from the arc itself, while it requires\n * more props on the arcs, it provides more flexibility\n * because it's not limited to pie then but can also work\n * with charts such as sunbursts.\n */\nexport const useArcGenerator = ({\n    cornerRadius = 0,\n    padAngle = 0,\n}: {\n    cornerRadius?: number\n    padAngle?: number\n} = {}): ArcGenerator =>\n    useMemo(\n        () =>\n            d3Arc<Arc>()\n                .innerRadius(arc => arc.innerRadius)\n                .outerRadius(arc => arc.outerRadius)\n                .cornerRadius(cornerRadius)\n                .padAngle(padAngle),\n        [cornerRadius, padAngle]\n    )\n"]},"metadata":{},"sourceType":"module"}