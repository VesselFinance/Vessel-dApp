{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _d = require(\"d3\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _customHooks = _interopRequireDefault(require(\"./customHooks\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function _getRequireWildcardCache() {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n/*\nGaugeChart creates a gauge chart using D3\nThe chart is responsive and will have the same width as the \"container\"\nThe radius of the gauge depends on the width and height of the container\nIt will use whichever is smallest of width or height\nThe svg element surrounding the gauge will always be square\n\"container\" is the div where the chart should be placed\n*/\n//Constants\n\n\nvar startAngle = -Math.PI / 2; //Negative x-axis\n\nvar endAngle = Math.PI / 2; //Positive x-axis\n\nvar defaultStyle = {\n  width: \"100%\"\n}; // Props that should cause an animation on update\n\nvar animateNeedleProps = [\"marginInPercent\", \"arcPadding\", \"percent\", \"nrOfLevels\", \"animDelay\"];\n\nvar GaugeChart = function GaugeChart(props) {\n  var svg = (0, _react.useRef)({});\n  var g = (0, _react.useRef)({});\n  var width = (0, _react.useRef)({});\n  var height = (0, _react.useRef)({});\n  var doughnut = (0, _react.useRef)({});\n  var needle = (0, _react.useRef)({});\n  var outerRadius = (0, _react.useRef)({});\n  var margin = (0, _react.useRef)({}); // = {top: 20, right: 50, bottom: 50, left: 50},\n\n  var container = (0, _react.useRef)({});\n  var nbArcsToDisplay = (0, _react.useRef)(0);\n  var colorArray = (0, _react.useRef)([]);\n  var arcChart = (0, _react.useRef)((0, _d.arc)());\n  var arcData = (0, _react.useRef)([]);\n  var pieChart = (0, _react.useRef)((0, _d.pie)());\n  var prevProps = (0, _react.useRef)(props);\n  var selectedRef = (0, _react.useRef)({});\n  var initChart = (0, _react.useCallback)(function (update) {\n    var resize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var prevProps = arguments.length > 2 ? arguments[2] : undefined;\n\n    if (update) {\n      renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData);\n      return;\n    }\n\n    container.current.select(\"svg\").remove();\n    svg.current = container.current.append(\"svg\");\n    g.current = svg.current.append(\"g\"); //Used for margins\n\n    doughnut.current = g.current.append(\"g\").attr(\"class\", \"doughnut\"); //Set up the pie generator\n    //Each arc should be of equal length (or should they?)\n\n    pieChart.current.value(function (d) {\n      return d.value;\n    }) //.padAngle(arcPadding)\n    .startAngle(startAngle).endAngle(endAngle).sort(null); //Add the needle element\n\n    needle.current = g.current.append(\"g\").attr(\"class\", \"needle\");\n    renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData);\n  }, [props]);\n  (0, _react.useLayoutEffect)(function () {\n    setArcData(props, nbArcsToDisplay, colorArray, arcData);\n    container.current = (0, _d.select)(selectedRef); //Initialize chart\n\n    initChart();\n  }, [props, initChart]);\n  (0, _customHooks.default)(function () {\n    if (props.nrOfLevels || prevProps.current.arcsLength.every(function (a) {\n      return props.arcsLength.includes(a);\n    }) || prevProps.current.colors.every(function (a) {\n      return props.colors.includes(a);\n    })) {\n      setArcData(props, nbArcsToDisplay, colorArray, arcData);\n    } //Initialize chart\n    // Always redraw the chart, but potentially do not animate it\n\n\n    var resize = !animateNeedleProps.some(function (key) {\n      return prevProps.current[key] !== props[key];\n    });\n    initChart(true, resize, prevProps.current);\n    prevProps.current = props;\n  }, [props.nrOfLevels, props.arcsLength, props.colors, props.percent, props.needleColor, props.needleBaseColor]);\n  (0, _react.useEffect)(function () {\n    var handleResize = function handleResize() {\n      var resize = true;\n      renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData);\n    }; //Set up resize event listener to re-render the chart everytime the window is resized\n\n\n    window.addEventListener(\"resize\", handleResize);\n    return function () {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [props]);\n  var id = props.id,\n      style = props.style,\n      className = props.className;\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    id: id,\n    className: className,\n    style: style,\n    ref: function ref(svg) {\n      return selectedRef = svg;\n    }\n  });\n};\n\nvar _default = GaugeChart;\nexports.default = _default;\nGaugeChart.defaultProps = {\n  style: defaultStyle,\n  marginInPercent: 0.05,\n  cornerRadius: 6,\n  nrOfLevels: 3,\n  percent: 0.4,\n  arcPadding: 0.05,\n  //The padding between arcs, in rad\n  arcWidth: 0.2,\n  //The width of the arc given in percent of the radius\n  colors: [\"#00FF00\", \"#FF0000\"],\n  //Default defined colors\n  textColor: \"#fff\",\n  needleColor: \"#464A4F\",\n  needleBaseColor: \"#464A4F\",\n  hideText: false,\n  animate: true,\n  animDelay: 500,\n  formatTextValue: null,\n  fontSize: null,\n  animateDuration: 3000\n};\nGaugeChart.propTypes = {\n  id: _propTypes.default.string,\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  marginInPercent: _propTypes.default.number,\n  cornerRadius: _propTypes.default.number,\n  nrOfLevels: _propTypes.default.number,\n  percent: _propTypes.default.number,\n  arcPadding: _propTypes.default.number,\n  arcWidth: _propTypes.default.number,\n  arcsLength: _propTypes.default.array,\n  colors: _propTypes.default.array,\n  textColor: _propTypes.default.string,\n  needleColor: _propTypes.default.string,\n  needleBaseColor: _propTypes.default.string,\n  hideText: _propTypes.default.bool,\n  animate: _propTypes.default.bool,\n  formatTextValue: _propTypes.default.func,\n  fontSize: _propTypes.default.string,\n  animateDuration: _propTypes.default.number,\n  animDelay: _propTypes.default.number\n}; // This function update arc's datas when component is mounting or when one of arc's props is updated\n\nvar setArcData = function setArcData(props, nbArcsToDisplay, colorArray, arcData) {\n  // We have to make a decision about number of arcs to display\n  // If arcsLength is setted, we choose arcsLength length instead of nrOfLevels\n  nbArcsToDisplay.current = props.arcsLength ? props.arcsLength.length : props.nrOfLevels; //Check if the number of colors equals the number of levels\n  //Otherwise make an interpolation\n\n  if (nbArcsToDisplay.current === props.colors.length) {\n    colorArray.current = props.colors;\n  } else {\n    colorArray.current = getColors(props, nbArcsToDisplay);\n  } //The data that is used to create the arc\n  // Each arc could have hiw own value width arcsLength prop\n\n\n  arcData.current = [];\n\n  for (var i = 0; i < nbArcsToDisplay.current; i++) {\n    var arcDatum = {\n      value: props.arcsLength && props.arcsLength.length > i ? props.arcsLength[i] : 1,\n      color: colorArray.current[i]\n    };\n    arcData.current.push(arcDatum);\n  }\n}; //Renders the chart, should be called every time the window is resized\n\n\nvar renderChart = function renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData) {\n  updateDimensions(props, container, margin, width, height); //Set dimensions of svg element and translations\n\n  svg.current.attr(\"width\", width.current + margin.current.left + margin.current.right).attr(\"height\", height.current + margin.current.top + margin.current.bottom);\n  g.current.attr(\"transform\", \"translate(\" + margin.current.left + \", \" + margin.current.top + \")\"); //Set the radius to lesser of width or height and remove the margins\n  //Calculate the new radius\n\n  calculateRadius(width, height, outerRadius, margin, g);\n  doughnut.current.attr(\"transform\", \"translate(\" + outerRadius.current + \", \" + outerRadius.current + \")\"); //Setup the arc\n\n  arcChart.current.outerRadius(outerRadius.current).innerRadius(outerRadius.current * (1 - props.arcWidth)).cornerRadius(props.cornerRadius).padAngle(props.arcPadding); //Remove the old stuff\n\n  doughnut.current.selectAll(\".arc\").remove();\n  needle.current.selectAll(\"*\").remove();\n  g.current.selectAll(\".text-group\").remove(); //Draw the arc\n\n  var arcPaths = doughnut.current.selectAll(\".arc\").data(pieChart.current(arcData.current)).enter().append(\"g\").attr(\"class\", \"arc\");\n  arcPaths.append(\"path\").attr(\"d\", arcChart.current).style(\"fill\", function (d) {\n    return d.data.color;\n  });\n  drawNeedle(resize, prevProps, props, width, needle, container, outerRadius, g); //Translate the needle starting point to the middle of the arc\n\n  needle.current.attr(\"transform\", \"translate(\" + outerRadius.current + \", \" + outerRadius.current + \")\");\n}; //Depending on the number of levels in the chart\n//This function returns the same number of colors\n\n\nvar getColors = function getColors(props, nbArcsToDisplay) {\n  var colors = props.colors;\n  var colorScale = (0, _d.scaleLinear)().domain([1, nbArcsToDisplay.current]).range([colors[0], colors[colors.length - 1]]) //Use the first and the last color as range\n  .interpolate(_d.interpolateHsl);\n  var colorArray = [];\n\n  for (var i = 1; i <= nbArcsToDisplay.current; i++) {\n    colorArray.push(colorScale(i));\n  }\n\n  return colorArray;\n}; //If 'resize' is true then the animation does not play\n\n\nvar drawNeedle = function drawNeedle(resize, prevProps, props, width, needle, container, outerRadius, g) {\n  var percent = props.percent,\n      needleColor = props.needleColor,\n      needleBaseColor = props.needleBaseColor,\n      hideText = props.hideText,\n      animate = props.animate;\n  var needleRadius = 15 * (width.current / 500),\n      // Make the needle radius responsive\n  centerPoint = [0, -needleRadius / 2]; //Draw the triangle\n  //var pathStr = `M ${leftPoint[0]} ${leftPoint[1]} L ${topPoint[0]} ${topPoint[1]} L ${rightPoint[0]} ${rightPoint[1]}`;\n\n  var prevPercent = prevProps ? prevProps.percent : 0;\n  var pathStr = calculateRotation(prevPercent || percent, outerRadius, width);\n  needle.current.append(\"path\").attr(\"d\", pathStr).attr(\"fill\", needleColor); //Add a circle at the bottom of needle\n\n  needle.current.append(\"circle\").attr(\"cx\", centerPoint[0]).attr(\"cy\", centerPoint[1]).attr(\"r\", needleRadius).attr(\"fill\", needleBaseColor);\n\n  if (!hideText) {\n    addText(percent, props, outerRadius, width, g);\n  } //Rotate the needle\n\n\n  if (!resize && animate) {\n    needle.current.transition().delay(props.animDelay).ease(_d.easeElastic).duration(props.animateDuration).tween(\"progress\", function () {\n      var currentPercent = (0, _d.interpolateNumber)(prevPercent, percent);\n      return function (percentOfPercent) {\n        var progress = currentPercent(percentOfPercent);\n        return container.current.select(\".needle path\").attr(\"d\", calculateRotation(progress, outerRadius, width));\n      };\n    });\n  } else {\n    container.current.select(\".needle path\").attr(\"d\", calculateRotation(percent, outerRadius, width));\n  }\n};\n\nvar calculateRotation = function calculateRotation(percent, outerRadius, width) {\n  var needleLength = outerRadius.current * 0.55,\n      //TODO: Maybe it should be specified as a percentage of the arc radius?\n  needleRadius = 15 * (width.current / 500),\n      theta = percentToRad(percent),\n      centerPoint = [0, -needleRadius / 2],\n      topPoint = [centerPoint[0] - needleLength * Math.cos(theta), centerPoint[1] - needleLength * Math.sin(theta)],\n      leftPoint = [centerPoint[0] - needleRadius * Math.cos(theta - Math.PI / 2), centerPoint[1] - needleRadius * Math.sin(theta - Math.PI / 2)],\n      rightPoint = [centerPoint[0] - needleRadius * Math.cos(theta + Math.PI / 2), centerPoint[1] - needleRadius * Math.sin(theta + Math.PI / 2)];\n  var pathStr = \"M \".concat(leftPoint[0], \" \").concat(leftPoint[1], \" L \").concat(topPoint[0], \" \").concat(topPoint[1], \" L \").concat(rightPoint[0], \" \").concat(rightPoint[1]);\n  return pathStr;\n}; //Returns the angle (in rad) for the given 'percent' value where percent = 1 means 100% and is 180 degree angle\n\n\nvar percentToRad = function percentToRad(percent) {\n  return percent * Math.PI;\n}; //Adds text undeneath the graft to display which percentage is the current one\n\n\nvar addText = function addText(percentage, props, outerRadius, width, g) {\n  var formatTextValue = props.formatTextValue,\n      fontSize = props.fontSize;\n  var textPadding = 20;\n  var text = formatTextValue ? formatTextValue(floatingNumber(percentage)) : floatingNumber(percentage) + \"%\";\n  g.current.append(\"g\").attr(\"class\", \"text-group\").attr(\"transform\", \"translate(\".concat(outerRadius.current, \", \").concat(outerRadius.current / 2 + textPadding, \")\")).append(\"text\").text(text) // this computation avoid text overflow. When formatted value is over 10 characters, we should reduce font size\n  .style(\"font-size\", function () {\n    return fontSize ? fontSize : \"\".concat(width.current / 11 / (text.length > 10 ? text.length / 10 : 1), \"px\");\n  }).style(\"fill\", props.textColor).style(\"text-anchor\", \"middle\");\n};\n\nvar floatingNumber = function floatingNumber(value) {\n  var maxDigits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  return Math.round(value * 100 * Math.pow(10, maxDigits)) / Math.pow(10, maxDigits);\n};\n\nvar calculateRadius = function calculateRadius(width, height, outerRadius, margin, g) {\n  //The radius needs to be constrained by the containing div\n  //Since it is a half circle we are dealing with the height of the div\n  //Only needs to be half of the width, because the width needs to be 2 * radius\n  //For the whole arc to fit\n  //First check if it is the width or the height that is the \"limiting\" dimension\n  if (width.current < 2 * height.current) {\n    //Then the width limits the size of the chart\n    //Set the radius to the width - the horizontal margins\n    outerRadius.current = (width.current - margin.current.left - margin.current.right) / 2;\n  } else {\n    outerRadius.current = height.current - margin.current.top - margin.current.bottom;\n  }\n\n  centerGraph(width, g, outerRadius, margin);\n}; //Calculates new margins to make the graph centered\n\n\nvar centerGraph = function centerGraph(width, g, outerRadius, margin) {\n  margin.current.left = width.current / 2 - outerRadius.current + margin.current.right;\n  g.current.attr(\"transform\", \"translate(\" + margin.current.left + \", \" + margin.current.top + \")\");\n};\n\nvar updateDimensions = function updateDimensions(props, container, margin, width, height) {\n  //TODO: Fix so that the container is included in the component\n  var marginInPercent = props.marginInPercent;\n  var divDimensions = container.current.node().getBoundingClientRect(),\n      divWidth = divDimensions.width,\n      divHeight = divDimensions.height; //Set the new width and horizontal margins\n\n  margin.current.left = divWidth * marginInPercent;\n  margin.current.right = divWidth * marginInPercent;\n  width.current = divWidth - margin.current.left - margin.current.right;\n  margin.current.top = divHeight * marginInPercent;\n  margin.current.bottom = divHeight * marginInPercent;\n  height.current = width.current / 2 - margin.current.top - margin.current.bottom; //height.current = divHeight - margin.current.top - margin.current.bottom;\n};","map":{"version":3,"sources":["/home/grady/Documents/work/Vessel/siteFiles/vessel-dapp/node_modules/react-gauge-chart/dist/GaugeChart/index.js"],"names":["Object","defineProperty","exports","value","default","_react","_interopRequireWildcard","require","_d","_propTypes","_interopRequireDefault","_customHooks","obj","__esModule","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","startAngle","Math","PI","endAngle","defaultStyle","width","animateNeedleProps","GaugeChart","props","svg","useRef","g","height","doughnut","needle","outerRadius","margin","container","nbArcsToDisplay","colorArray","arcChart","arc","arcData","pieChart","pie","prevProps","selectedRef","initChart","useCallback","update","resize","arguments","length","undefined","renderChart","current","select","remove","append","attr","d","sort","useLayoutEffect","setArcData","nrOfLevels","arcsLength","every","a","includes","colors","some","percent","needleColor","needleBaseColor","useEffect","handleResize","window","addEventListener","removeEventListener","id","style","className","createElement","ref","_default","defaultProps","marginInPercent","cornerRadius","arcPadding","arcWidth","textColor","hideText","animate","animDelay","formatTextValue","fontSize","animateDuration","propTypes","string","object","number","array","bool","func","getColors","i","arcDatum","color","push","updateDimensions","left","right","top","bottom","calculateRadius","innerRadius","padAngle","selectAll","arcPaths","data","enter","drawNeedle","colorScale","scaleLinear","domain","range","interpolate","interpolateHsl","needleRadius","centerPoint","prevPercent","pathStr","calculateRotation","addText","transition","delay","ease","easeElastic","duration","tween","currentPercent","interpolateNumber","percentOfPercent","progress","needleLength","theta","percentToRad","topPoint","cos","sin","leftPoint","rightPoint","concat","percentage","textPadding","text","floatingNumber","maxDigits","round","pow","centerGraph","divDimensions","node","getBoundingClientRect","divWidth","divHeight"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _d = require(\"d3\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _customHooks = _interopRequireDefault(require(\"./customHooks\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/*\nGaugeChart creates a gauge chart using D3\nThe chart is responsive and will have the same width as the \"container\"\nThe radius of the gauge depends on the width and height of the container\nIt will use whichever is smallest of width or height\nThe svg element surrounding the gauge will always be square\n\"container\" is the div where the chart should be placed\n*/\n//Constants\nvar startAngle = -Math.PI / 2; //Negative x-axis\n\nvar endAngle = Math.PI / 2; //Positive x-axis\n\nvar defaultStyle = {\n  width: \"100%\"\n}; // Props that should cause an animation on update\n\nvar animateNeedleProps = [\"marginInPercent\", \"arcPadding\", \"percent\", \"nrOfLevels\", \"animDelay\"];\n\nvar GaugeChart = function GaugeChart(props) {\n  var svg = (0, _react.useRef)({});\n  var g = (0, _react.useRef)({});\n  var width = (0, _react.useRef)({});\n  var height = (0, _react.useRef)({});\n  var doughnut = (0, _react.useRef)({});\n  var needle = (0, _react.useRef)({});\n  var outerRadius = (0, _react.useRef)({});\n  var margin = (0, _react.useRef)({}); // = {top: 20, right: 50, bottom: 50, left: 50},\n\n  var container = (0, _react.useRef)({});\n  var nbArcsToDisplay = (0, _react.useRef)(0);\n  var colorArray = (0, _react.useRef)([]);\n  var arcChart = (0, _react.useRef)((0, _d.arc)());\n  var arcData = (0, _react.useRef)([]);\n  var pieChart = (0, _react.useRef)((0, _d.pie)());\n  var prevProps = (0, _react.useRef)(props);\n  var selectedRef = (0, _react.useRef)({});\n  var initChart = (0, _react.useCallback)(function (update) {\n    var resize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var prevProps = arguments.length > 2 ? arguments[2] : undefined;\n\n    if (update) {\n      renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData);\n      return;\n    }\n\n    container.current.select(\"svg\").remove();\n    svg.current = container.current.append(\"svg\");\n    g.current = svg.current.append(\"g\"); //Used for margins\n\n    doughnut.current = g.current.append(\"g\").attr(\"class\", \"doughnut\"); //Set up the pie generator\n    //Each arc should be of equal length (or should they?)\n\n    pieChart.current.value(function (d) {\n      return d.value;\n    }) //.padAngle(arcPadding)\n    .startAngle(startAngle).endAngle(endAngle).sort(null); //Add the needle element\n\n    needle.current = g.current.append(\"g\").attr(\"class\", \"needle\");\n    renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData);\n  }, [props]);\n  (0, _react.useLayoutEffect)(function () {\n    setArcData(props, nbArcsToDisplay, colorArray, arcData);\n    container.current = (0, _d.select)(selectedRef); //Initialize chart\n\n    initChart();\n  }, [props, initChart]);\n  (0, _customHooks.default)(function () {\n    if (props.nrOfLevels || prevProps.current.arcsLength.every(function (a) {\n      return props.arcsLength.includes(a);\n    }) || prevProps.current.colors.every(function (a) {\n      return props.colors.includes(a);\n    })) {\n      setArcData(props, nbArcsToDisplay, colorArray, arcData);\n    } //Initialize chart\n    // Always redraw the chart, but potentially do not animate it\n\n\n    var resize = !animateNeedleProps.some(function (key) {\n      return prevProps.current[key] !== props[key];\n    });\n    initChart(true, resize, prevProps.current);\n    prevProps.current = props;\n  }, [props.nrOfLevels, props.arcsLength, props.colors, props.percent, props.needleColor, props.needleBaseColor]);\n  (0, _react.useEffect)(function () {\n    var handleResize = function handleResize() {\n      var resize = true;\n      renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData);\n    }; //Set up resize event listener to re-render the chart everytime the window is resized\n\n\n    window.addEventListener(\"resize\", handleResize);\n    return function () {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [props]);\n  var id = props.id,\n      style = props.style,\n      className = props.className;\n  return /*#__PURE__*/_react.default.createElement(\"div\", {\n    id: id,\n    className: className,\n    style: style,\n    ref: function ref(svg) {\n      return selectedRef = svg;\n    }\n  });\n};\n\nvar _default = GaugeChart;\nexports.default = _default;\nGaugeChart.defaultProps = {\n  style: defaultStyle,\n  marginInPercent: 0.05,\n  cornerRadius: 6,\n  nrOfLevels: 3,\n  percent: 0.4,\n  arcPadding: 0.05,\n  //The padding between arcs, in rad\n  arcWidth: 0.2,\n  //The width of the arc given in percent of the radius\n  colors: [\"#00FF00\", \"#FF0000\"],\n  //Default defined colors\n  textColor: \"#fff\",\n  needleColor: \"#464A4F\",\n  needleBaseColor: \"#464A4F\",\n  hideText: false,\n  animate: true,\n  animDelay: 500,\n  formatTextValue: null,\n  fontSize: null,\n  animateDuration: 3000\n};\nGaugeChart.propTypes = {\n  id: _propTypes.default.string,\n  className: _propTypes.default.string,\n  style: _propTypes.default.object,\n  marginInPercent: _propTypes.default.number,\n  cornerRadius: _propTypes.default.number,\n  nrOfLevels: _propTypes.default.number,\n  percent: _propTypes.default.number,\n  arcPadding: _propTypes.default.number,\n  arcWidth: _propTypes.default.number,\n  arcsLength: _propTypes.default.array,\n  colors: _propTypes.default.array,\n  textColor: _propTypes.default.string,\n  needleColor: _propTypes.default.string,\n  needleBaseColor: _propTypes.default.string,\n  hideText: _propTypes.default.bool,\n  animate: _propTypes.default.bool,\n  formatTextValue: _propTypes.default.func,\n  fontSize: _propTypes.default.string,\n  animateDuration: _propTypes.default.number,\n  animDelay: _propTypes.default.number\n}; // This function update arc's datas when component is mounting or when one of arc's props is updated\n\nvar setArcData = function setArcData(props, nbArcsToDisplay, colorArray, arcData) {\n  // We have to make a decision about number of arcs to display\n  // If arcsLength is setted, we choose arcsLength length instead of nrOfLevels\n  nbArcsToDisplay.current = props.arcsLength ? props.arcsLength.length : props.nrOfLevels; //Check if the number of colors equals the number of levels\n  //Otherwise make an interpolation\n\n  if (nbArcsToDisplay.current === props.colors.length) {\n    colorArray.current = props.colors;\n  } else {\n    colorArray.current = getColors(props, nbArcsToDisplay);\n  } //The data that is used to create the arc\n  // Each arc could have hiw own value width arcsLength prop\n\n\n  arcData.current = [];\n\n  for (var i = 0; i < nbArcsToDisplay.current; i++) {\n    var arcDatum = {\n      value: props.arcsLength && props.arcsLength.length > i ? props.arcsLength[i] : 1,\n      color: colorArray.current[i]\n    };\n    arcData.current.push(arcDatum);\n  }\n}; //Renders the chart, should be called every time the window is resized\n\n\nvar renderChart = function renderChart(resize, prevProps, width, margin, height, outerRadius, g, doughnut, arcChart, needle, pieChart, svg, props, container, arcData) {\n  updateDimensions(props, container, margin, width, height); //Set dimensions of svg element and translations\n\n  svg.current.attr(\"width\", width.current + margin.current.left + margin.current.right).attr(\"height\", height.current + margin.current.top + margin.current.bottom);\n  g.current.attr(\"transform\", \"translate(\" + margin.current.left + \", \" + margin.current.top + \")\"); //Set the radius to lesser of width or height and remove the margins\n  //Calculate the new radius\n\n  calculateRadius(width, height, outerRadius, margin, g);\n  doughnut.current.attr(\"transform\", \"translate(\" + outerRadius.current + \", \" + outerRadius.current + \")\"); //Setup the arc\n\n  arcChart.current.outerRadius(outerRadius.current).innerRadius(outerRadius.current * (1 - props.arcWidth)).cornerRadius(props.cornerRadius).padAngle(props.arcPadding); //Remove the old stuff\n\n  doughnut.current.selectAll(\".arc\").remove();\n  needle.current.selectAll(\"*\").remove();\n  g.current.selectAll(\".text-group\").remove(); //Draw the arc\n\n  var arcPaths = doughnut.current.selectAll(\".arc\").data(pieChart.current(arcData.current)).enter().append(\"g\").attr(\"class\", \"arc\");\n  arcPaths.append(\"path\").attr(\"d\", arcChart.current).style(\"fill\", function (d) {\n    return d.data.color;\n  });\n  drawNeedle(resize, prevProps, props, width, needle, container, outerRadius, g); //Translate the needle starting point to the middle of the arc\n\n  needle.current.attr(\"transform\", \"translate(\" + outerRadius.current + \", \" + outerRadius.current + \")\");\n}; //Depending on the number of levels in the chart\n//This function returns the same number of colors\n\n\nvar getColors = function getColors(props, nbArcsToDisplay) {\n  var colors = props.colors;\n  var colorScale = (0, _d.scaleLinear)().domain([1, nbArcsToDisplay.current]).range([colors[0], colors[colors.length - 1]]) //Use the first and the last color as range\n  .interpolate(_d.interpolateHsl);\n  var colorArray = [];\n\n  for (var i = 1; i <= nbArcsToDisplay.current; i++) {\n    colorArray.push(colorScale(i));\n  }\n\n  return colorArray;\n}; //If 'resize' is true then the animation does not play\n\n\nvar drawNeedle = function drawNeedle(resize, prevProps, props, width, needle, container, outerRadius, g) {\n  var percent = props.percent,\n      needleColor = props.needleColor,\n      needleBaseColor = props.needleBaseColor,\n      hideText = props.hideText,\n      animate = props.animate;\n  var needleRadius = 15 * (width.current / 500),\n      // Make the needle radius responsive\n  centerPoint = [0, -needleRadius / 2]; //Draw the triangle\n  //var pathStr = `M ${leftPoint[0]} ${leftPoint[1]} L ${topPoint[0]} ${topPoint[1]} L ${rightPoint[0]} ${rightPoint[1]}`;\n\n  var prevPercent = prevProps ? prevProps.percent : 0;\n  var pathStr = calculateRotation(prevPercent || percent, outerRadius, width);\n  needle.current.append(\"path\").attr(\"d\", pathStr).attr(\"fill\", needleColor); //Add a circle at the bottom of needle\n\n  needle.current.append(\"circle\").attr(\"cx\", centerPoint[0]).attr(\"cy\", centerPoint[1]).attr(\"r\", needleRadius).attr(\"fill\", needleBaseColor);\n\n  if (!hideText) {\n    addText(percent, props, outerRadius, width, g);\n  } //Rotate the needle\n\n\n  if (!resize && animate) {\n    needle.current.transition().delay(props.animDelay).ease(_d.easeElastic).duration(props.animateDuration).tween(\"progress\", function () {\n      var currentPercent = (0, _d.interpolateNumber)(prevPercent, percent);\n      return function (percentOfPercent) {\n        var progress = currentPercent(percentOfPercent);\n        return container.current.select(\".needle path\").attr(\"d\", calculateRotation(progress, outerRadius, width));\n      };\n    });\n  } else {\n    container.current.select(\".needle path\").attr(\"d\", calculateRotation(percent, outerRadius, width));\n  }\n};\n\nvar calculateRotation = function calculateRotation(percent, outerRadius, width) {\n  var needleLength = outerRadius.current * 0.55,\n      //TODO: Maybe it should be specified as a percentage of the arc radius?\n  needleRadius = 15 * (width.current / 500),\n      theta = percentToRad(percent),\n      centerPoint = [0, -needleRadius / 2],\n      topPoint = [centerPoint[0] - needleLength * Math.cos(theta), centerPoint[1] - needleLength * Math.sin(theta)],\n      leftPoint = [centerPoint[0] - needleRadius * Math.cos(theta - Math.PI / 2), centerPoint[1] - needleRadius * Math.sin(theta - Math.PI / 2)],\n      rightPoint = [centerPoint[0] - needleRadius * Math.cos(theta + Math.PI / 2), centerPoint[1] - needleRadius * Math.sin(theta + Math.PI / 2)];\n  var pathStr = \"M \".concat(leftPoint[0], \" \").concat(leftPoint[1], \" L \").concat(topPoint[0], \" \").concat(topPoint[1], \" L \").concat(rightPoint[0], \" \").concat(rightPoint[1]);\n  return pathStr;\n}; //Returns the angle (in rad) for the given 'percent' value where percent = 1 means 100% and is 180 degree angle\n\n\nvar percentToRad = function percentToRad(percent) {\n  return percent * Math.PI;\n}; //Adds text undeneath the graft to display which percentage is the current one\n\n\nvar addText = function addText(percentage, props, outerRadius, width, g) {\n  var formatTextValue = props.formatTextValue,\n      fontSize = props.fontSize;\n  var textPadding = 20;\n  var text = formatTextValue ? formatTextValue(floatingNumber(percentage)) : floatingNumber(percentage) + \"%\";\n  g.current.append(\"g\").attr(\"class\", \"text-group\").attr(\"transform\", \"translate(\".concat(outerRadius.current, \", \").concat(outerRadius.current / 2 + textPadding, \")\")).append(\"text\").text(text) // this computation avoid text overflow. When formatted value is over 10 characters, we should reduce font size\n  .style(\"font-size\", function () {\n    return fontSize ? fontSize : \"\".concat(width.current / 11 / (text.length > 10 ? text.length / 10 : 1), \"px\");\n  }).style(\"fill\", props.textColor).style(\"text-anchor\", \"middle\");\n};\n\nvar floatingNumber = function floatingNumber(value) {\n  var maxDigits = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n  return Math.round(value * 100 * Math.pow(10, maxDigits)) / Math.pow(10, maxDigits);\n};\n\nvar calculateRadius = function calculateRadius(width, height, outerRadius, margin, g) {\n  //The radius needs to be constrained by the containing div\n  //Since it is a half circle we are dealing with the height of the div\n  //Only needs to be half of the width, because the width needs to be 2 * radius\n  //For the whole arc to fit\n  //First check if it is the width or the height that is the \"limiting\" dimension\n  if (width.current < 2 * height.current) {\n    //Then the width limits the size of the chart\n    //Set the radius to the width - the horizontal margins\n    outerRadius.current = (width.current - margin.current.left - margin.current.right) / 2;\n  } else {\n    outerRadius.current = height.current - margin.current.top - margin.current.bottom;\n  }\n\n  centerGraph(width, g, outerRadius, margin);\n}; //Calculates new margins to make the graph centered\n\n\nvar centerGraph = function centerGraph(width, g, outerRadius, margin) {\n  margin.current.left = width.current / 2 - outerRadius.current + margin.current.right;\n  g.current.attr(\"transform\", \"translate(\" + margin.current.left + \", \" + margin.current.top + \")\");\n};\n\nvar updateDimensions = function updateDimensions(props, container, margin, width, height) {\n  //TODO: Fix so that the container is included in the component\n  var marginInPercent = props.marginInPercent;\n  var divDimensions = container.current.node().getBoundingClientRect(),\n      divWidth = divDimensions.width,\n      divHeight = divDimensions.height; //Set the new width and horizontal margins\n\n  margin.current.left = divWidth * marginInPercent;\n  margin.current.right = divWidth * marginInPercent;\n  width.current = divWidth - margin.current.left - margin.current.right;\n  margin.current.top = divHeight * marginInPercent;\n  margin.current.bottom = divHeight * marginInPercent;\n  height.current = width.current / 2 - margin.current.top - margin.current.bottom; //height.current = divHeight - margin.current.top - margin.current.bottom;\n};"]},"metadata":{},"sourceType":"script"}