{"ast":null,"code":"import { memo as t, useRef as o, useMemo as i, createContext as n, useState as r, useCallback as e, useContext as l } from \"react\";\nimport { useSpring as a, animated as c } from \"@react-spring/web\";\nimport { useTheme as s, useMotionConfig as h, useMeasure as u, useValueFormatter as d } from \"@nivo/core\";\nimport { jsx as y, jsxs as p, Fragment as f } from \"react/jsx-runtime\";\n\nfunction v() {\n  return v = Object.assign || function (t) {\n    for (var o = 1; o < arguments.length; o++) {\n      var i = arguments[o];\n\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n\n    return t;\n  }, v.apply(this, arguments);\n}\n\nvar x = {\n  pointerEvents: \"none\",\n  position: \"absolute\",\n  zIndex: 10,\n  top: 0,\n  left: 0\n},\n    m = function (t, o) {\n  return \"translate(\" + t + \"px, \" + o + \"px)\";\n},\n    g = t(function (t) {\n  var i,\n      n = t.position,\n      r = t.anchor,\n      e = t.children,\n      l = s(),\n      d = h(),\n      p = d.animate,\n      f = d.config,\n      g = u(),\n      b = g[0],\n      w = g[1],\n      T = o(!1),\n      C = void 0,\n      E = !1,\n      P = w.width > 0 && w.height > 0,\n      N = Math.round(n[0]),\n      V = Math.round(n[1]);\n  P && (\"top\" === r ? (N -= w.width / 2, V -= w.height + 14) : \"right\" === r ? (N += 14, V -= w.height / 2) : \"bottom\" === r ? (N -= w.width / 2, V += 14) : \"left\" === r ? (N -= w.width + 14, V -= w.height / 2) : \"center\" === r && (N -= w.width / 2, V -= w.height / 2), C = {\n    transform: m(N, V)\n  }, T.current || (E = !0), T.current = [N, V]);\n  var j = a({\n    to: C,\n    config: f,\n    immediate: !p || E\n  }),\n      O = v({}, x, l.tooltip, {\n    transform: null != (i = j.transform) ? i : m(N, V)\n  });\n  return y(c.div, {\n    ref: b,\n    style: O,\n    children: e\n  });\n});\n\ng.displayName = \"TooltipWrapper\";\nvar b = t(function (t) {\n  var o = t.size,\n      i = void 0 === o ? 12 : o,\n      n = t.color,\n      r = t.style;\n  return y(\"span\", {\n    style: v({\n      display: \"block\",\n      width: i,\n      height: i,\n      background: n\n    }, void 0 === r ? {} : r)\n  });\n}),\n    w = t(function (t) {\n  var o,\n      i = t.id,\n      n = t.value,\n      r = t.format,\n      e = t.enableChip,\n      l = void 0 !== e && e,\n      a = t.color,\n      c = t.renderContent,\n      h = s(),\n      u = d(r);\n  if (\"function\" == typeof c) o = c();else {\n    var f = n;\n    void 0 !== u && void 0 !== f && (f = u(f)), o = p(\"div\", {\n      style: h.tooltip.basic,\n      children: [l && y(b, {\n        color: a,\n        style: h.tooltip.chip\n      }), void 0 !== f ? p(\"span\", {\n        children: [i, \": \", y(\"strong\", {\n          children: \"\" + f\n        })]\n      }) : i]\n    });\n  }\n  return y(\"div\", {\n    style: h.tooltip.container,\n    children: o\n  });\n}),\n    T = {\n  width: \"100%\",\n  borderCollapse: \"collapse\"\n},\n    C = t(function (t) {\n  var o,\n      i = t.title,\n      n = t.rows,\n      r = void 0 === n ? [] : n,\n      e = t.renderContent,\n      l = s();\n  return r.length ? (o = \"function\" == typeof e ? e() : p(\"div\", {\n    children: [i && i, y(\"table\", {\n      style: v({}, T, l.tooltip.table),\n      children: y(\"tbody\", {\n        children: r.map(function (t, o) {\n          return y(\"tr\", {\n            children: t.map(function (t, o) {\n              return y(\"td\", {\n                style: l.tooltip.tableCell,\n                children: t\n              }, o);\n            })\n          }, o);\n        })\n      })\n    })]\n  }), y(\"div\", {\n    style: l.tooltip.container,\n    children: o\n  })) : null;\n});\nC.displayName = \"TableTooltip\";\nvar E = t(function (t) {\n  var o = t.x0,\n      n = t.x1,\n      r = t.y0,\n      e = t.y1,\n      l = s(),\n      u = h(),\n      d = u.animate,\n      p = u.config,\n      f = i(function () {\n    return v({}, l.crosshair.line, {\n      pointerEvents: \"none\"\n    });\n  }, [l.crosshair.line]),\n      x = a({\n    x1: o,\n    x2: n,\n    y1: r,\n    y2: e,\n    config: p,\n    immediate: !d\n  });\n  return y(c.line, v({}, x, {\n    fill: \"none\",\n    style: f\n  }));\n});\nE.displayName = \"CrosshairLine\";\nvar P = t(function (t) {\n  var o,\n      i,\n      n = t.width,\n      r = t.height,\n      e = t.type,\n      l = t.x,\n      a = t.y;\n  return \"cross\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: r\n  }, i = {\n    x0: 0,\n    x1: n,\n    y0: a,\n    y1: a\n  }) : \"top-left\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: a\n  }, i = {\n    x0: 0,\n    x1: l,\n    y0: a,\n    y1: a\n  }) : \"top\" === e ? o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: a\n  } : \"top-right\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: a\n  }, i = {\n    x0: l,\n    x1: n,\n    y0: a,\n    y1: a\n  }) : \"right\" === e ? i = {\n    x0: l,\n    x1: n,\n    y0: a,\n    y1: a\n  } : \"bottom-right\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: a,\n    y1: r\n  }, i = {\n    x0: l,\n    x1: n,\n    y0: a,\n    y1: a\n  }) : \"bottom\" === e ? o = {\n    x0: l,\n    x1: l,\n    y0: a,\n    y1: r\n  } : \"bottom-left\" === e ? (o = {\n    x0: l,\n    x1: l,\n    y0: a,\n    y1: r\n  }, i = {\n    x0: 0,\n    x1: l,\n    y0: a,\n    y1: a\n  }) : \"left\" === e ? i = {\n    x0: 0,\n    x1: l,\n    y0: a,\n    y1: a\n  } : \"x\" === e ? o = {\n    x0: l,\n    x1: l,\n    y0: 0,\n    y1: r\n  } : \"y\" === e && (i = {\n    x0: 0,\n    x1: n,\n    y0: a,\n    y1: a\n  }), p(f, {\n    children: [o && y(E, {\n      x0: o.x0,\n      x1: o.x1,\n      y0: o.y0,\n      y1: o.y1\n    }), i && y(E, {\n      x0: i.x0,\n      x1: i.x1,\n      y0: i.y0,\n      y1: i.y1\n    })]\n  });\n});\nP.displayName = \"Crosshair\";\n\nvar N = n({\n  showTooltipAt: function () {},\n  showTooltipFromEvent: function () {},\n  hideTooltip: function () {}\n}),\n    V = {\n  isVisible: !1,\n  position: [null, null],\n  content: null,\n  anchor: null\n},\n    j = n(V),\n    O = function (t) {\n  var o = r(V),\n      n = o[0],\n      l = o[1],\n      a = e(function (t, o, i) {\n    var n = o[0],\n        r = o[1];\n    void 0 === i && (i = \"top\"), l({\n      isVisible: !0,\n      position: [n, r],\n      anchor: i,\n      content: t\n    });\n  }, [l]),\n      c = e(function (o, i, n) {\n    void 0 === n && (n = \"top\");\n    var r = t.current.getBoundingClientRect(),\n        e = i.clientX - r.left,\n        a = i.clientY - r.top;\n    \"left\" !== n && \"right\" !== n || (n = e < r.width / 2 ? \"right\" : \"left\"), l({\n      isVisible: !0,\n      position: [e, a],\n      anchor: n,\n      content: o\n    });\n  }, [t, l]),\n      s = e(function () {\n    l(V);\n  }, [l]);\n  return {\n    actions: i(function () {\n      return {\n        showTooltipAt: a,\n        showTooltipFromEvent: c,\n        hideTooltip: s\n      };\n    }, [a, c, s]),\n    state: n\n  };\n},\n    k = function () {\n  var t = l(N);\n  if (void 0 === t) throw new Error(\"useTooltip must be used within a TooltipProvider\");\n  return t;\n},\n    z = function () {\n  var t = l(j);\n  if (void 0 === t) throw new Error(\"useTooltipState must be used within a TooltipProvider\");\n  return t;\n},\n    A = function (t) {\n  return t.isVisible;\n},\n    F = function () {\n  var t = z();\n  return A(t) ? y(g, {\n    position: t.position,\n    anchor: t.anchor,\n    children: t.content\n  }) : null;\n},\n    M = function (t) {\n  var o = t.container,\n      i = t.children,\n      n = O(o),\n      r = n.actions,\n      e = n.state;\n  return y(N.Provider, {\n    value: r,\n    children: y(j.Provider, {\n      value: e,\n      children: i\n    })\n  });\n};\n\nexport { w as BasicTooltip, b as Chip, P as Crosshair, C as TableTooltip, F as Tooltip, N as TooltipActionsContext, M as TooltipProvider, j as TooltipStateContext, g as TooltipWrapper, V as hiddenTooltipState, A as isVisibleTooltipState, k as useTooltip, O as useTooltipHandlers, z as useTooltipState };","map":{"version":3,"sources":["../src/TooltipWrapper.tsx","../src/Chip.tsx","../src/BasicTooltip.tsx","../src/TableTooltip.tsx","../src/CrosshairLine.tsx","../src/Crosshair.tsx","../src/context.ts","../src/hooks.ts","../src/Tooltip.tsx","../src/TooltipProvider.tsx"],"names":["tooltipStyle","pointerEvents","position","zIndex","top","left","translate","x","y","TooltipWrapper","memo","anchor","children","theme","useTheme","animate","config","springConfig","useMotionConfig","measureRef","bounds","useMeasure","previousPosition","useRef","to","undefined","immediate","hasDimension","width","height","Math","round","transform","current","animatedProps","useSpring","style","tooltip","_jsx","animated","div","ref","displayName","Chip","size","color","display","background","BasicTooltip","id","value","_value","format","enableChip","renderContent","formatValue","useValueFormatter","content","_jsxs","basic","chip","container","tableStyle","borderCollapse","TableTooltip","title","rows","length","table","map","row","i","column","j","tableCell","CrosshairLine","x0","x1","y0","y1","useMemo","crosshair","line","x2","y2","fill","Crosshair","type","xLine","yLine","showTooltipAt","showTooltipFromEvent","hideTooltip","TooltipActionsContext","createContext","hiddenTooltipState","isVisible","TooltipStateContext","useTooltipHandlers","state","setState","useState","useCallback","event","getBoundingClientRect","clientX","clientY","actions","useTooltip","context","useContext","Error","useTooltipState","isVisibleTooltipState","Tooltip","TooltipProvider","Provider"],"mappings":"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","sourcesContent":["import { memo, useRef, PropsWithChildren, CSSProperties } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport {\n    useTheme,\n    useMotionConfig,\n    // @ts-ignore\n    useMeasure,\n} from '@nivo/core'\nimport { TooltipStateContextDataVisible } from './context'\n\nconst TOOLTIP_OFFSET = 14\n\nconst tooltipStyle = {\n    pointerEvents: 'none' as CSSProperties['pointerEvents'],\n    position: 'absolute' as CSSProperties['position'],\n    zIndex: 10,\n    top: 0,\n    left: 0,\n}\n\nconst translate = (x: number, y: number) => `translate(${x}px, ${y}px)`\n\ninterface TooltipWrapperProps {\n    position: TooltipStateContextDataVisible['position']\n    anchor: TooltipStateContextDataVisible['anchor']\n}\n\nexport const TooltipWrapper = memo<PropsWithChildren<TooltipWrapperProps>>(\n    ({ position, anchor, children }) => {\n        const theme = useTheme()\n        const { animate, config: springConfig } = useMotionConfig()\n        const [measureRef, bounds] = useMeasure()\n        const previousPosition = useRef<[number, number] | false>(false)\n\n        let to = undefined\n        let immediate = false\n        const hasDimension = bounds.width > 0 && bounds.height > 0\n\n        let x = Math.round(position[0])\n        let y = Math.round(position[1])\n\n        if (hasDimension) {\n            if (anchor === 'top') {\n                x -= bounds.width / 2\n                y -= bounds.height + TOOLTIP_OFFSET\n            } else if (anchor === 'right') {\n                x += TOOLTIP_OFFSET\n                y -= bounds.height / 2\n            } else if (anchor === 'bottom') {\n                x -= bounds.width / 2\n                y += TOOLTIP_OFFSET\n            } else if (anchor === 'left') {\n                x -= bounds.width + TOOLTIP_OFFSET\n                y -= bounds.height / 2\n            } else if (anchor === 'center') {\n                x -= bounds.width / 2\n                y -= bounds.height / 2\n            }\n\n            to = {\n                transform: translate(x, y),\n            }\n\n            if (!previousPosition.current) {\n                immediate = true\n            }\n\n            previousPosition.current = [x, y]\n        }\n\n        const animatedProps = useSpring<{\n            transform: string\n        }>({\n            to,\n            config: springConfig,\n            immediate: !animate || immediate,\n        })\n\n        const style = {\n            ...tooltipStyle,\n            ...theme.tooltip,\n            transform: animatedProps.transform ?? translate(x, y),\n        }\n\n        return (\n            <animated.div ref={measureRef} style={style}>\n                {children}\n            </animated.div>\n        )\n    }\n)\n\nTooltipWrapper.displayName = 'TooltipWrapper'\n","import { CSSProperties, memo } from 'react'\n\ninterface ChipProps {\n    size?: number\n    color: string\n    style?: CSSProperties\n}\n\nexport const Chip = memo<ChipProps>(({ size = 12, color, style = {} }) => (\n    <span style={{ display: 'block', width: size, height: size, background: color, ...style }} />\n))\n","import { memo, ReactNode } from 'react'\nimport { useTheme, ValueFormat, useValueFormatter } from '@nivo/core'\nimport { Chip } from './Chip'\n\nexport interface BasicTooltipProps {\n    id: ReactNode\n    value?: number | string | Date\n    format?: ValueFormat<number | string | Date>\n    color?: string\n    enableChip?: boolean\n    /**\n     * @deprecated This should be replaced by custom tooltip components.\n     */\n    renderContent?: () => JSX.Element\n}\n\nexport const BasicTooltip = memo<BasicTooltipProps>(\n    ({ id, value: _value, format, enableChip = false, color, renderContent }) => {\n        const theme = useTheme()\n        const formatValue = useValueFormatter<number | string | Date>(format)\n\n        let content: JSX.Element\n        if (typeof renderContent === 'function') {\n            content = renderContent()\n        } else {\n            let value = _value\n            if (formatValue !== undefined && value !== undefined) {\n                value = formatValue(value)\n            }\n            content = (\n                <div style={theme.tooltip.basic}>\n                    {enableChip && <Chip color={color!} style={theme.tooltip.chip} />}\n                    {value !== undefined ? (\n                        <span>\n                            {id}: <strong>{`${value}`}</strong>\n                        </span>\n                    ) : (\n                        id\n                    )}\n                </div>\n            )\n        }\n\n        return <div style={theme.tooltip.container}>{content}</div>\n    }\n)\n","import { CSSProperties, memo, ReactNode } from 'react'\nimport { useTheme } from '@nivo/core'\n\nconst tableStyle = {\n    width: '100%',\n    borderCollapse: 'collapse' as CSSProperties['borderCollapse'],\n}\n\ninterface TableTooltipProps {\n    title?: ReactNode\n    renderContent?: () => JSX.Element\n    rows?: ReactNode[][]\n}\n\nexport const TableTooltip = memo(({ title, rows = [], renderContent }: TableTooltipProps) => {\n    const theme = useTheme()\n\n    if (!rows.length) return null\n\n    let content\n    if (typeof renderContent === 'function') {\n        content = renderContent()\n    } else {\n        content = (\n            <div>\n                {title && title}\n                <table style={{ ...tableStyle, ...theme.tooltip.table }}>\n                    <tbody>\n                        {rows.map((row, i) => (\n                            <tr key={i}>\n                                {row.map((column, j) => (\n                                    <td key={j} style={theme.tooltip.tableCell}>\n                                        {column}\n                                    </td>\n                                ))}\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n\n    return <div style={theme.tooltip.container}>{content}</div>\n})\n\nTableTooltip.displayName = 'TableTooltip'\n","import { CSSProperties, memo, useMemo } from 'react'\nimport { useSpring, animated } from '@react-spring/web'\nimport { useTheme, useMotionConfig } from '@nivo/core'\n\ninterface CrosshairLineProps {\n    x0: number\n    x1: number\n    y0: number\n    y1: number\n}\n\nexport const CrosshairLine = memo(({ x0, x1, y0, y1 }: CrosshairLineProps) => {\n    const theme = useTheme()\n    const { animate, config: springConfig } = useMotionConfig()\n    const style = useMemo(\n        () => ({\n            ...theme.crosshair.line,\n            pointerEvents: 'none' as CSSProperties['pointerEvents'],\n        }),\n        [theme.crosshair.line]\n    )\n\n    const animatedProps = useSpring({\n        x1: x0,\n        x2: x1,\n        y1: y0,\n        y2: y1,\n        config: springConfig,\n        immediate: !animate,\n    })\n\n    return <animated.line {...animatedProps} fill=\"none\" style={style} />\n})\n\nCrosshairLine.displayName = 'CrosshairLine'\n","import { memo } from 'react'\nimport { CrosshairLine } from './CrosshairLine'\nimport { CrosshairType } from './types'\n\ninterface CrosshairProps {\n    width: number\n    height: number\n    type: CrosshairType\n    x: number\n    y: number\n}\n\nexport const Crosshair = memo(({ width, height, type, x, y }: CrosshairProps) => {\n    let xLine\n    let yLine\n    if (type === 'cross') {\n        xLine = { x0: x, x1: x, y0: 0, y1: height }\n        yLine = { x0: 0, x1: width, y0: y, y1: y }\n    } else if (type === 'top-left') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'top') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n    } else if (type === 'top-right') {\n        xLine = { x0: x, x1: x, y0: 0, y1: y }\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'right') {\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'bottom-right') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n        yLine = { x0: x, x1: width, y0: y, y1: y }\n    } else if (type === 'bottom') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n    } else if (type === 'bottom-left') {\n        xLine = { x0: x, x1: x, y0: y, y1: height }\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'left') {\n        yLine = { x0: 0, x1: x, y0: y, y1: y }\n    } else if (type === 'x') {\n        xLine = { x0: x, x1: x, y0: 0, y1: height }\n    } else if (type === 'y') {\n        yLine = { x0: 0, x1: width, y0: y, y1: y }\n    }\n\n    return (\n        <>\n            {xLine && <CrosshairLine x0={xLine.x0} x1={xLine.x1} y0={xLine.y0} y1={xLine.y1} />}\n            {yLine && <CrosshairLine x0={yLine.x0} x1={yLine.x1} y0={yLine.y0} y1={yLine.y1} />}\n        </>\n    )\n})\n\nCrosshair.displayName = 'Crosshair'\n","import { createContext, MouseEvent } from 'react'\nimport { TooltipAnchor } from './types'\n\nexport interface TooltipActionsContextData {\n    showTooltipAt: (\n        content: JSX.Element,\n        position: [number, number],\n        anchor?: TooltipAnchor\n    ) => void\n    showTooltipFromEvent: (content: JSX.Element, event: MouseEvent, anchor?: TooltipAnchor) => void\n    hideTooltip: () => void\n}\n\nconst defaultActions: TooltipActionsContextData = {\n    showTooltipAt: () => {},\n    showTooltipFromEvent: () => {},\n    hideTooltip: () => {},\n}\n\nexport const TooltipActionsContext = createContext<TooltipActionsContextData>(defaultActions)\n\nexport interface TooltipStateContextDataVisible {\n    isVisible: true\n    position: [number, number]\n    content: JSX.Element\n    anchor: TooltipAnchor\n}\n\nexport interface TooltipStateContextDataHidden {\n    isVisible: false\n    position: [null, null]\n    content: null\n    anchor: null\n}\n\nexport type TooltipStateContextData = TooltipStateContextDataVisible | TooltipStateContextDataHidden\n\nexport const hiddenTooltipState: TooltipStateContextDataHidden = {\n    isVisible: false,\n    position: [null, null],\n    content: null,\n    anchor: null,\n}\n\nexport const TooltipStateContext = createContext<TooltipStateContextData>(hiddenTooltipState)\n","import { useState, useContext, useCallback, MutableRefObject, MouseEvent, useMemo } from 'react'\nimport {\n    TooltipActionsContext,\n    TooltipActionsContextData,\n    TooltipStateContext,\n    TooltipStateContextData,\n    hiddenTooltipState,\n} from './context'\nimport { TooltipAnchor } from './types'\n\nexport const useTooltipHandlers = (container: MutableRefObject<HTMLDivElement>) => {\n    const [state, setState] = useState<TooltipStateContextData>(hiddenTooltipState)\n\n    const showTooltipAt: TooltipActionsContextData['showTooltipAt'] = useCallback(\n        (content: JSX.Element, [x, y]: [number, number], anchor: TooltipAnchor = 'top') => {\n            setState({\n                isVisible: true,\n                position: [x, y],\n                anchor,\n                content,\n            })\n        },\n        [setState]\n    )\n\n    const showTooltipFromEvent: TooltipActionsContextData['showTooltipFromEvent'] = useCallback(\n        (content: JSX.Element, event: MouseEvent, anchor: TooltipAnchor = 'top') => {\n            const bounds = container.current.getBoundingClientRect()\n            const x = event.clientX - bounds.left\n            const y = event.clientY - bounds.top\n\n            if (anchor === 'left' || anchor === 'right') {\n                if (x < bounds.width / 2) anchor = 'right'\n                else anchor = 'left'\n            }\n\n            setState({\n                isVisible: true,\n                position: [x, y],\n                anchor,\n                content,\n            })\n        },\n        [container, setState]\n    )\n\n    const hideTooltip = useCallback(() => {\n        setState(hiddenTooltipState)\n    }, [setState])\n\n    const actions: TooltipActionsContextData = useMemo(() => {\n        return {\n            showTooltipAt,\n            showTooltipFromEvent,\n            hideTooltip,\n        }\n    }, [showTooltipAt, showTooltipFromEvent, hideTooltip])\n\n    return {\n        actions,\n        state,\n    }\n}\n\nexport const useTooltip = () => {\n    const context = useContext(TooltipActionsContext)\n    if (context === undefined) {\n        throw new Error('useTooltip must be used within a TooltipProvider')\n    }\n\n    return context\n}\n\nexport const useTooltipState = () => {\n    const context = useContext(TooltipStateContext)\n    if (context === undefined) {\n        throw new Error('useTooltipState must be used within a TooltipProvider')\n    }\n\n    return context\n}\n","import { useTooltipState } from './hooks'\nimport { TooltipWrapper } from './TooltipWrapper'\nimport { TooltipStateContextData, TooltipStateContextDataVisible } from './context'\n\nexport const isVisibleTooltipState = (\n    state: TooltipStateContextData\n): state is TooltipStateContextDataVisible => state.isVisible\n\nexport const Tooltip = () => {\n    const state = useTooltipState()\n\n    if (!isVisibleTooltipState(state)) {\n        return null\n    }\n\n    return (\n        <TooltipWrapper position={state.position} anchor={state.anchor}>\n            {state.content}\n        </TooltipWrapper>\n    )\n}\n","import { PropsWithChildren, MutableRefObject } from 'react'\nimport { TooltipActionsContext, TooltipStateContext } from './context'\nimport { useTooltipHandlers } from './hooks'\n\ninterface TooltipProviderProps {\n    container: MutableRefObject<HTMLDivElement>\n}\n\nexport const TooltipProvider = ({\n    container,\n    children,\n}: PropsWithChildren<TooltipProviderProps>) => {\n    const { actions, state } = useTooltipHandlers(container)\n\n    return (\n        <TooltipActionsContext.Provider value={actions}>\n            <TooltipStateContext.Provider value={state}>{children}</TooltipStateContext.Provider>\n        </TooltipActionsContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}